/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 15.0, "minX": 0.0, "maxY": 5341.0, "series": [{"data": [[0.0, 182.0], [0.1, 182.0], [0.2, 182.0], [0.3, 182.0], [0.4, 229.0], [0.5, 229.0], [0.6, 229.0], [0.7, 252.0], [0.8, 265.0], [0.9, 265.0], [1.0, 309.0], [1.1, 309.0], [1.2, 339.0], [1.3, 339.0], [1.4, 377.0], [1.5, 377.0], [1.6, 385.0], [1.7, 385.0], [1.8, 413.0], [1.9, 413.0], [2.0, 431.0], [2.1, 431.0], [2.2, 435.0], [2.3, 435.0], [2.4, 475.0], [2.5, 475.0], [2.6, 493.0], [2.7, 493.0], [2.8, 493.0], [2.9, 506.0], [3.0, 506.0], [3.1, 508.0], [3.2, 508.0], [3.3, 559.0], [3.4, 559.0], [3.5, 573.0], [3.6, 573.0], [3.7, 581.0], [3.8, 581.0], [3.9, 598.0], [4.0, 598.0], [4.1, 609.0], [4.2, 609.0], [4.3, 620.0], [4.4, 620.0], [4.5, 630.0], [4.6, 630.0], [4.7, 647.0], [4.8, 647.0], [4.9, 648.0], [5.0, 648.0], [5.1, 672.0], [5.2, 672.0], [5.3, 685.0], [5.4, 685.0], [5.5, 715.0], [5.6, 715.0], [5.7, 724.0], [5.8, 724.0], [5.9, 731.0], [6.0, 731.0], [6.1, 736.0], [6.2, 736.0], [6.3, 750.0], [6.4, 750.0], [6.5, 756.0], [6.6, 756.0], [6.7, 758.0], [6.8, 758.0], [6.9, 789.0], [7.0, 789.0], [7.1, 814.0], [7.2, 814.0], [7.3, 830.0], [7.4, 830.0], [7.5, 838.0], [7.6, 838.0], [7.7, 841.0], [7.8, 841.0], [7.9, 843.0], [8.0, 843.0], [8.1, 850.0], [8.2, 850.0], [8.3, 857.0], [8.4, 857.0], [8.5, 866.0], [8.6, 866.0], [8.7, 891.0], [8.8, 901.0], [8.9, 901.0], [9.0, 909.0], [9.1, 909.0], [9.2, 919.0], [9.3, 919.0], [9.4, 923.0], [9.5, 923.0], [9.6, 923.0], [9.7, 923.0], [9.8, 931.0], [9.9, 931.0], [10.0, 937.0], [10.1, 937.0], [10.2, 966.0], [10.3, 966.0], [10.4, 982.0], [10.5, 982.0], [10.6, 984.0], [10.7, 984.0], [10.8, 1005.0], [10.9, 1005.0], [11.0, 1006.0], [11.1, 1006.0], [11.2, 1020.0], [11.3, 1020.0], [11.4, 1020.0], [11.5, 1020.0], [11.6, 1024.0], [11.7, 1024.0], [11.8, 1035.0], [11.9, 1035.0], [12.0, 1061.0], [12.1, 1061.0], [12.2, 1065.0], [12.3, 1065.0], [12.4, 1066.0], [12.5, 1066.0], [12.6, 1070.0], [12.7, 1070.0], [12.8, 1082.0], [12.9, 1082.0], [13.0, 1096.0], [13.1, 1096.0], [13.2, 1103.0], [13.3, 1103.0], [13.4, 1104.0], [13.5, 1104.0], [13.6, 1113.0], [13.7, 1113.0], [13.8, 1130.0], [13.9, 1130.0], [14.0, 1130.0], [14.1, 1130.0], [14.2, 1154.0], [14.3, 1154.0], [14.4, 1169.0], [14.5, 1169.0], [14.6, 1179.0], [14.7, 1179.0], [14.8, 1181.0], [14.9, 1181.0], [15.0, 1181.0], [15.1, 1181.0], [15.2, 1192.0], [15.3, 1192.0], [15.4, 1210.0], [15.5, 1210.0], [15.6, 1234.0], [15.7, 1234.0], [15.8, 1243.0], [15.9, 1243.0], [16.0, 1272.0], [16.1, 1272.0], [16.2, 1273.0], [16.3, 1273.0], [16.4, 1288.0], [16.5, 1288.0], [16.6, 1288.0], [16.7, 1288.0], [16.8, 1291.0], [16.9, 1291.0], [17.0, 1294.0], [17.1, 1294.0], [17.2, 1304.0], [17.3, 1304.0], [17.4, 1350.0], [17.5, 1350.0], [17.6, 1355.0], [17.7, 1355.0], [17.8, 1358.0], [17.9, 1358.0], [18.0, 1380.0], [18.1, 1380.0], [18.2, 1383.0], [18.3, 1383.0], [18.4, 1406.0], [18.5, 1406.0], [18.6, 1408.0], [18.7, 1408.0], [18.8, 1411.0], [18.9, 1411.0], [19.0, 1416.0], [19.1, 1416.0], [19.2, 1445.0], [19.3, 1445.0], [19.4, 1447.0], [19.5, 1447.0], [19.6, 1461.0], [19.7, 1461.0], [19.8, 1467.0], [19.9, 1467.0], [20.0, 1479.0], [20.1, 1479.0], [20.2, 1502.0], [20.3, 1502.0], [20.4, 1503.0], [20.5, 1503.0], [20.6, 1537.0], [20.7, 1537.0], [20.8, 1540.0], [20.9, 1540.0], [21.0, 1543.0], [21.1, 1543.0], [21.2, 1560.0], [21.3, 1560.0], [21.4, 1565.0], [21.5, 1565.0], [21.6, 1602.0], [21.7, 1602.0], [21.8, 1606.0], [21.9, 1606.0], [22.0, 1608.0], [22.1, 1608.0], [22.2, 1617.0], [22.3, 1617.0], [22.4, 1622.0], [22.5, 1622.0], [22.6, 1643.0], [22.7, 1643.0], [22.8, 1643.0], [22.9, 1643.0], [23.0, 1665.0], [23.1, 1665.0], [23.2, 1671.0], [23.3, 1671.0], [23.4, 1672.0], [23.5, 1672.0], [23.6, 1683.0], [23.7, 1683.0], [23.8, 1686.0], [23.9, 1686.0], [24.0, 1719.0], [24.1, 1719.0], [24.2, 1719.0], [24.3, 1719.0], [24.4, 1722.0], [24.5, 1722.0], [24.6, 1727.0], [24.7, 1727.0], [24.8, 1760.0], [24.9, 1760.0], [25.0, 1761.0], [25.1, 1761.0], [25.2, 1761.0], [25.3, 1761.0], [25.4, 1765.0], [25.5, 1765.0], [25.6, 1794.0], [25.7, 1794.0], [25.8, 1795.0], [25.9, 1795.0], [26.0, 1807.0], [26.1, 1807.0], [26.2, 1817.0], [26.3, 1817.0], [26.4, 1818.0], [26.5, 1818.0], [26.6, 1830.0], [26.7, 1830.0], [26.8, 1837.0], [26.9, 1837.0], [27.0, 1845.0], [27.1, 1845.0], [27.2, 1846.0], [27.3, 1846.0], [27.4, 1875.0], [27.5, 1875.0], [27.6, 1878.0], [27.7, 1878.0], [27.8, 1889.0], [27.9, 1889.0], [28.0, 1892.0], [28.1, 1892.0], [28.2, 1893.0], [28.3, 1893.0], [28.4, 1915.0], [28.5, 1915.0], [28.6, 1921.0], [28.7, 1921.0], [28.8, 1923.0], [28.9, 1923.0], [29.0, 1930.0], [29.1, 1930.0], [29.2, 1949.0], [29.3, 1949.0], [29.4, 1958.0], [29.5, 1958.0], [29.6, 1978.0], [29.7, 1978.0], [29.8, 1986.0], [29.9, 1986.0], [30.0, 1999.0], [30.1, 1999.0], [30.2, 2020.0], [30.3, 2020.0], [30.4, 2028.0], [30.5, 2028.0], [30.6, 2029.0], [30.7, 2029.0], [30.8, 2047.0], [30.9, 2047.0], [31.0, 2054.0], [31.1, 2054.0], [31.2, 2060.0], [31.3, 2060.0], [31.4, 2068.0], [31.5, 2068.0], [31.6, 2079.0], [31.7, 2079.0], [31.8, 2084.0], [31.9, 2084.0], [32.0, 2111.0], [32.1, 2111.0], [32.2, 2117.0], [32.3, 2117.0], [32.4, 2122.0], [32.5, 2122.0], [32.6, 2124.0], [32.7, 2124.0], [32.8, 2145.0], [32.9, 2145.0], [33.0, 2152.0], [33.1, 2152.0], [33.2, 2209.0], [33.3, 2209.0], [33.4, 2209.0], [33.5, 2209.0], [33.6, 2212.0], [33.7, 2212.0], [33.8, 2225.0], [33.9, 2225.0], [34.0, 2233.0], [34.1, 2233.0], [34.2, 2236.0], [34.3, 2236.0], [34.4, 2240.0], [34.5, 2240.0], [34.6, 2259.0], [34.7, 2259.0], [34.8, 2266.0], [34.9, 2266.0], [35.0, 2280.0], [35.1, 2280.0], [35.2, 2284.0], [35.3, 2284.0], [35.4, 2287.0], [35.5, 2287.0], [35.6, 2308.0], [35.7, 2308.0], [35.8, 2311.0], [35.9, 2311.0], [36.0, 2321.0], [36.1, 2321.0], [36.2, 2334.0], [36.3, 2334.0], [36.4, 2337.0], [36.5, 2337.0], [36.6, 2355.0], [36.7, 2355.0], [36.8, 2364.0], [36.9, 2364.0], [37.0, 2367.0], [37.1, 2367.0], [37.2, 2379.0], [37.3, 2379.0], [37.4, 2384.0], [37.5, 2384.0], [37.6, 2386.0], [37.7, 2386.0], [37.8, 2391.0], [37.9, 2391.0], [38.0, 2401.0], [38.1, 2401.0], [38.2, 2418.0], [38.3, 2418.0], [38.4, 2418.0], [38.5, 2421.0], [38.6, 2421.0], [38.7, 2432.0], [38.8, 2432.0], [38.9, 2439.0], [39.0, 2439.0], [39.1, 2441.0], [39.2, 2441.0], [39.3, 2463.0], [39.4, 2463.0], [39.5, 2464.0], [39.6, 2464.0], [39.7, 2466.0], [39.8, 2466.0], [39.9, 2470.0], [40.0, 2470.0], [40.1, 2486.0], [40.2, 2486.0], [40.3, 2493.0], [40.4, 2493.0], [40.5, 2503.0], [40.6, 2503.0], [40.7, 2505.0], [40.8, 2505.0], [40.9, 2518.0], [41.0, 2518.0], [41.1, 2537.0], [41.2, 2537.0], [41.3, 2539.0], [41.4, 2539.0], [41.5, 2566.0], [41.6, 2566.0], [41.7, 2574.0], [41.8, 2574.0], [41.9, 2581.0], [42.0, 2581.0], [42.1, 2591.0], [42.2, 2591.0], [42.3, 2615.0], [42.4, 2615.0], [42.5, 2635.0], [42.6, 2635.0], [42.7, 2638.0], [42.8, 2638.0], [42.9, 2669.0], [43.0, 2669.0], [43.1, 2677.0], [43.2, 2677.0], [43.3, 2693.0], [43.4, 2693.0], [43.5, 2697.0], [43.6, 2697.0], [43.7, 2717.0], [43.8, 2717.0], [43.9, 2727.0], [44.0, 2727.0], [44.1, 2740.0], [44.2, 2740.0], [44.3, 2750.0], [44.4, 2750.0], [44.5, 2760.0], [44.6, 2760.0], [44.7, 2782.0], [44.8, 2782.0], [44.9, 2785.0], [45.0, 2785.0], [45.1, 2806.0], [45.2, 2806.0], [45.3, 2808.0], [45.4, 2808.0], [45.5, 2838.0], [45.6, 2838.0], [45.7, 2841.0], [45.8, 2841.0], [45.9, 2856.0], [46.0, 2856.0], [46.1, 2867.0], [46.2, 2867.0], [46.3, 2873.0], [46.4, 2873.0], [46.5, 2890.0], [46.6, 2890.0], [46.7, 2894.0], [46.8, 2894.0], [46.9, 2904.0], [47.0, 2904.0], [47.1, 2917.0], [47.2, 2917.0], [47.3, 2919.0], [47.4, 2919.0], [47.5, 2928.0], [47.6, 2928.0], [47.7, 2943.0], [47.8, 2943.0], [47.9, 2954.0], [48.0, 2954.0], [48.1, 2955.0], [48.2, 2955.0], [48.3, 2978.0], [48.4, 2978.0], [48.5, 2995.0], [48.6, 2995.0], [48.7, 3025.0], [48.8, 3025.0], [48.9, 3027.0], [49.0, 3027.0], [49.1, 3040.0], [49.2, 3040.0], [49.3, 3055.0], [49.4, 3055.0], [49.5, 3059.0], [49.6, 3059.0], [49.7, 3061.0], [49.8, 3061.0], [49.9, 3074.0], [50.0, 3074.0], [50.1, 3080.0], [50.2, 3080.0], [50.3, 3081.0], [50.4, 3081.0], [50.5, 3091.0], [50.6, 3091.0], [50.7, 3095.0], [50.8, 3095.0], [50.9, 3101.0], [51.0, 3101.0], [51.1, 3106.0], [51.2, 3106.0], [51.3, 3109.0], [51.4, 3109.0], [51.5, 3119.0], [51.6, 3119.0], [51.7, 3119.0], [51.8, 3119.0], [51.9, 3123.0], [52.0, 3123.0], [52.1, 3138.0], [52.2, 3138.0], [52.3, 3139.0], [52.4, 3139.0], [52.5, 3163.0], [52.6, 3163.0], [52.7, 3165.0], [52.8, 3165.0], [52.9, 3173.0], [53.0, 3173.0], [53.1, 3182.0], [53.2, 3182.0], [53.3, 3186.0], [53.4, 3186.0], [53.5, 3198.0], [53.6, 3198.0], [53.7, 3205.0], [53.8, 3205.0], [53.9, 3215.0], [54.0, 3215.0], [54.1, 3222.0], [54.2, 3222.0], [54.3, 3223.0], [54.4, 3223.0], [54.5, 3227.0], [54.6, 3227.0], [54.7, 3230.0], [54.8, 3230.0], [54.9, 3238.0], [55.0, 3238.0], [55.1, 3239.0], [55.2, 3239.0], [55.3, 3249.0], [55.4, 3249.0], [55.5, 3253.0], [55.6, 3253.0], [55.7, 3253.0], [55.8, 3253.0], [55.9, 3257.0], [56.0, 3257.0], [56.1, 3260.0], [56.2, 3260.0], [56.3, 3275.0], [56.4, 3275.0], [56.5, 3286.0], [56.6, 3286.0], [56.7, 3287.0], [56.8, 3287.0], [56.9, 3294.0], [57.0, 3294.0], [57.1, 3299.0], [57.2, 3299.0], [57.3, 3300.0], [57.4, 3300.0], [57.5, 3306.0], [57.6, 3306.0], [57.7, 3316.0], [57.8, 3316.0], [57.9, 3327.0], [58.0, 3327.0], [58.1, 3334.0], [58.2, 3334.0], [58.3, 3341.0], [58.4, 3341.0], [58.5, 3343.0], [58.6, 3343.0], [58.7, 3344.0], [58.8, 3344.0], [58.9, 3350.0], [59.0, 3350.0], [59.1, 3352.0], [59.2, 3352.0], [59.3, 3359.0], [59.4, 3359.0], [59.5, 3367.0], [59.6, 3367.0], [59.7, 3378.0], [59.8, 3378.0], [59.9, 3383.0], [60.0, 3383.0], [60.1, 3390.0], [60.2, 3390.0], [60.3, 3398.0], [60.4, 3398.0], [60.5, 3406.0], [60.6, 3406.0], [60.7, 3412.0], [60.8, 3412.0], [60.9, 3417.0], [61.0, 3417.0], [61.1, 3420.0], [61.2, 3420.0], [61.3, 3426.0], [61.4, 3426.0], [61.5, 3432.0], [61.6, 3432.0], [61.7, 3433.0], [61.8, 3433.0], [61.9, 3439.0], [62.0, 3439.0], [62.1, 3445.0], [62.2, 3445.0], [62.3, 3454.0], [62.4, 3454.0], [62.5, 3464.0], [62.6, 3464.0], [62.7, 3466.0], [62.8, 3466.0], [62.9, 3471.0], [63.0, 3471.0], [63.1, 3481.0], [63.2, 3481.0], [63.3, 3487.0], [63.4, 3487.0], [63.5, 3487.0], [63.6, 3487.0], [63.7, 3493.0], [63.8, 3493.0], [63.9, 3500.0], [64.0, 3500.0], [64.1, 3519.0], [64.2, 3519.0], [64.3, 3523.0], [64.4, 3523.0], [64.5, 3531.0], [64.6, 3531.0], [64.7, 3532.0], [64.8, 3532.0], [64.9, 3541.0], [65.0, 3541.0], [65.1, 3548.0], [65.2, 3548.0], [65.3, 3549.0], [65.4, 3549.0], [65.5, 3560.0], [65.6, 3560.0], [65.7, 3594.0], [65.8, 3594.0], [65.9, 3605.0], [66.0, 3605.0], [66.1, 3609.0], [66.2, 3609.0], [66.3, 3613.0], [66.4, 3613.0], [66.5, 3622.0], [66.6, 3622.0], [66.7, 3637.0], [66.8, 3637.0], [66.9, 3658.0], [67.0, 3658.0], [67.1, 3663.0], [67.2, 3663.0], [67.3, 3663.0], [67.4, 3663.0], [67.5, 3669.0], [67.6, 3669.0], [67.7, 3669.0], [67.8, 3669.0], [67.9, 3698.0], [68.0, 3698.0], [68.1, 3718.0], [68.2, 3718.0], [68.3, 3730.0], [68.4, 3730.0], [68.5, 3740.0], [68.6, 3740.0], [68.7, 3742.0], [68.8, 3742.0], [68.9, 3745.0], [69.0, 3745.0], [69.1, 3774.0], [69.2, 3774.0], [69.3, 3784.0], [69.4, 3784.0], [69.5, 3794.0], [69.6, 3794.0], [69.7, 3813.0], [69.8, 3813.0], [69.9, 3818.0], [70.0, 3818.0], [70.1, 3838.0], [70.2, 3838.0], [70.3, 3842.0], [70.4, 3842.0], [70.5, 3842.0], [70.6, 3842.0], [70.7, 3859.0], [70.8, 3859.0], [70.9, 3868.0], [71.0, 3868.0], [71.1, 3875.0], [71.2, 3875.0], [71.3, 3877.0], [71.4, 3877.0], [71.5, 3893.0], [71.6, 3893.0], [71.7, 3902.0], [71.8, 3902.0], [71.9, 3909.0], [72.0, 3909.0], [72.1, 3915.0], [72.2, 3915.0], [72.3, 3974.0], [72.4, 3974.0], [72.5, 3987.0], [72.6, 3987.0], [72.7, 3990.0], [72.8, 3990.0], [72.9, 3999.0], [73.0, 3999.0], [73.1, 4011.0], [73.2, 4011.0], [73.3, 4018.0], [73.4, 4018.0], [73.5, 4020.0], [73.6, 4020.0], [73.7, 4028.0], [73.8, 4028.0], [73.9, 4042.0], [74.0, 4042.0], [74.1, 4045.0], [74.2, 4045.0], [74.3, 4050.0], [74.4, 4050.0], [74.5, 4078.0], [74.6, 4078.0], [74.7, 4111.0], [74.8, 4111.0], [74.9, 4114.0], [75.0, 4114.0], [75.1, 4118.0], [75.2, 4118.0], [75.3, 4142.0], [75.4, 4142.0], [75.5, 4159.0], [75.6, 4159.0], [75.7, 4164.0], [75.8, 4164.0], [75.9, 4169.0], [76.0, 4169.0], [76.1, 4172.0], [76.2, 4172.0], [76.3, 4172.0], [76.4, 4172.0], [76.5, 4173.0], [76.6, 4173.0], [76.7, 4183.0], [76.8, 4183.0], [76.9, 4183.0], [77.0, 4183.0], [77.1, 4187.0], [77.2, 4187.0], [77.3, 4224.0], [77.4, 4224.0], [77.5, 4235.0], [77.6, 4235.0], [77.7, 4235.0], [77.8, 4235.0], [77.9, 4238.0], [78.0, 4238.0], [78.1, 4297.0], [78.2, 4297.0], [78.3, 4297.0], [78.4, 4297.0], [78.5, 4305.0], [78.6, 4305.0], [78.7, 4306.0], [78.8, 4306.0], [78.9, 4308.0], [79.0, 4308.0], [79.1, 4316.0], [79.2, 4316.0], [79.3, 4319.0], [79.4, 4319.0], [79.5, 4323.0], [79.6, 4323.0], [79.7, 4325.0], [79.8, 4325.0], [79.9, 4338.0], [80.0, 4338.0], [80.1, 4363.0], [80.2, 4363.0], [80.3, 4380.0], [80.4, 4380.0], [80.5, 4382.0], [80.6, 4382.0], [80.7, 4382.0], [80.8, 4382.0], [80.9, 4422.0], [81.0, 4422.0], [81.1, 4457.0], [81.2, 4457.0], [81.3, 4458.0], [81.4, 4458.0], [81.5, 4462.0], [81.6, 4462.0], [81.7, 4472.0], [81.8, 4472.0], [81.9, 4476.0], [82.0, 4476.0], [82.1, 4488.0], [82.2, 4488.0], [82.3, 4494.0], [82.4, 4494.0], [82.5, 4524.0], [82.6, 4524.0], [82.7, 4531.0], [82.8, 4531.0], [82.9, 4535.0], [83.0, 4535.0], [83.1, 4535.0], [83.2, 4535.0], [83.3, 4544.0], [83.4, 4544.0], [83.5, 4545.0], [83.6, 4545.0], [83.7, 4549.0], [83.8, 4549.0], [83.9, 4553.0], [84.0, 4553.0], [84.1, 4567.0], [84.2, 4567.0], [84.3, 4590.0], [84.4, 4590.0], [84.5, 4591.0], [84.6, 4591.0], [84.7, 4598.0], [84.8, 4598.0], [84.9, 4608.0], [85.0, 4608.0], [85.1, 4618.0], [85.2, 4618.0], [85.3, 4678.0], [85.4, 4678.0], [85.5, 4688.0], [85.6, 4688.0], [85.7, 4690.0], [85.8, 4690.0], [85.9, 4704.0], [86.0, 4704.0], [86.1, 4718.0], [86.2, 4718.0], [86.3, 4723.0], [86.4, 4723.0], [86.5, 4757.0], [86.6, 4757.0], [86.7, 4759.0], [86.8, 4759.0], [86.9, 4761.0], [87.0, 4761.0], [87.1, 4774.0], [87.2, 4774.0], [87.3, 4782.0], [87.4, 4782.0], [87.5, 4792.0], [87.6, 4792.0], [87.7, 4793.0], [87.8, 4793.0], [87.9, 4800.0], [88.0, 4800.0], [88.1, 4800.0], [88.2, 4800.0], [88.3, 4803.0], [88.4, 4803.0], [88.5, 4805.0], [88.6, 4805.0], [88.7, 4806.0], [88.8, 4806.0], [88.9, 4809.0], [89.0, 4809.0], [89.1, 4836.0], [89.2, 4836.0], [89.3, 4843.0], [89.4, 4843.0], [89.5, 4845.0], [89.6, 4845.0], [89.7, 4847.0], [89.8, 4847.0], [89.9, 4851.0], [90.0, 4851.0], [90.1, 4870.0], [90.2, 4870.0], [90.3, 4880.0], [90.4, 4880.0], [90.5, 4884.0], [90.6, 4884.0], [90.7, 4893.0], [90.8, 4893.0], [90.9, 4894.0], [91.0, 4894.0], [91.1, 4929.0], [91.2, 4929.0], [91.3, 4933.0], [91.4, 4933.0], [91.5, 4934.0], [91.6, 4934.0], [91.7, 4935.0], [91.8, 4935.0], [91.9, 4939.0], [92.0, 4939.0], [92.1, 4940.0], [92.2, 4940.0], [92.3, 4942.0], [92.4, 4942.0], [92.5, 4954.0], [92.6, 4954.0], [92.7, 4965.0], [92.8, 4965.0], [92.9, 4967.0], [93.0, 4967.0], [93.1, 4984.0], [93.2, 4984.0], [93.3, 4986.0], [93.4, 4986.0], [93.5, 5019.0], [93.6, 5019.0], [93.7, 5019.0], [93.8, 5019.0], [93.9, 5022.0], [94.0, 5022.0], [94.1, 5042.0], [94.2, 5042.0], [94.3, 5051.0], [94.4, 5051.0], [94.5, 5053.0], [94.6, 5053.0], [94.7, 5070.0], [94.8, 5070.0], [94.9, 5076.0], [95.0, 5076.0], [95.1, 5088.0], [95.2, 5088.0], [95.3, 5098.0], [95.4, 5098.0], [95.5, 5103.0], [95.6, 5103.0], [95.7, 5104.0], [95.8, 5104.0], [95.9, 5106.0], [96.0, 5106.0], [96.1, 5106.0], [96.2, 5106.0], [96.3, 5110.0], [96.4, 5110.0], [96.5, 5114.0], [96.6, 5114.0], [96.7, 5120.0], [96.8, 5120.0], [96.9, 5157.0], [97.0, 5157.0], [97.1, 5203.0], [97.2, 5203.0], [97.3, 5219.0], [97.4, 5219.0], [97.5, 5228.0], [97.6, 5228.0], [97.7, 5237.0], [97.8, 5237.0], [97.9, 5238.0], [98.0, 5238.0], [98.1, 5246.0], [98.2, 5246.0], [98.3, 5253.0], [98.4, 5253.0], [98.5, 5261.0], [98.6, 5261.0], [98.7, 5280.0], [98.8, 5280.0], [98.9, 5282.0], [99.0, 5282.0], [99.1, 5283.0], [99.2, 5283.0], [99.3, 5303.0], [99.4, 5303.0], [99.5, 5309.0], [99.6, 5309.0], [99.7, 5316.0], [99.8, 5316.0], [99.9, 5341.0], [100.0, 5341.0]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[0.0, 18.0], [0.1, 18.0], [0.2, 18.0], [0.3, 18.0], [0.4, 18.0], [0.5, 18.0], [0.6, 19.0], [0.7, 19.0], [0.8, 19.0], [0.9, 19.0], [1.0, 19.0], [1.1, 19.0], [1.2, 19.0], [1.3, 19.0], [1.4, 20.0], [1.5, 20.0], [1.6, 20.0], [1.7, 20.0], [1.8, 20.0], [1.9, 20.0], [2.0, 20.0], [2.1, 20.0], [2.2, 21.0], [2.3, 21.0], [2.4, 21.0], [2.5, 21.0], [2.6, 21.0], [2.7, 21.0], [2.8, 21.0], [2.9, 21.0], [3.0, 21.0], [3.1, 21.0], [3.2, 22.0], [3.3, 22.0], [3.4, 22.0], [3.5, 22.0], [3.6, 22.0], [3.7, 22.0], [3.8, 22.0], [3.9, 22.0], [4.0, 22.0], [4.1, 22.0], [4.2, 22.0], [4.3, 22.0], [4.4, 22.0], [4.5, 22.0], [4.6, 22.0], [4.7, 22.0], [4.8, 22.0], [4.9, 23.0], [5.0, 23.0], [5.1, 23.0], [5.2, 23.0], [5.3, 23.0], [5.4, 23.0], [5.5, 23.0], [5.6, 23.0], [5.7, 23.0], [5.8, 23.0], [5.9, 23.0], [6.0, 23.0], [6.1, 23.0], [6.2, 23.0], [6.3, 23.0], [6.4, 23.0], [6.5, 23.0], [6.6, 23.0], [6.7, 23.0], [6.8, 23.0], [6.9, 23.0], [7.0, 23.0], [7.1, 23.0], [7.2, 23.0], [7.3, 23.0], [7.4, 24.0], [7.5, 24.0], [7.6, 24.0], [7.7, 24.0], [7.8, 24.0], [7.9, 24.0], [8.0, 24.0], [8.1, 24.0], [8.2, 24.0], [8.3, 24.0], [8.4, 24.0], [8.5, 24.0], [8.6, 24.0], [8.7, 24.0], [8.8, 24.0], [8.9, 24.0], [9.0, 24.0], [9.1, 24.0], [9.2, 24.0], [9.3, 24.0], [9.4, 25.0], [9.5, 25.0], [9.6, 25.0], [9.7, 25.0], [9.8, 25.0], [9.9, 25.0], [10.0, 25.0], [10.1, 25.0], [10.2, 25.0], [10.3, 25.0], [10.4, 25.0], [10.5, 25.0], [10.6, 25.0], [10.7, 25.0], [10.8, 25.0], [10.9, 25.0], [11.0, 25.0], [11.1, 25.0], [11.2, 25.0], [11.3, 25.0], [11.4, 25.0], [11.5, 25.0], [11.6, 25.0], [11.7, 25.0], [11.8, 26.0], [11.9, 26.0], [12.0, 26.0], [12.1, 26.0], [12.2, 26.0], [12.3, 26.0], [12.4, 26.0], [12.5, 26.0], [12.6, 26.0], [12.7, 26.0], [12.8, 26.0], [12.9, 26.0], [13.0, 26.0], [13.1, 26.0], [13.2, 26.0], [13.3, 26.0], [13.4, 26.0], [13.5, 26.0], [13.6, 26.0], [13.7, 26.0], [13.8, 26.0], [13.9, 26.0], [14.0, 26.0], [14.1, 26.0], [14.2, 26.0], [14.3, 27.0], [14.4, 27.0], [14.5, 27.0], [14.6, 27.0], [14.7, 27.0], [14.8, 27.0], [14.9, 27.0], [15.0, 27.0], [15.1, 27.0], [15.2, 27.0], [15.3, 27.0], [15.4, 27.0], [15.5, 27.0], [15.6, 27.0], [15.7, 27.0], [15.8, 27.0], [15.9, 27.0], [16.0, 27.0], [16.1, 27.0], [16.2, 27.0], [16.3, 27.0], [16.4, 27.0], [16.5, 27.0], [16.6, 27.0], [16.7, 27.0], [16.8, 27.0], [16.9, 27.0], [17.0, 28.0], [17.1, 28.0], [17.2, 28.0], [17.3, 28.0], [17.4, 28.0], [17.5, 28.0], [17.6, 28.0], [17.7, 28.0], [17.8, 28.0], [17.9, 28.0], [18.0, 28.0], [18.1, 28.0], [18.2, 28.0], [18.3, 28.0], [18.4, 28.0], [18.5, 28.0], [18.6, 28.0], [18.7, 28.0], [18.8, 28.0], [18.9, 28.0], [19.0, 28.0], [19.1, 28.0], [19.2, 28.0], [19.3, 28.0], [19.4, 28.0], [19.5, 28.0], [19.6, 28.0], [19.7, 28.0], [19.8, 28.0], [19.9, 28.0], [20.0, 28.0], [20.1, 28.0], [20.2, 28.0], [20.3, 28.0], [20.4, 29.0], [20.5, 29.0], [20.6, 29.0], [20.7, 29.0], [20.8, 29.0], [20.9, 29.0], [21.0, 29.0], [21.1, 29.0], [21.2, 29.0], [21.3, 29.0], [21.4, 29.0], [21.5, 29.0], [21.6, 29.0], [21.7, 29.0], [21.8, 29.0], [21.9, 29.0], [22.0, 29.0], [22.1, 29.0], [22.2, 29.0], [22.3, 29.0], [22.4, 29.0], [22.5, 29.0], [22.6, 29.0], [22.7, 29.0], [22.8, 29.0], [22.9, 29.0], [23.0, 30.0], [23.1, 30.0], [23.2, 30.0], [23.3, 30.0], [23.4, 30.0], [23.5, 30.0], [23.6, 30.0], [23.7, 30.0], [23.8, 30.0], [23.9, 30.0], [24.0, 30.0], [24.1, 30.0], [24.2, 30.0], [24.3, 30.0], [24.4, 30.0], [24.5, 30.0], [24.6, 30.0], [24.7, 30.0], [24.8, 31.0], [24.9, 31.0], [25.0, 31.0], [25.1, 31.0], [25.2, 31.0], [25.3, 31.0], [25.4, 31.0], [25.5, 31.0], [25.6, 31.0], [25.7, 31.0], [25.8, 31.0], [25.9, 31.0], [26.0, 31.0], [26.1, 31.0], [26.2, 31.0], [26.3, 31.0], [26.4, 31.0], [26.5, 31.0], [26.6, 31.0], [26.7, 31.0], [26.8, 31.0], [26.9, 31.0], [27.0, 31.0], [27.1, 31.0], [27.2, 31.0], [27.3, 31.0], [27.4, 31.0], [27.5, 31.0], [27.6, 32.0], [27.7, 32.0], [27.8, 32.0], [27.9, 32.0], [28.0, 32.0], [28.1, 32.0], [28.2, 32.0], [28.3, 32.0], [28.4, 32.0], [28.5, 32.0], [28.6, 32.0], [28.7, 32.0], [28.8, 32.0], [28.9, 32.0], [29.0, 32.0], [29.1, 32.0], [29.2, 32.0], [29.3, 32.0], [29.4, 32.0], [29.5, 32.0], [29.6, 32.0], [29.7, 32.0], [29.8, 32.0], [29.9, 32.0], [30.0, 33.0], [30.1, 33.0], [30.2, 33.0], [30.3, 33.0], [30.4, 33.0], [30.5, 33.0], [30.6, 33.0], [30.7, 33.0], [30.8, 33.0], [30.9, 33.0], [31.0, 33.0], [31.1, 33.0], [31.2, 33.0], [31.3, 33.0], [31.4, 33.0], [31.5, 33.0], [31.6, 33.0], [31.7, 33.0], [31.8, 33.0], [31.9, 33.0], [32.0, 33.0], [32.1, 33.0], [32.2, 33.0], [32.3, 33.0], [32.4, 33.0], [32.5, 33.0], [32.6, 33.0], [32.7, 33.0], [32.8, 34.0], [32.9, 34.0], [33.0, 34.0], [33.1, 34.0], [33.2, 34.0], [33.3, 34.0], [33.4, 34.0], [33.5, 34.0], [33.6, 34.0], [33.7, 34.0], [33.8, 34.0], [33.9, 34.0], [34.0, 34.0], [34.1, 34.0], [34.2, 34.0], [34.3, 34.0], [34.4, 34.0], [34.5, 34.0], [34.6, 35.0], [34.7, 35.0], [34.8, 35.0], [34.9, 35.0], [35.0, 35.0], [35.1, 35.0], [35.2, 35.0], [35.3, 35.0], [35.4, 35.0], [35.5, 35.0], [35.6, 35.0], [35.7, 35.0], [35.8, 35.0], [35.9, 35.0], [36.0, 35.0], [36.1, 35.0], [36.2, 35.0], [36.3, 35.0], [36.4, 35.0], [36.5, 35.0], [36.6, 35.0], [36.7, 35.0], [36.8, 35.0], [36.9, 35.0], [37.0, 35.0], [37.1, 35.0], [37.2, 36.0], [37.3, 36.0], [37.4, 36.0], [37.5, 36.0], [37.6, 36.0], [37.7, 36.0], [37.8, 36.0], [37.9, 36.0], [38.0, 36.0], [38.1, 36.0], [38.2, 36.0], [38.3, 36.0], [38.4, 36.0], [38.5, 36.0], [38.6, 36.0], [38.7, 36.0], [38.8, 36.0], [38.9, 36.0], [39.0, 36.0], [39.1, 36.0], [39.2, 36.0], [39.3, 36.0], [39.4, 37.0], [39.5, 37.0], [39.6, 37.0], [39.7, 37.0], [39.8, 37.0], [39.9, 37.0], [40.0, 37.0], [40.1, 37.0], [40.2, 37.0], [40.3, 37.0], [40.4, 37.0], [40.5, 37.0], [40.6, 37.0], [40.7, 37.0], [40.8, 37.0], [40.9, 37.0], [41.0, 37.0], [41.1, 37.0], [41.2, 37.0], [41.3, 37.0], [41.4, 37.0], [41.5, 37.0], [41.6, 37.0], [41.7, 37.0], [41.8, 37.0], [41.9, 37.0], [42.0, 38.0], [42.1, 38.0], [42.2, 38.0], [42.3, 38.0], [42.4, 38.0], [42.5, 38.0], [42.6, 38.0], [42.7, 38.0], [42.8, 38.0], [42.9, 38.0], [43.0, 38.0], [43.1, 38.0], [43.2, 39.0], [43.3, 39.0], [43.4, 39.0], [43.5, 39.0], [43.6, 39.0], [43.7, 39.0], [43.8, 39.0], [43.9, 39.0], [44.0, 40.0], [44.1, 40.0], [44.2, 40.0], [44.3, 40.0], [44.4, 40.0], [44.5, 40.0], [44.6, 40.0], [44.7, 40.0], [44.8, 40.0], [44.9, 40.0], [45.0, 41.0], [45.1, 41.0], [45.2, 41.0], [45.3, 41.0], [45.4, 42.0], [45.5, 42.0], [45.6, 42.0], [45.7, 42.0], [45.8, 42.0], [45.9, 42.0], [46.0, 43.0], [46.1, 43.0], [46.2, 43.0], [46.3, 43.0], [46.4, 43.0], [46.5, 43.0], [46.6, 43.0], [46.7, 43.0], [46.8, 44.0], [46.9, 44.0], [47.0, 44.0], [47.1, 44.0], [47.2, 44.0], [47.3, 44.0], [47.4, 44.0], [47.5, 44.0], [47.6, 44.0], [47.7, 44.0], [47.8, 44.0], [47.9, 44.0], [48.0, 45.0], [48.1, 45.0], [48.2, 45.0], [48.3, 45.0], [48.4, 45.0], [48.5, 45.0], [48.6, 45.0], [48.7, 45.0], [48.8, 45.0], [48.9, 45.0], [49.0, 45.0], [49.1, 45.0], [49.2, 46.0], [49.3, 46.0], [49.4, 46.0], [49.5, 46.0], [49.6, 46.0], [49.7, 46.0], [49.8, 46.0], [49.9, 46.0], [50.0, 47.0], [50.1, 47.0], [50.2, 47.0], [50.3, 47.0], [50.4, 48.0], [50.5, 48.0], [50.6, 48.0], [50.7, 48.0], [50.8, 49.0], [50.9, 49.0], [51.0, 50.0], [51.1, 50.0], [51.2, 51.0], [51.3, 51.0], [51.4, 51.0], [51.5, 51.0], [51.6, 51.0], [51.7, 51.0], [51.8, 51.0], [51.9, 51.0], [52.0, 52.0], [52.1, 52.0], [52.2, 52.0], [52.3, 52.0], [52.4, 53.0], [52.5, 53.0], [52.6, 53.0], [52.7, 53.0], [52.8, 53.0], [52.9, 53.0], [53.0, 54.0], [53.1, 54.0], [53.2, 54.0], [53.3, 54.0], [53.4, 54.0], [53.5, 54.0], [53.6, 54.0], [53.7, 54.0], [53.8, 55.0], [53.9, 55.0], [54.0, 55.0], [54.1, 55.0], [54.2, 55.0], [54.3, 55.0], [54.4, 56.0], [54.5, 56.0], [54.6, 56.0], [54.7, 56.0], [54.8, 56.0], [54.9, 56.0], [55.0, 56.0], [55.1, 56.0], [55.2, 59.0], [55.3, 59.0], [55.4, 61.0], [55.5, 61.0], [55.6, 61.0], [55.7, 61.0], [55.8, 61.0], [55.9, 61.0], [56.0, 63.0], [56.1, 63.0], [56.2, 64.0], [56.3, 64.0], [56.4, 64.0], [56.5, 65.0], [56.6, 65.0], [56.7, 65.0], [56.8, 65.0], [56.9, 65.0], [57.0, 65.0], [57.1, 68.0], [57.2, 68.0], [57.3, 68.0], [57.4, 68.0], [57.5, 70.0], [57.6, 70.0], [57.7, 70.0], [57.8, 70.0], [57.9, 70.0], [58.0, 70.0], [58.1, 72.0], [58.2, 72.0], [58.3, 74.0], [58.4, 74.0], [58.5, 74.0], [58.6, 74.0], [58.7, 74.0], [58.8, 74.0], [58.9, 75.0], [59.0, 75.0], [59.1, 78.0], [59.2, 78.0], [59.3, 80.0], [59.4, 80.0], [59.5, 83.0], [59.6, 83.0], [59.7, 85.0], [59.8, 85.0], [59.9, 86.0], [60.0, 86.0], [60.1, 89.0], [60.2, 89.0], [60.3, 94.0], [60.4, 94.0], [60.5, 95.0], [60.6, 95.0], [60.7, 97.0], [60.8, 97.0], [60.9, 98.0], [61.0, 98.0], [61.1, 100.0], [61.2, 100.0], [61.3, 101.0], [61.4, 101.0], [61.5, 103.0], [61.6, 103.0], [61.7, 106.0], [61.8, 106.0], [61.9, 107.0], [62.0, 107.0], [62.1, 108.0], [62.2, 108.0], [62.3, 108.0], [62.4, 108.0], [62.5, 113.0], [62.6, 113.0], [62.7, 115.0], [62.8, 115.0], [62.9, 115.0], [63.0, 115.0], [63.1, 116.0], [63.2, 116.0], [63.3, 119.0], [63.4, 119.0], [63.5, 121.0], [63.6, 121.0], [63.7, 122.0], [63.8, 122.0], [63.9, 124.0], [64.0, 124.0], [64.1, 124.0], [64.2, 124.0], [64.3, 124.0], [64.4, 124.0], [64.5, 125.0], [64.6, 125.0], [64.7, 126.0], [64.8, 126.0], [64.9, 127.0], [65.0, 127.0], [65.1, 128.0], [65.2, 128.0], [65.3, 130.0], [65.4, 130.0], [65.5, 135.0], [65.6, 135.0], [65.7, 135.0], [65.8, 135.0], [65.9, 135.0], [66.0, 135.0], [66.1, 135.0], [66.2, 135.0], [66.3, 135.0], [66.4, 135.0], [66.5, 136.0], [66.6, 136.0], [66.7, 138.0], [66.8, 138.0], [66.9, 138.0], [67.0, 138.0], [67.1, 139.0], [67.2, 139.0], [67.3, 139.0], [67.4, 139.0], [67.5, 141.0], [67.6, 141.0], [67.7, 142.0], [67.8, 142.0], [67.9, 143.0], [68.0, 143.0], [68.1, 145.0], [68.2, 145.0], [68.3, 147.0], [68.4, 147.0], [68.5, 147.0], [68.6, 147.0], [68.7, 150.0], [68.8, 150.0], [68.9, 151.0], [69.0, 151.0], [69.1, 151.0], [69.2, 151.0], [69.3, 151.0], [69.4, 151.0], [69.5, 152.0], [69.6, 152.0], [69.7, 153.0], [69.8, 153.0], [69.9, 153.0], [70.0, 153.0], [70.1, 154.0], [70.2, 154.0], [70.3, 154.0], [70.4, 154.0], [70.5, 154.0], [70.6, 154.0], [70.7, 154.0], [70.8, 154.0], [70.9, 157.0], [71.0, 157.0], [71.1, 158.0], [71.2, 158.0], [71.3, 159.0], [71.4, 159.0], [71.5, 160.0], [71.6, 160.0], [71.7, 162.0], [71.8, 162.0], [71.9, 163.0], [72.0, 163.0], [72.1, 164.0], [72.2, 164.0], [72.3, 164.0], [72.4, 164.0], [72.5, 164.0], [72.6, 164.0], [72.7, 165.0], [72.8, 165.0], [72.9, 167.0], [73.0, 167.0], [73.1, 168.0], [73.2, 168.0], [73.3, 168.0], [73.4, 168.0], [73.5, 169.0], [73.6, 169.0], [73.7, 169.0], [73.8, 169.0], [73.9, 169.0], [74.0, 169.0], [74.1, 169.0], [74.2, 169.0], [74.3, 171.0], [74.4, 171.0], [74.5, 172.0], [74.6, 172.0], [74.7, 174.0], [74.8, 174.0], [74.9, 174.0], [75.0, 174.0], [75.1, 174.0], [75.2, 174.0], [75.3, 174.0], [75.4, 174.0], [75.5, 175.0], [75.6, 175.0], [75.7, 176.0], [75.8, 176.0], [75.9, 177.0], [76.0, 177.0], [76.1, 178.0], [76.2, 178.0], [76.3, 179.0], [76.4, 179.0], [76.5, 181.0], [76.6, 181.0], [76.7, 181.0], [76.8, 181.0], [76.9, 184.0], [77.0, 184.0], [77.1, 187.0], [77.2, 187.0], [77.3, 188.0], [77.4, 188.0], [77.5, 190.0], [77.6, 190.0], [77.7, 190.0], [77.8, 190.0], [77.9, 192.0], [78.0, 192.0], [78.1, 194.0], [78.2, 194.0], [78.3, 194.0], [78.4, 194.0], [78.5, 195.0], [78.6, 195.0], [78.7, 195.0], [78.8, 195.0], [78.9, 195.0], [79.0, 195.0], [79.1, 195.0], [79.2, 195.0], [79.3, 197.0], [79.4, 197.0], [79.5, 201.0], [79.6, 201.0], [79.7, 202.0], [79.8, 202.0], [79.9, 204.0], [80.0, 204.0], [80.1, 204.0], [80.2, 204.0], [80.3, 205.0], [80.4, 205.0], [80.5, 205.0], [80.6, 205.0], [80.7, 206.0], [80.8, 206.0], [80.9, 206.0], [81.0, 206.0], [81.1, 210.0], [81.2, 210.0], [81.3, 214.0], [81.4, 214.0], [81.5, 216.0], [81.6, 216.0], [81.7, 218.0], [81.8, 218.0], [81.9, 224.0], [82.0, 224.0], [82.1, 224.0], [82.2, 224.0], [82.3, 224.0], [82.4, 224.0], [82.5, 225.0], [82.6, 225.0], [82.7, 226.0], [82.8, 226.0], [82.9, 226.0], [83.0, 226.0], [83.1, 228.0], [83.2, 228.0], [83.3, 228.0], [83.4, 228.0], [83.5, 228.0], [83.6, 228.0], [83.7, 230.0], [83.8, 230.0], [83.9, 231.0], [84.0, 231.0], [84.1, 232.0], [84.2, 232.0], [84.3, 234.0], [84.4, 234.0], [84.5, 235.0], [84.6, 235.0], [84.7, 237.0], [84.8, 237.0], [84.9, 238.0], [85.0, 238.0], [85.1, 239.0], [85.2, 239.0], [85.3, 239.0], [85.4, 239.0], [85.5, 242.0], [85.6, 242.0], [85.7, 243.0], [85.8, 243.0], [85.9, 244.0], [86.0, 244.0], [86.1, 245.0], [86.2, 245.0], [86.3, 246.0], [86.4, 246.0], [86.5, 250.0], [86.6, 250.0], [86.7, 252.0], [86.8, 252.0], [86.9, 255.0], [87.0, 255.0], [87.1, 262.0], [87.2, 262.0], [87.3, 266.0], [87.4, 266.0], [87.5, 270.0], [87.6, 270.0], [87.7, 271.0], [87.8, 271.0], [87.9, 272.0], [88.0, 272.0], [88.1, 273.0], [88.2, 273.0], [88.3, 274.0], [88.4, 274.0], [88.5, 275.0], [88.6, 275.0], [88.7, 277.0], [88.8, 277.0], [88.9, 282.0], [89.0, 282.0], [89.1, 282.0], [89.2, 282.0], [89.3, 283.0], [89.4, 283.0], [89.5, 286.0], [89.6, 286.0], [89.7, 287.0], [89.8, 287.0], [89.9, 287.0], [90.0, 287.0], [90.1, 290.0], [90.2, 290.0], [90.3, 291.0], [90.4, 291.0], [90.5, 296.0], [90.6, 296.0], [90.7, 300.0], [90.8, 300.0], [90.9, 307.0], [91.0, 307.0], [91.1, 308.0], [91.2, 308.0], [91.3, 315.0], [91.4, 315.0], [91.5, 316.0], [91.6, 316.0], [91.7, 323.0], [91.8, 323.0], [91.9, 328.0], [92.0, 328.0], [92.1, 328.0], [92.2, 328.0], [92.3, 329.0], [92.4, 329.0], [92.5, 330.0], [92.6, 330.0], [92.7, 336.0], [92.8, 336.0], [92.9, 345.0], [93.0, 345.0], [93.1, 346.0], [93.2, 346.0], [93.3, 351.0], [93.4, 351.0], [93.5, 352.0], [93.6, 352.0], [93.7, 357.0], [93.8, 357.0], [93.9, 357.0], [94.0, 357.0], [94.1, 363.0], [94.2, 363.0], [94.3, 366.0], [94.4, 366.0], [94.5, 373.0], [94.6, 373.0], [94.7, 375.0], [94.8, 375.0], [94.9, 378.0], [95.0, 378.0], [95.1, 379.0], [95.2, 379.0], [95.3, 381.0], [95.4, 381.0], [95.5, 386.0], [95.6, 386.0], [95.7, 388.0], [95.8, 388.0], [95.9, 401.0], [96.0, 401.0], [96.1, 403.0], [96.2, 403.0], [96.3, 406.0], [96.4, 406.0], [96.5, 409.0], [96.6, 409.0], [96.7, 409.0], [96.8, 409.0], [96.9, 413.0], [97.0, 413.0], [97.1, 418.0], [97.2, 418.0], [97.3, 420.0], [97.4, 420.0], [97.5, 422.0], [97.6, 422.0], [97.7, 426.0], [97.8, 426.0], [97.9, 431.0], [98.0, 431.0], [98.1, 438.0], [98.2, 438.0], [98.3, 455.0], [98.4, 455.0], [98.5, 473.0], [98.6, 473.0], [98.7, 474.0], [98.8, 474.0], [98.9, 475.0], [99.0, 475.0], [99.1, 477.0], [99.2, 477.0], [99.3, 479.0], [99.4, 479.0], [99.5, 529.0], [99.6, 529.0], [99.7, 593.0], [99.8, 593.0], [99.9, 804.0], [100.0, 804.0]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[0.0, 15.0], [0.1, 15.0], [0.2, 15.0], [0.3, 15.0], [0.4, 18.0], [0.5, 18.0], [0.6, 18.0], [0.7, 19.0], [0.8, 19.0], [0.9, 19.0], [1.0, 20.0], [1.1, 20.0], [1.2, 20.0], [1.3, 20.0], [1.4, 20.0], [1.5, 20.0], [1.6, 20.0], [1.7, 20.0], [1.8, 20.0], [1.9, 20.0], [2.0, 21.0], [2.1, 21.0], [2.2, 21.0], [2.3, 21.0], [2.4, 21.0], [2.5, 21.0], [2.6, 21.0], [2.7, 21.0], [2.8, 21.0], [2.9, 21.0], [3.0, 22.0], [3.1, 22.0], [3.2, 22.0], [3.3, 22.0], [3.4, 22.0], [3.5, 22.0], [3.6, 22.0], [3.7, 22.0], [3.8, 22.0], [3.9, 22.0], [4.0, 22.0], [4.1, 22.0], [4.2, 23.0], [4.3, 23.0], [4.4, 23.0], [4.5, 23.0], [4.6, 23.0], [4.7, 23.0], [4.8, 23.0], [4.9, 23.0], [5.0, 23.0], [5.1, 23.0], [5.2, 23.0], [5.3, 23.0], [5.4, 23.0], [5.5, 23.0], [5.6, 23.0], [5.7, 23.0], [5.8, 23.0], [5.9, 24.0], [6.0, 24.0], [6.1, 24.0], [6.2, 24.0], [6.3, 24.0], [6.4, 24.0], [6.5, 24.0], [6.6, 24.0], [6.7, 24.0], [6.8, 24.0], [6.9, 24.0], [7.0, 24.0], [7.1, 25.0], [7.2, 25.0], [7.3, 25.0], [7.4, 25.0], [7.5, 25.0], [7.6, 25.0], [7.7, 25.0], [7.8, 25.0], [7.9, 25.0], [8.0, 25.0], [8.1, 25.0], [8.2, 25.0], [8.3, 25.0], [8.4, 25.0], [8.5, 25.0], [8.6, 25.0], [8.7, 26.0], [8.8, 26.0], [8.9, 26.0], [9.0, 26.0], [9.1, 26.0], [9.2, 26.0], [9.3, 26.0], [9.4, 26.0], [9.5, 26.0], [9.6, 26.0], [9.7, 26.0], [9.8, 26.0], [9.9, 26.0], [10.0, 26.0], [10.1, 26.0], [10.2, 26.0], [10.3, 26.0], [10.4, 26.0], [10.5, 26.0], [10.6, 26.0], [10.7, 26.0], [10.8, 26.0], [10.9, 26.0], [11.0, 26.0], [11.1, 26.0], [11.2, 26.0], [11.3, 26.0], [11.4, 26.0], [11.5, 26.0], [11.6, 26.0], [11.7, 26.0], [11.8, 27.0], [11.9, 27.0], [12.0, 27.0], [12.1, 27.0], [12.2, 27.0], [12.3, 27.0], [12.4, 27.0], [12.5, 27.0], [12.6, 27.0], [12.7, 27.0], [12.8, 27.0], [12.9, 27.0], [13.0, 27.0], [13.1, 27.0], [13.2, 27.0], [13.3, 27.0], [13.4, 27.0], [13.5, 27.0], [13.6, 27.0], [13.7, 28.0], [13.8, 28.0], [13.9, 28.0], [14.0, 28.0], [14.1, 28.0], [14.2, 28.0], [14.3, 28.0], [14.4, 28.0], [14.5, 28.0], [14.6, 28.0], [14.7, 28.0], [14.8, 28.0], [14.9, 28.0], [15.0, 28.0], [15.1, 28.0], [15.2, 28.0], [15.3, 29.0], [15.4, 29.0], [15.5, 29.0], [15.6, 29.0], [15.7, 29.0], [15.8, 29.0], [15.9, 29.0], [16.0, 29.0], [16.1, 29.0], [16.2, 29.0], [16.3, 29.0], [16.4, 29.0], [16.5, 29.0], [16.6, 29.0], [16.7, 29.0], [16.8, 29.0], [16.9, 29.0], [17.0, 30.0], [17.1, 30.0], [17.2, 30.0], [17.3, 30.0], [17.4, 30.0], [17.5, 30.0], [17.6, 30.0], [17.7, 30.0], [17.8, 30.0], [17.9, 30.0], [18.0, 30.0], [18.1, 30.0], [18.2, 30.0], [18.3, 30.0], [18.4, 30.0], [18.5, 30.0], [18.6, 30.0], [18.7, 30.0], [18.8, 30.0], [18.9, 30.0], [19.0, 30.0], [19.1, 30.0], [19.2, 30.0], [19.3, 30.0], [19.4, 30.0], [19.5, 30.0], [19.6, 30.0], [19.7, 30.0], [19.8, 30.0], [19.9, 30.0], [20.0, 30.0], [20.1, 30.0], [20.2, 31.0], [20.3, 31.0], [20.4, 31.0], [20.5, 31.0], [20.6, 31.0], [20.7, 31.0], [20.8, 31.0], [20.9, 31.0], [21.0, 31.0], [21.1, 31.0], [21.2, 31.0], [21.3, 31.0], [21.4, 31.0], [21.5, 31.0], [21.6, 31.0], [21.7, 31.0], [21.8, 31.0], [21.9, 31.0], [22.0, 32.0], [22.1, 32.0], [22.2, 32.0], [22.3, 32.0], [22.4, 32.0], [22.5, 32.0], [22.6, 32.0], [22.7, 32.0], [22.8, 32.0], [22.9, 32.0], [23.0, 32.0], [23.1, 32.0], [23.2, 32.0], [23.3, 32.0], [23.4, 32.0], [23.5, 32.0], [23.6, 32.0], [23.7, 32.0], [23.8, 32.0], [23.9, 32.0], [24.0, 32.0], [24.1, 32.0], [24.2, 32.0], [24.3, 32.0], [24.4, 32.0], [24.5, 32.0], [24.6, 32.0], [24.7, 32.0], [24.8, 33.0], [24.9, 33.0], [25.0, 33.0], [25.1, 33.0], [25.2, 33.0], [25.3, 33.0], [25.4, 33.0], [25.5, 33.0], [25.6, 33.0], [25.7, 33.0], [25.8, 33.0], [25.9, 33.0], [26.0, 33.0], [26.1, 33.0], [26.2, 33.0], [26.3, 33.0], [26.4, 33.0], [26.5, 33.0], [26.6, 33.0], [26.7, 33.0], [26.8, 34.0], [26.9, 34.0], [27.0, 34.0], [27.1, 34.0], [27.2, 34.0], [27.3, 34.0], [27.4, 34.0], [27.5, 34.0], [27.6, 34.0], [27.7, 34.0], [27.8, 34.0], [27.9, 34.0], [28.0, 34.0], [28.1, 34.0], [28.2, 34.0], [28.3, 34.0], [28.4, 34.0], [28.5, 34.0], [28.6, 34.0], [28.7, 34.0], [28.8, 34.0], [28.9, 34.0], [29.0, 34.0], [29.1, 34.0], [29.2, 34.0], [29.3, 34.0], [29.4, 34.0], [29.5, 34.0], [29.6, 34.0], [29.7, 34.0], [29.8, 34.0], [29.9, 34.0], [30.0, 35.0], [30.1, 35.0], [30.2, 35.0], [30.3, 35.0], [30.4, 35.0], [30.5, 35.0], [30.6, 35.0], [30.7, 35.0], [30.8, 35.0], [30.9, 35.0], [31.0, 35.0], [31.1, 35.0], [31.2, 35.0], [31.3, 35.0], [31.4, 36.0], [31.5, 36.0], [31.6, 36.0], [31.7, 36.0], [31.8, 36.0], [31.9, 36.0], [32.0, 36.0], [32.1, 36.0], [32.2, 36.0], [32.3, 36.0], [32.4, 36.0], [32.5, 36.0], [32.6, 36.0], [32.7, 36.0], [32.8, 36.0], [32.9, 36.0], [33.0, 36.0], [33.1, 36.0], [33.2, 36.0], [33.3, 36.0], [33.4, 36.0], [33.5, 36.0], [33.6, 36.0], [33.7, 36.0], [33.8, 36.0], [33.9, 36.0], [34.0, 36.0], [34.1, 36.0], [34.2, 37.0], [34.3, 37.0], [34.4, 37.0], [34.5, 37.0], [34.6, 37.0], [34.7, 37.0], [34.8, 37.0], [34.9, 37.0], [35.0, 37.0], [35.1, 37.0], [35.2, 37.0], [35.3, 37.0], [35.4, 37.0], [35.5, 37.0], [35.6, 38.0], [35.7, 38.0], [35.8, 38.0], [35.9, 38.0], [36.0, 38.0], [36.1, 38.0], [36.2, 38.0], [36.3, 38.0], [36.4, 38.0], [36.5, 38.0], [36.6, 38.0], [36.7, 38.0], [36.8, 39.0], [36.9, 39.0], [37.0, 39.0], [37.1, 39.0], [37.2, 39.0], [37.3, 39.0], [37.4, 39.0], [37.5, 39.0], [37.6, 39.0], [37.7, 39.0], [37.8, 39.0], [37.9, 39.0], [38.0, 39.0], [38.1, 39.0], [38.2, 39.0], [38.3, 39.0], [38.4, 39.0], [38.5, 39.0], [38.6, 40.0], [38.7, 40.0], [38.8, 40.0], [38.9, 40.0], [39.0, 40.0], [39.1, 40.0], [39.2, 40.0], [39.3, 40.0], [39.4, 40.0], [39.5, 40.0], [39.6, 40.0], [39.7, 40.0], [39.8, 40.0], [39.9, 40.0], [40.0, 40.0], [40.1, 40.0], [40.2, 41.0], [40.3, 41.0], [40.4, 41.0], [40.5, 41.0], [40.6, 41.0], [40.7, 41.0], [40.8, 41.0], [40.9, 41.0], [41.0, 42.0], [41.1, 42.0], [41.2, 42.0], [41.3, 42.0], [41.4, 42.0], [41.5, 42.0], [41.6, 42.0], [41.7, 42.0], [41.8, 42.0], [41.9, 42.0], [42.0, 42.0], [42.1, 42.0], [42.2, 42.0], [42.3, 42.0], [42.4, 42.0], [42.5, 42.0], [42.6, 42.0], [42.7, 42.0], [42.8, 42.0], [42.9, 42.0], [43.0, 43.0], [43.1, 43.0], [43.2, 43.0], [43.3, 43.0], [43.4, 43.0], [43.5, 43.0], [43.6, 43.0], [43.7, 43.0], [43.8, 43.0], [43.9, 43.0], [44.0, 43.0], [44.1, 43.0], [44.2, 43.0], [44.3, 43.0], [44.4, 43.0], [44.5, 43.0], [44.6, 44.0], [44.7, 44.0], [44.8, 44.0], [44.9, 44.0], [45.0, 44.0], [45.1, 44.0], [45.2, 44.0], [45.3, 44.0], [45.4, 45.0], [45.5, 45.0], [45.6, 45.0], [45.7, 45.0], [45.8, 45.0], [45.9, 45.0], [46.0, 45.0], [46.1, 45.0], [46.2, 45.0], [46.3, 45.0], [46.4, 46.0], [46.5, 46.0], [46.6, 46.0], [46.7, 46.0], [46.8, 46.0], [46.9, 46.0], [47.0, 46.0], [47.1, 46.0], [47.2, 47.0], [47.3, 47.0], [47.4, 47.0], [47.5, 47.0], [47.6, 47.0], [47.7, 47.0], [47.8, 47.0], [47.9, 47.0], [48.0, 47.0], [48.1, 47.0], [48.2, 48.0], [48.3, 48.0], [48.4, 48.0], [48.5, 48.0], [48.6, 48.0], [48.7, 48.0], [48.8, 48.0], [48.9, 48.0], [49.0, 48.0], [49.1, 48.0], [49.2, 48.0], [49.3, 48.0], [49.4, 48.0], [49.5, 48.0], [49.6, 49.0], [49.7, 49.0], [49.8, 49.0], [49.9, 49.0], [50.0, 49.0], [50.1, 49.0], [50.2, 49.0], [50.3, 49.0], [50.4, 49.0], [50.5, 49.0], [50.6, 49.0], [50.7, 49.0], [50.8, 49.0], [50.9, 49.0], [51.0, 50.0], [51.1, 50.0], [51.2, 50.0], [51.3, 50.0], [51.4, 50.0], [51.5, 50.0], [51.6, 50.0], [51.7, 50.0], [51.8, 51.0], [51.9, 51.0], [52.0, 51.0], [52.1, 51.0], [52.2, 51.0], [52.3, 51.0], [52.4, 52.0], [52.5, 52.0], [52.6, 52.0], [52.7, 52.0], [52.8, 52.0], [52.9, 52.0], [53.0, 52.0], [53.1, 52.0], [53.2, 52.0], [53.3, 52.0], [53.4, 53.0], [53.5, 53.0], [53.6, 53.0], [53.7, 53.0], [53.8, 53.0], [53.9, 53.0], [54.0, 54.0], [54.1, 54.0], [54.2, 54.0], [54.3, 54.0], [54.4, 55.0], [54.5, 55.0], [54.6, 55.0], [54.7, 55.0], [54.8, 56.0], [54.9, 56.0], [55.0, 56.0], [55.1, 56.0], [55.2, 57.0], [55.3, 57.0], [55.4, 58.0], [55.5, 58.0], [55.6, 60.0], [55.7, 60.0], [55.8, 61.0], [55.9, 61.0], [56.0, 61.0], [56.1, 61.0], [56.2, 61.0], [56.3, 61.0], [56.4, 62.0], [56.5, 62.0], [56.6, 63.0], [56.7, 63.0], [56.8, 64.0], [56.9, 64.0], [57.0, 64.0], [57.1, 64.0], [57.2, 64.0], [57.3, 64.0], [57.4, 65.0], [57.5, 65.0], [57.6, 66.0], [57.7, 66.0], [57.8, 66.0], [57.9, 66.0], [58.0, 66.0], [58.1, 66.0], [58.2, 66.0], [58.3, 66.0], [58.4, 66.0], [58.5, 66.0], [58.6, 67.0], [58.7, 67.0], [58.8, 67.0], [58.9, 67.0], [59.0, 67.0], [59.1, 67.0], [59.2, 67.0], [59.3, 67.0], [59.4, 67.0], [59.5, 67.0], [59.6, 68.0], [59.7, 68.0], [59.8, 68.0], [59.9, 68.0], [60.0, 68.0], [60.1, 68.0], [60.2, 69.0], [60.3, 69.0], [60.4, 69.0], [60.5, 69.0], [60.6, 70.0], [60.7, 70.0], [60.8, 70.0], [60.9, 71.0], [61.0, 71.0], [61.1, 71.0], [61.2, 72.0], [61.3, 72.0], [61.4, 72.0], [61.5, 73.0], [61.6, 73.0], [61.7, 74.0], [61.8, 74.0], [61.9, 76.0], [62.0, 76.0], [62.1, 77.0], [62.2, 77.0], [62.3, 78.0], [62.4, 78.0], [62.5, 78.0], [62.6, 78.0], [62.7, 78.0], [62.8, 78.0], [62.9, 82.0], [63.0, 82.0], [63.1, 84.0], [63.2, 84.0], [63.3, 85.0], [63.4, 85.0], [63.5, 85.0], [63.6, 85.0], [63.7, 86.0], [63.8, 86.0], [63.9, 87.0], [64.0, 87.0], [64.1, 87.0], [64.2, 87.0], [64.3, 88.0], [64.4, 88.0], [64.5, 90.0], [64.6, 90.0], [64.7, 91.0], [64.8, 91.0], [64.9, 91.0], [65.0, 91.0], [65.1, 92.0], [65.2, 92.0], [65.3, 98.0], [65.4, 98.0], [65.5, 99.0], [65.6, 99.0], [65.7, 99.0], [65.8, 99.0], [65.9, 100.0], [66.0, 100.0], [66.1, 101.0], [66.2, 101.0], [66.3, 101.0], [66.4, 101.0], [66.5, 102.0], [66.6, 102.0], [66.7, 104.0], [66.8, 104.0], [66.9, 104.0], [67.0, 104.0], [67.1, 105.0], [67.2, 105.0], [67.3, 106.0], [67.4, 106.0], [67.5, 106.0], [67.6, 106.0], [67.7, 107.0], [67.8, 107.0], [67.9, 108.0], [68.0, 108.0], [68.1, 108.0], [68.2, 108.0], [68.3, 109.0], [68.4, 109.0], [68.5, 109.0], [68.6, 109.0], [68.7, 110.0], [68.8, 110.0], [68.9, 112.0], [69.0, 112.0], [69.1, 114.0], [69.2, 114.0], [69.3, 114.0], [69.4, 114.0], [69.5, 117.0], [69.6, 117.0], [69.7, 119.0], [69.8, 119.0], [69.9, 119.0], [70.0, 119.0], [70.1, 120.0], [70.2, 120.0], [70.3, 122.0], [70.4, 122.0], [70.5, 122.0], [70.6, 122.0], [70.7, 122.0], [70.8, 122.0], [70.9, 123.0], [71.0, 123.0], [71.1, 123.0], [71.2, 123.0], [71.3, 124.0], [71.4, 124.0], [71.5, 124.0], [71.6, 124.0], [71.7, 127.0], [71.8, 127.0], [71.9, 127.0], [72.0, 127.0], [72.1, 129.0], [72.2, 129.0], [72.3, 131.0], [72.4, 131.0], [72.5, 135.0], [72.6, 135.0], [72.7, 135.0], [72.8, 135.0], [72.9, 136.0], [73.0, 136.0], [73.1, 137.0], [73.2, 137.0], [73.3, 137.0], [73.4, 137.0], [73.5, 139.0], [73.6, 139.0], [73.7, 140.0], [73.8, 140.0], [73.9, 141.0], [74.0, 141.0], [74.1, 142.0], [74.2, 142.0], [74.3, 143.0], [74.4, 143.0], [74.5, 143.0], [74.6, 143.0], [74.7, 143.0], [74.8, 143.0], [74.9, 144.0], [75.0, 144.0], [75.1, 146.0], [75.2, 146.0], [75.3, 147.0], [75.4, 147.0], [75.5, 147.0], [75.6, 147.0], [75.7, 148.0], [75.8, 148.0], [75.9, 149.0], [76.0, 149.0], [76.1, 151.0], [76.2, 151.0], [76.3, 153.0], [76.4, 153.0], [76.5, 157.0], [76.6, 157.0], [76.7, 157.0], [76.8, 157.0], [76.9, 157.0], [77.0, 157.0], [77.1, 162.0], [77.2, 162.0], [77.3, 165.0], [77.4, 165.0], [77.5, 167.0], [77.6, 167.0], [77.7, 170.0], [77.8, 170.0], [77.9, 172.0], [78.0, 172.0], [78.1, 172.0], [78.2, 172.0], [78.3, 173.0], [78.4, 173.0], [78.5, 173.0], [78.6, 173.0], [78.7, 175.0], [78.8, 175.0], [78.9, 175.0], [79.0, 175.0], [79.1, 176.0], [79.2, 176.0], [79.3, 176.0], [79.4, 176.0], [79.5, 176.0], [79.6, 176.0], [79.7, 178.0], [79.8, 178.0], [79.9, 179.0], [80.0, 179.0], [80.1, 180.0], [80.2, 180.0], [80.3, 181.0], [80.4, 181.0], [80.5, 182.0], [80.6, 182.0], [80.7, 183.0], [80.8, 183.0], [80.9, 184.0], [81.0, 184.0], [81.1, 185.0], [81.2, 185.0], [81.3, 185.0], [81.4, 185.0], [81.5, 185.0], [81.6, 185.0], [81.7, 186.0], [81.8, 186.0], [81.9, 186.0], [82.0, 186.0], [82.1, 186.0], [82.2, 186.0], [82.3, 190.0], [82.4, 190.0], [82.5, 190.0], [82.6, 190.0], [82.7, 193.0], [82.8, 193.0], [82.9, 194.0], [83.0, 194.0], [83.1, 194.0], [83.2, 194.0], [83.3, 197.0], [83.4, 197.0], [83.5, 199.0], [83.6, 199.0], [83.7, 200.0], [83.8, 200.0], [83.9, 202.0], [84.0, 202.0], [84.1, 204.0], [84.2, 204.0], [84.3, 204.0], [84.4, 204.0], [84.5, 205.0], [84.6, 205.0], [84.7, 206.0], [84.8, 206.0], [84.9, 206.0], [85.0, 206.0], [85.1, 206.0], [85.2, 206.0], [85.3, 207.0], [85.4, 207.0], [85.5, 208.0], [85.6, 208.0], [85.7, 209.0], [85.8, 209.0], [85.9, 209.0], [86.0, 209.0], [86.1, 210.0], [86.2, 210.0], [86.3, 211.0], [86.4, 211.0], [86.5, 211.0], [86.6, 211.0], [86.7, 212.0], [86.8, 212.0], [86.9, 212.0], [87.0, 212.0], [87.1, 214.0], [87.2, 214.0], [87.3, 214.0], [87.4, 214.0], [87.5, 218.0], [87.6, 218.0], [87.7, 219.0], [87.8, 219.0], [87.9, 220.0], [88.0, 220.0], [88.1, 220.0], [88.2, 220.0], [88.3, 223.0], [88.4, 223.0], [88.5, 224.0], [88.6, 224.0], [88.7, 226.0], [88.8, 226.0], [88.9, 229.0], [89.0, 229.0], [89.1, 232.0], [89.2, 232.0], [89.3, 234.0], [89.4, 234.0], [89.5, 237.0], [89.6, 237.0], [89.7, 238.0], [89.8, 238.0], [89.9, 238.0], [90.0, 238.0], [90.1, 239.0], [90.2, 239.0], [90.3, 239.0], [90.4, 239.0], [90.5, 241.0], [90.6, 241.0], [90.7, 242.0], [90.8, 242.0], [90.9, 244.0], [91.0, 244.0], [91.1, 244.0], [91.2, 244.0], [91.3, 245.0], [91.4, 245.0], [91.5, 245.0], [91.6, 245.0], [91.7, 245.0], [91.8, 245.0], [91.9, 247.0], [92.0, 247.0], [92.1, 248.0], [92.2, 248.0], [92.3, 251.0], [92.4, 251.0], [92.5, 252.0], [92.6, 252.0], [92.7, 255.0], [92.8, 255.0], [92.9, 257.0], [93.0, 257.0], [93.1, 259.0], [93.2, 259.0], [93.3, 260.0], [93.4, 260.0], [93.5, 261.0], [93.6, 261.0], [93.7, 262.0], [93.8, 262.0], [93.9, 262.0], [94.0, 262.0], [94.1, 262.0], [94.2, 262.0], [94.3, 263.0], [94.4, 263.0], [94.5, 264.0], [94.6, 264.0], [94.7, 265.0], [94.8, 265.0], [94.9, 270.0], [95.0, 270.0], [95.1, 271.0], [95.2, 271.0], [95.3, 273.0], [95.4, 273.0], [95.5, 274.0], [95.6, 274.0], [95.7, 275.0], [95.8, 275.0], [95.9, 277.0], [96.0, 277.0], [96.1, 278.0], [96.2, 278.0], [96.3, 291.0], [96.4, 291.0], [96.5, 292.0], [96.6, 292.0], [96.7, 296.0], [96.8, 296.0], [96.9, 296.0], [97.0, 296.0], [97.1, 297.0], [97.2, 297.0], [97.3, 300.0], [97.4, 300.0], [97.5, 302.0], [97.6, 302.0], [97.7, 305.0], [97.8, 305.0], [97.9, 310.0], [98.0, 310.0], [98.1, 320.0], [98.2, 320.0], [98.3, 327.0], [98.4, 327.0], [98.5, 334.0], [98.6, 334.0], [98.7, 338.0], [98.8, 338.0], [98.9, 341.0], [99.0, 341.0], [99.1, 349.0], [99.2, 349.0], [99.3, 356.0], [99.4, 356.0], [99.5, 371.0], [99.6, 371.0], [99.7, 456.0], [99.8, 456.0], [99.9, 473.0], [100.0, 473.0]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 329.0, "series": [{"data": [[600.0, 7.0], [700.0, 8.0], [800.0, 9.0], [900.0, 10.0], [1000.0, 12.0], [1100.0, 11.0], [1200.0, 9.0], [1300.0, 6.0], [1400.0, 9.0], [1500.0, 7.0], [1600.0, 12.0], [1700.0, 10.0], [1800.0, 12.0], [1900.0, 9.0], [2000.0, 9.0], [2100.0, 6.0], [2200.0, 12.0], [2300.0, 12.0], [2400.0, 12.0], [2500.0, 9.0], [2600.0, 7.0], [2700.0, 7.0], [2800.0, 9.0], [2900.0, 9.0], [3000.0, 11.0], [3100.0, 14.0], [3200.0, 18.0], [3300.0, 16.0], [3400.0, 17.0], [3500.0, 10.0], [3600.0, 11.0], [3700.0, 8.0], [3800.0, 10.0], [3900.0, 7.0], [4000.0, 8.0], [4100.0, 13.0], [4200.0, 6.0], [4300.0, 12.0], [4400.0, 8.0], [4500.0, 12.0], [4600.0, 5.0], [4700.0, 10.0], [4800.0, 16.0], [4900.0, 12.0], [5000.0, 10.0], [5100.0, 8.0], [5200.0, 11.0], [5300.0, 4.0], [100.0, 2.0], [200.0, 3.0], [300.0, 4.0], [400.0, 5.0], [500.0, 6.0]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[0.0, 305.0], [300.0, 26.0], [100.0, 92.0], [200.0, 56.0], [400.0, 18.0], [800.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[0.0, 329.0], [300.0, 12.0], [100.0, 89.0], [200.0, 68.0], [400.0, 2.0]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 5300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 90.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1011.0, "series": [{"data": [[0.0, 1011.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 90.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 399.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 155.23066666666668, "minX": 1.69851408E12, "maxY": 155.23066666666668, "series": [{"data": [[1.69851408E12, 155.23066666666668]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851408E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 18.5, "minX": 2.0, "maxY": 5312.0, "series": [{"data": [[25.0, 5299.0], [30.0, 5309.0], [31.0, 5312.0], [33.0, 5303.0], [34.0, 5237.0], [37.0, 5264.666666666667], [38.0, 182.0], [41.0, 5219.0], [40.0, 5246.0], [43.0, 229.0], [42.0, 5238.0], [45.0, 4322.0], [44.0, 5203.0], [47.0, 5110.0], [48.0, 265.0], [49.0, 3513.0], [50.0, 3499.3333333333335], [53.0, 1937.6666666666667], [55.0, 5042.0], [54.0, 5081.333333333333], [56.0, 1954.3333333333333], [57.0, 4966.0], [59.0, 3177.0], [60.0, 1989.3333333333333], [61.0, 4935.0], [62.0, 3470.0], [63.0, 570.0], [64.0, 3827.5], [66.0, 3834.0], [67.0, 648.0], [68.0, 609.0], [69.0, 3516.0], [70.0, 630.0], [71.0, 2765.5], [72.0, 736.0], [73.0, 2800.5], [74.0, 672.0], [75.0, 700.0], [76.0, 3472.0], [78.0, 731.0], [79.0, 4825.0], [80.0, 756.0], [81.0, 2780.5], [82.0, 4819.25], [84.0, 789.0], [85.0, 3231.2], [88.0, 830.0], [89.0, 843.0], [90.0, 2159.666666666667], [91.0, 2811.5], [94.0, 3741.5], [95.0, 2160.666666666667], [93.0, 4741.0], [92.0, 4761.0], [96.0, 909.0], [99.0, 921.6666666666666], [101.0, 950.6666666666666], [102.0, 3420.3333333333335], [103.0, 4598.0], [100.0, 4590.0], [104.0, 2206.333333333333], [106.0, 3837.6], [107.0, 3971.5], [108.0, 1029.5], [109.0, 1447.0], [111.0, 1065.5], [110.0, 4524.0], [113.0, 2788.0], [114.0, 3507.714285714286], [115.0, 1104.0], [116.0, 1113.0], [118.0, 1130.0], [119.0, 2794.0], [117.0, 4422.0], [122.0, 1154.0], [123.0, 3573.5], [120.0, 4382.0], [124.0, 1180.3333333333333], [126.0, 3280.0], [127.0, 1210.0], [125.0, 4338.0], [129.0, 3286.3333333333335], [131.0, 3691.6], [132.0, 1272.5], [133.0, 1288.0], [135.0, 1289.5], [128.0, 4308.0], [136.0, 3635.6], [138.0, 3219.6666666666665], [142.0, 2051.25], [140.0, 4235.0], [139.0, 4167.4], [137.0, 4183.0], [145.0, 2749.0], [147.0, 1383.0], [150.0, 2724.25], [151.0, 2279.0], [148.0, 4042.0], [146.0, 4066.4], [156.0, 2722.0], [157.0, 2283.0], [155.0, 1467.0], [159.0, 1502.5], [154.0, 4003.6666666666665], [152.0, 3990.0], [163.0, 3103.6666666666665], [164.0, 2129.75], [165.0, 3532.0], [160.0, 3902.0], [170.0, 2307.0], [171.0, 1602.0], [169.0, 3438.1428571428573], [172.0, 3324.0], [173.0, 1643.0], [174.0, 3624.0], [168.0, 3799.75], [177.0, 2050.2], [178.0, 2927.6666666666665], [183.0, 1719.0], [182.0, 2322.6666666666665], [181.0, 3523.0], [180.0, 3534.6666666666665], [176.0, 3602.6666666666665], [185.0, 2340.0], [188.0, 2637.5], [187.0, 2641.0], [189.0, 2639.0], [190.0, 2641.5], [191.0, 2373.0], [186.0, 3487.0], [192.0, 2376.6666666666665], [193.0, 2263.5], [195.0, 2407.6666666666665], [194.0, 2409.0], [197.0, 2300.0], [198.0, 2684.5], [199.0, 2687.5], [196.0, 3432.0], [200.0, 2932.0], [201.0, 2692.0], [204.0, 2467.3333333333335], [205.0, 2703.0], [206.0, 2698.0], [207.0, 2047.0], [203.0, 3390.0], [209.0, 2576.8], [210.0, 2711.5], [212.0, 2512.6666666666665], [214.0, 2926.0], [215.0, 2122.0], [213.0, 3341.0], [208.0, 3359.0], [216.0, 2913.0], [218.0, 2722.5], [219.0, 2723.0], [222.0, 2209.0], [223.0, 2747.5], [221.0, 3275.0], [220.0, 3287.0], [217.0, 3306.0], [224.0, 2732.5], [226.0, 2741.0], [227.0, 2742.75], [228.0, 2739.0], [230.0, 2508.75], [231.0, 3227.0], [229.0, 3239.0], [225.0, 3260.0], [232.0, 2753.0], [233.0, 2297.5], [234.0, 2763.0], [236.0, 2321.0], [238.0, 2760.0], [239.0, 2352.0], [237.0, 3190.0], [235.0, 3205.0], [241.0, 2765.0], [242.0, 2381.5], [243.0, 2762.0], [244.0, 2677.3333333333335], [245.0, 2411.0], [246.0, 2785.5], [247.0, 3123.0], [240.0, 3169.0], [248.0, 2845.4], [249.0, 2678.3333333333335], [250.0, 2782.5], [251.0, 2782.5], [252.0, 2486.0], [253.0, 2792.0], [254.0, 2696.3333333333335], [255.0, 3077.0], [270.0, 2779.5], [256.0, 2518.0], [257.0, 2881.8333333333335], [259.0, 3026.0], [269.0, 2913.3333333333335], [268.0, 2928.0], [260.0, 2570.0], [264.0, 2772.5], [263.0, 2779.5], [262.0, 2995.0], [266.0, 2615.0], [265.0, 2955.0], [267.0, 2738.6666666666665], [271.0, 2894.0], [273.0, 2822.25], [272.0, 2677.0], [274.0, 2697.0], [277.0, 2761.5], [276.0, 2727.0], [278.0, 2774.0], [280.0, 2772.3333333333335], [281.0, 2760.0], [275.0, 2839.5]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[158.10199999999998, 2924.8420000000006]], "isOverall": false, "label": "Express Js Http Call-Aggregated", "isController": false}, {"data": [[3.0, 163.0], [4.0, 171.0], [14.0, 139.0], [17.0, 122.0], [19.0, 114.0], [20.0, 124.0], [23.0, 145.0], [25.0, 249.5], [28.0, 238.0], [33.0, 243.0], [32.0, 606.5], [37.0, 242.0], [38.0, 216.0], [41.0, 309.0], [40.0, 354.0], [42.0, 135.0], [44.0, 54.5], [45.0, 220.0], [46.0, 31.0], [47.0, 289.3333333333333], [48.0, 48.0], [49.0, 306.25], [50.0, 197.33333333333334], [51.0, 373.0], [52.0, 37.0], [55.0, 141.0], [54.0, 414.0], [56.0, 113.0], [57.0, 27.0], [58.0, 92.5], [59.0, 193.0], [60.0, 33.0], [61.0, 326.0], [62.0, 138.66666666666666], [63.0, 34.0], [64.0, 110.5], [65.0, 19.0], [67.0, 29.0], [66.0, 135.5], [69.0, 25.0], [70.0, 27.0], [72.0, 150.5], [73.0, 25.0], [74.0, 33.0], [75.0, 27.5], [76.0, 147.0], [77.0, 160.0], [78.0, 22.0], [79.0, 328.0], [80.0, 26.0], [83.0, 99.0], [82.0, 206.5], [81.0, 275.5], [85.0, 244.5], [86.0, 32.0], [87.0, 271.0], [90.0, 223.5], [89.0, 163.5], [91.0, 106.66666666666667], [94.0, 145.5], [93.0, 35.0], [95.0, 102.0], [92.0, 313.5], [96.0, 137.5], [99.0, 94.5], [100.0, 37.666666666666664], [102.0, 36.5], [103.0, 135.375], [104.0, 219.5], [106.0, 247.57142857142858], [107.0, 311.5], [108.0, 37.0], [109.0, 40.0], [110.0, 28.5], [111.0, 31.0], [112.0, 151.33333333333334], [113.0, 253.4], [114.0, 39.0], [115.0, 124.5], [116.0, 44.0], [117.0, 37.0], [118.0, 45.0], [119.0, 143.0], [123.0, 221.83333333333331], [120.0, 529.0], [124.0, 42.5], [125.0, 193.25], [127.0, 63.0], [129.0, 141.33333333333334], [130.0, 44.0], [132.0, 45.5], [134.0, 142.5], [135.0, 45.0], [133.0, 195.0], [131.0, 338.25], [128.0, 164.0], [136.0, 229.25], [143.0, 99.0], [142.0, 282.0], [140.0, 291.0], [139.0, 184.0], [138.0, 291.5], [137.0, 254.33333333333331], [147.0, 63.0], [150.0, 150.0], [151.0, 205.6], [146.0, 368.0], [145.0, 273.0], [154.0, 131.66666666666666], [157.0, 122.0], [159.0, 65.5], [156.0, 147.0], [161.0, 262.0], [163.0, 159.0], [164.0, 130.0], [166.0, 154.0], [165.0, 278.0], [162.0, 135.0], [170.0, 113.0], [169.0, 169.85714285714286], [173.0, 77.25], [175.0, 214.0], [172.0, 80.0], [168.0, 177.0], [176.0, 91.4], [177.0, 48.5], [182.0, 153.0], [183.0, 55.0], [181.0, 49.5], [180.0, 26.0], [179.0, 32.0], [178.0, 41.0], [184.0, 47.5], [185.0, 97.6], [188.0, 79.0], [190.0, 57.5], [191.0, 54.0], [189.0, 27.0], [186.0, 27.0], [192.0, 68.5], [193.0, 58.142857142857146], [196.0, 37.0], [194.0, 42.0], [195.0, 26.25], [197.0, 28.333333333333332], [198.0, 25.333333333333332], [199.0, 27.0], [201.0, 34.0], [203.0, 28.2], [204.0, 23.0], [205.0, 19.0], [206.0, 19.0], [207.0, 28.0], [200.0, 24.5], [208.0, 33.0], [209.0, 25.0], [210.0, 26.5], [211.0, 29.0], [212.0, 23.0], [213.0, 27.333333333333332], [214.0, 33.0], [215.0, 41.0], [216.0, 25.0], [217.0, 29.666666666666668], [219.0, 31.0], [218.0, 27.0], [223.0, 25.0], [222.0, 29.0], [221.0, 22.0], [224.0, 29.0], [227.0, 32.0], [229.0, 27.666666666666668], [230.0, 32.0], [231.0, 24.333333333333332], [228.0, 31.0], [226.0, 39.0], [233.0, 29.0], [234.0, 71.0], [235.0, 28.5], [238.0, 35.666666666666664], [239.0, 23.0], [237.0, 34.666666666666664], [241.0, 40.333333333333336], [242.0, 33.0], [243.0, 31.5], [244.0, 26.5], [246.0, 29.0], [247.0, 28.0], [240.0, 21.0], [248.0, 44.16666666666667], [249.0, 28.333333333333332], [250.0, 21.0], [252.0, 25.5], [253.0, 35.0], [254.0, 42.0], [255.0, 34.0], [251.0, 27.0], [269.0, 40.0], [259.0, 46.0], [257.0, 31.75], [260.0, 42.666666666666664], [261.0, 51.0], [263.0, 82.5], [262.0, 52.0], [264.0, 35.666666666666664], [266.0, 32.0], [265.0, 28.0], [267.0, 32.0], [271.0, 40.333333333333336], [268.0, 55.0], [273.0, 34.5], [274.0, 31.5], [277.0, 38.0], [278.0, 34.0], [279.0, 40.0], [282.0, 34.0], [281.0, 54.0], [280.0, 37.0], [276.0, 38.5]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[155.01999999999998, 115.45200000000003]], "isOverall": false, "label": "Gin Gonic Http Call-Aggregated", "isController": false}, {"data": [[2.0, 18.5], [3.0, 23.0], [4.0, 39.0], [5.0, 50.0], [6.0, 65.0], [7.0, 68.0], [8.0, 87.0], [9.0, 101.0], [10.0, 84.0], [11.0, 106.0], [12.0, 108.0], [13.0, 124.0], [14.0, 102.0], [15.0, 112.0], [16.0, 110.0], [17.0, 139.0], [18.0, 117.0], [19.0, 108.0], [20.0, 179.0], [21.0, 137.0], [22.0, 157.0], [23.0, 186.0], [24.0, 127.0], [25.0, 206.0], [28.0, 183.0], [30.0, 317.5], [31.0, 261.0], [33.0, 237.0], [32.0, 371.0], [35.0, 232.0], [34.0, 245.0], [37.0, 291.0], [36.0, 292.0], [39.0, 260.0], [38.0, 197.0], [41.0, 255.0], [40.0, 262.0], [43.0, 181.0], [42.0, 473.0], [45.0, 170.0], [44.0, 251.0], [47.0, 186.0], [46.0, 265.0], [49.0, 83.5], [48.0, 135.0], [51.0, 103.0], [50.0, 153.0], [53.0, 194.66666666666666], [55.0, 176.0], [54.0, 183.0], [57.0, 133.0], [56.0, 224.0], [59.0, 134.5], [58.0, 158.5], [60.0, 114.5], [61.0, 82.5], [62.0, 94.0], [63.0, 105.5], [64.0, 73.75], [67.0, 84.66666666666666], [66.0, 176.0], [65.0, 144.0], [68.0, 72.0], [69.0, 103.5], [71.0, 101.0], [70.0, 167.0], [72.0, 125.0], [73.0, 180.5], [75.0, 75.75], [74.0, 172.0], [76.0, 76.25], [79.0, 296.5], [77.0, 107.0], [80.0, 60.66666666666667], [83.0, 128.0], [82.0, 135.0], [81.0, 162.0], [85.0, 103.33333333333333], [87.0, 330.5], [84.0, 234.0], [89.0, 181.5], [90.0, 169.5], [91.0, 185.0], [88.0, 302.0], [92.0, 146.5], [95.0, 93.0], [94.0, 211.0], [93.0, 349.0], [96.0, 174.5], [99.0, 124.5], [98.0, 209.0], [97.0, 245.0], [100.0, 115.5], [101.0, 44.0], [102.0, 120.2], [103.0, 86.8], [104.0, 75.5], [105.0, 117.5], [107.0, 193.0], [106.0, 190.0], [108.0, 155.5], [109.0, 158.5], [110.0, 144.0], [111.0, 81.5], [112.0, 150.5], [115.0, 73.4], [114.0, 252.0], [113.0, 244.0], [117.0, 119.0], [119.0, 200.0], [118.0, 142.0], [116.0, 247.0], [122.0, 124.0], [123.0, 123.33333333333334], [121.0, 223.0], [120.0, 205.0], [124.0, 84.66666666666666], [127.0, 207.0], [126.0, 172.0], [125.0, 129.0], [128.0, 178.5], [129.0, 111.0], [133.0, 146.5], [132.0, 100.0], [134.0, 91.0], [135.0, 118.0], [131.0, 204.0], [130.0, 214.0], [141.0, 145.0], [143.0, 173.0], [142.0, 175.0], [140.0, 271.0], [139.0, 119.0], [138.0, 140.0], [137.0, 190.0], [136.0, 238.0], [145.0, 155.0], [147.0, 93.0], [150.0, 182.0], [151.0, 239.0], [148.0, 143.0], [146.0, 341.0], [144.0, 238.0], [158.0, 96.75], [157.0, 112.75], [159.0, 97.33333333333333], [156.0, 123.0], [155.0, 157.0], [154.0, 176.0], [153.0, 141.0], [152.0, 147.0], [160.0, 97.0], [164.0, 94.4], [167.0, 175.0], [166.0, 206.0], [165.0, 241.0], [163.0, 114.0], [162.0, 157.0], [161.0, 148.0], [171.0, 102.33333333333333], [169.0, 99.66666666666667], [173.0, 79.66666666666667], [174.0, 90.5], [175.0, 78.0], [172.0, 66.0], [170.0, 91.0], [168.0, 173.0], [176.0, 71.0], [177.0, 60.0], [178.0, 55.0], [179.0, 51.5], [183.0, 81.75], [182.0, 72.0], [181.0, 33.0], [180.0, 32.0], [185.0, 60.5], [186.0, 49.0], [188.0, 48.0], [187.0, 38.5], [190.0, 42.666666666666664], [191.0, 45.333333333333336], [189.0, 25.0], [184.0, 32.0], [193.0, 41.2], [194.0, 41.83333333333333], [196.0, 38.0], [195.0, 43.0], [197.0, 31.6], [198.0, 24.0], [199.0, 29.5], [192.0, 30.0], [201.0, 28.5], [204.0, 31.333333333333332], [205.0, 26.666666666666668], [207.0, 25.5], [206.0, 33.0], [203.0, 25.0], [202.0, 21.0], [200.0, 30.0], [209.0, 26.666666666666668], [210.0, 27.0], [211.0, 26.5], [212.0, 33.0], [213.0, 25.333333333333332], [214.0, 25.0], [215.0, 33.0], [208.0, 34.0], [217.0, 31.5], [219.0, 27.8], [220.0, 22.5], [223.0, 26.0], [222.0, 24.0], [221.0, 25.0], [218.0, 23.0], [216.0, 32.0], [226.0, 33.0], [227.0, 37.0], [228.0, 22.5], [229.0, 26.5], [230.0, 29.5], [231.0, 35.666666666666664], [225.0, 31.0], [224.0, 26.0], [233.0, 28.0], [234.0, 25.0], [235.0, 25.0], [238.0, 38.5], [239.0, 35.75], [237.0, 30.0], [232.0, 22.0], [240.0, 33.5], [241.0, 32.0], [242.0, 41.0], [244.0, 50.0], [245.0, 33.166666666666664], [247.0, 39.0], [246.0, 41.0], [243.0, 52.0], [248.0, 33.0], [249.0, 27.0], [250.0, 26.333333333333332], [252.0, 29.5], [253.0, 39.666666666666664], [254.0, 36.5], [255.0, 52.0], [251.0, 33.0], [268.0, 46.0], [259.0, 44.0], [258.0, 30.0], [257.0, 53.0], [261.0, 51.0], [260.0, 36.0], [263.0, 54.0], [256.0, 60.0], [262.0, 36.0], [264.0, 38.0], [266.0, 38.333333333333336], [265.0, 47.0], [267.0, 38.0], [271.0, 40.5], [270.0, 41.0], [269.0, 66.0], [272.0, 41.0], [273.0, 38.0], [275.0, 40.0], [274.0, 42.0], [277.0, 47.666666666666664], [276.0, 38.5], [280.0, 41.0], [282.0, 52.0], [281.0, 34.0], [279.0, 43.0], [278.0, 40.0]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}, {"data": [[152.5679999999999, 95.636]], "isOverall": false, "label": "Spring Boot Http Call-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 282.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3400.0, "minX": 1.69851408E12, "maxY": 4496241.666666667, "series": [{"data": [[1.69851408E12, 4496241.666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69851408E12, 3400.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851408E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 95.636, "minX": 1.69851408E12, "maxY": 2924.8420000000006, "series": [{"data": [[1.69851408E12, 2924.8420000000006]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[1.69851408E12, 115.45200000000003]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[1.69851408E12, 95.636]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851408E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 76.35200000000003, "minX": 1.69851408E12, "maxY": 2905.0499999999984, "series": [{"data": [[1.69851408E12, 2905.0499999999984]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[1.69851408E12, 96.46800000000003]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[1.69851408E12, 76.35200000000003]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851408E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 1.5559999999999998, "minX": 1.69851408E12, "maxY": 3.9980000000000016, "series": [{"data": [[1.69851408E12, 3.9980000000000016]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[1.69851408E12, 1.5979999999999996]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[1.69851408E12, 1.5559999999999998]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851408E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 15.0, "minX": 1.69851408E12, "maxY": 5341.0, "series": [{"data": [[1.69851408E12, 5341.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69851408E12, 3836.000000000002]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69851408E12, 5202.540000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69851408E12, 4617.5]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69851408E12, 15.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69851408E12, 165.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851408E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 33.0, "minX": 66.0, "maxY": 301.0, "series": [{"data": [[66.0, 42.0], [132.0, 99.5], [146.0, 190.0], [150.0, 301.0], [159.0, 53.0], [154.0, 45.0], [179.0, 33.0], [107.0, 206.0], [115.0, 266.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 179.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 28.0, "minX": 66.0, "maxY": 267.5, "series": [{"data": [[66.0, 35.0], [132.0, 74.5], [146.0, 154.0], [150.0, 267.5], [159.0, 42.0], [154.0, 36.5], [179.0, 28.0], [107.0, 154.0], [115.0, 224.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 179.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 25.0, "minX": 1.69851408E12, "maxY": 25.0, "series": [{"data": [[1.69851408E12, 25.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851408E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 25.0, "minX": 1.69851408E12, "maxY": 25.0, "series": [{"data": [[1.69851408E12, 25.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851408E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 8.333333333333334, "minX": 1.69851408E12, "maxY": 8.333333333333334, "series": [{"data": [[1.69851408E12, 8.333333333333334]], "isOverall": false, "label": "Gin Gonic Http Call-success", "isController": false}, {"data": [[1.69851408E12, 8.333333333333334]], "isOverall": false, "label": "Spring Boot Http Call-success", "isController": false}, {"data": [[1.69851408E12, 8.333333333333334]], "isOverall": false, "label": "Express Js Http Call-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851408E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 25.0, "minX": 1.69851408E12, "maxY": 25.0, "series": [{"data": [[1.69851408E12, 25.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851408E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}


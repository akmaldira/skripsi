/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 17.0, "minX": 0.0, "maxY": 8062.0, "series": [{"data": [[0.0, 204.0], [0.1, 250.0], [0.2, 251.0], [0.3, 251.0], [0.4, 286.0], [0.5, 346.0], [0.6, 362.0], [0.7, 384.0], [0.8, 404.0], [0.9, 445.0], [1.0, 453.0], [1.1, 475.0], [1.2, 510.0], [1.3, 578.0], [1.4, 578.0], [1.5, 584.0], [1.6, 596.0], [1.7, 610.0], [1.8, 637.0], [1.9, 659.0], [2.0, 679.0], [2.1, 699.0], [2.2, 701.0], [2.3, 722.0], [2.4, 761.0], [2.5, 765.0], [2.6, 769.0], [2.7, 777.0], [2.8, 785.0], [2.9, 786.0], [3.0, 791.0], [3.1, 794.0], [3.2, 801.0], [3.3, 818.0], [3.4, 818.0], [3.5, 836.0], [3.6, 871.0], [3.7, 880.0], [3.8, 886.0], [3.9, 887.0], [4.0, 890.0], [4.1, 891.0], [4.2, 891.0], [4.3, 897.0], [4.4, 899.0], [4.5, 923.0], [4.6, 935.0], [4.7, 948.0], [4.8, 948.0], [4.9, 948.0], [5.0, 964.0], [5.1, 967.0], [5.2, 969.0], [5.3, 971.0], [5.4, 1032.0], [5.5, 1034.0], [5.6, 1034.0], [5.7, 1040.0], [5.8, 1043.0], [5.9, 1044.0], [6.0, 1044.0], [6.1, 1045.0], [6.2, 1049.0], [6.3, 1075.0], [6.4, 1076.0], [6.5, 1078.0], [6.6, 1103.0], [6.7, 1114.0], [6.8, 1114.0], [6.9, 1134.0], [7.0, 1135.0], [7.1, 1142.0], [7.2, 1185.0], [7.3, 1187.0], [7.4, 1192.0], [7.5, 1197.0], [7.6, 1211.0], [7.7, 1214.0], [7.8, 1225.0], [7.9, 1233.0], [8.0, 1239.0], [8.1, 1239.0], [8.2, 1278.0], [8.3, 1295.0], [8.4, 1296.0], [8.5, 1301.0], [8.6, 1374.0], [8.7, 1374.0], [8.8, 1378.0], [8.9, 1386.0], [9.0, 1392.0], [9.1, 1404.0], [9.2, 1420.0], [9.3, 1433.0], [9.4, 1444.0], [9.5, 1446.0], [9.6, 1458.0], [9.7, 1469.0], [9.8, 1481.0], [9.9, 1493.0], [10.0, 1494.0], [10.1, 1501.0], [10.2, 1522.0], [10.3, 1525.0], [10.4, 1529.0], [10.5, 1539.0], [10.6, 1541.0], [10.7, 1549.0], [10.8, 1565.0], [10.9, 1599.0], [11.0, 1610.0], [11.1, 1623.0], [11.2, 1644.0], [11.3, 1676.0], [11.4, 1678.0], [11.5, 1683.0], [11.6, 1683.0], [11.7, 1720.0], [11.8, 1722.0], [11.9, 1730.0], [12.0, 1737.0], [12.1, 1737.0], [12.2, 1738.0], [12.3, 1744.0], [12.4, 1764.0], [12.5, 1782.0], [12.6, 1785.0], [12.7, 1803.0], [12.8, 1804.0], [12.9, 1815.0], [13.0, 1836.0], [13.1, 1917.0], [13.2, 1926.0], [13.3, 1926.0], [13.4, 1927.0], [13.5, 1938.0], [13.6, 1940.0], [13.7, 1943.0], [13.8, 1961.0], [13.9, 1963.0], [14.0, 1965.0], [14.1, 1986.0], [14.2, 2008.0], [14.3, 2010.0], [14.4, 2015.0], [14.5, 2015.0], [14.6, 2022.0], [14.7, 2037.0], [14.8, 2048.0], [14.9, 2050.0], [15.0, 2070.0], [15.1, 2074.0], [15.2, 2076.0], [15.3, 2083.0], [15.4, 2092.0], [15.5, 2147.0], [15.6, 2152.0], [15.7, 2157.0], [15.8, 2160.0], [15.9, 2164.0], [16.0, 2169.0], [16.1, 2177.0], [16.2, 2182.0], [16.3, 2209.0], [16.4, 2215.0], [16.5, 2220.0], [16.6, 2221.0], [16.7, 2225.0], [16.8, 2229.0], [16.9, 2238.0], [17.0, 2253.0], [17.1, 2273.0], [17.2, 2279.0], [17.3, 2289.0], [17.4, 2297.0], [17.5, 2311.0], [17.6, 2314.0], [17.7, 2315.0], [17.8, 2318.0], [17.9, 2328.0], [18.0, 2329.0], [18.1, 2340.0], [18.2, 2359.0], [18.3, 2370.0], [18.4, 2382.0], [18.5, 2401.0], [18.6, 2409.0], [18.7, 2409.0], [18.8, 2412.0], [18.9, 2416.0], [19.0, 2416.0], [19.1, 2418.0], [19.2, 2419.0], [19.3, 2443.0], [19.4, 2478.0], [19.5, 2478.0], [19.6, 2480.0], [19.7, 2481.0], [19.8, 2493.0], [19.9, 2494.0], [20.0, 2497.0], [20.1, 2503.0], [20.2, 2550.0], [20.3, 2582.0], [20.4, 2593.0], [20.5, 2595.0], [20.6, 2598.0], [20.7, 2617.0], [20.8, 2626.0], [20.9, 2627.0], [21.0, 2628.0], [21.1, 2629.0], [21.2, 2631.0], [21.3, 2636.0], [21.4, 2644.0], [21.5, 2670.0], [21.6, 2702.0], [21.7, 2703.0], [21.8, 2707.0], [21.9, 2720.0], [22.0, 2733.0], [22.1, 2735.0], [22.2, 2755.0], [22.3, 2765.0], [22.4, 2783.0], [22.5, 2785.0], [22.6, 2787.0], [22.7, 2789.0], [22.8, 2795.0], [22.9, 2803.0], [23.0, 2808.0], [23.1, 2809.0], [23.2, 2811.0], [23.3, 2816.0], [23.4, 2841.0], [23.5, 2852.0], [23.6, 2854.0], [23.7, 2859.0], [23.8, 2879.0], [23.9, 2880.0], [24.0, 2884.0], [24.1, 2887.0], [24.2, 2895.0], [24.3, 2908.0], [24.4, 2926.0], [24.5, 2928.0], [24.6, 2944.0], [24.7, 2946.0], [24.8, 2953.0], [24.9, 2961.0], [25.0, 2962.0], [25.1, 2967.0], [25.2, 2990.0], [25.3, 3010.0], [25.4, 3013.0], [25.5, 3019.0], [25.6, 3020.0], [25.7, 3032.0], [25.8, 3035.0], [25.9, 3046.0], [26.0, 3049.0], [26.1, 3071.0], [26.2, 3106.0], [26.3, 3107.0], [26.4, 3112.0], [26.5, 3121.0], [26.6, 3131.0], [26.7, 3134.0], [26.8, 3136.0], [26.9, 3142.0], [27.0, 3155.0], [27.1, 3166.0], [27.2, 3170.0], [27.3, 3174.0], [27.4, 3185.0], [27.5, 3190.0], [27.6, 3194.0], [27.7, 3196.0], [27.8, 3208.0], [27.9, 3209.0], [28.0, 3228.0], [28.1, 3230.0], [28.2, 3248.0], [28.3, 3251.0], [28.4, 3258.0], [28.5, 3261.0], [28.6, 3264.0], [28.7, 3275.0], [28.8, 3278.0], [28.9, 3295.0], [29.0, 3302.0], [29.1, 3306.0], [29.2, 3309.0], [29.3, 3319.0], [29.4, 3325.0], [29.5, 3328.0], [29.6, 3334.0], [29.7, 3353.0], [29.8, 3378.0], [29.9, 3380.0], [30.0, 3386.0], [30.1, 3403.0], [30.2, 3406.0], [30.3, 3407.0], [30.4, 3412.0], [30.5, 3413.0], [30.6, 3418.0], [30.7, 3440.0], [30.8, 3447.0], [30.9, 3448.0], [31.0, 3472.0], [31.1, 3478.0], [31.2, 3481.0], [31.3, 3484.0], [31.4, 3498.0], [31.5, 3506.0], [31.6, 3506.0], [31.7, 3509.0], [31.8, 3537.0], [31.9, 3537.0], [32.0, 3550.0], [32.1, 3557.0], [32.2, 3560.0], [32.3, 3571.0], [32.4, 3596.0], [32.5, 3618.0], [32.6, 3619.0], [32.7, 3638.0], [32.8, 3642.0], [32.9, 3646.0], [33.0, 3651.0], [33.1, 3655.0], [33.2, 3656.0], [33.3, 3668.0], [33.4, 3674.0], [33.5, 3685.0], [33.6, 3685.0], [33.7, 3687.0], [33.8, 3699.0], [33.9, 3716.0], [34.0, 3720.0], [34.1, 3721.0], [34.2, 3733.0], [34.3, 3734.0], [34.4, 3743.0], [34.5, 3770.0], [34.6, 3778.0], [34.7, 3785.0], [34.8, 3789.0], [34.9, 3799.0], [35.0, 3799.0], [35.1, 3803.0], [35.2, 3822.0], [35.3, 3825.0], [35.4, 3838.0], [35.5, 3855.0], [35.6, 3860.0], [35.7, 3861.0], [35.8, 3867.0], [35.9, 3868.0], [36.0, 3869.0], [36.1, 3889.0], [36.2, 3890.0], [36.3, 3896.0], [36.4, 3913.0], [36.5, 3915.0], [36.6, 3920.0], [36.7, 3921.0], [36.8, 3926.0], [36.9, 3930.0], [37.0, 3933.0], [37.1, 3957.0], [37.2, 3976.0], [37.3, 3976.0], [37.4, 3981.0], [37.5, 3983.0], [37.6, 3983.0], [37.7, 3985.0], [37.8, 3986.0], [37.9, 3992.0], [38.0, 3995.0], [38.1, 3999.0], [38.2, 4020.0], [38.3, 4023.0], [38.4, 4036.0], [38.5, 4041.0], [38.6, 4049.0], [38.7, 4053.0], [38.8, 4068.0], [38.9, 4074.0], [39.0, 4076.0], [39.1, 4088.0], [39.2, 4096.0], [39.3, 4097.0], [39.4, 4109.0], [39.5, 4113.0], [39.6, 4117.0], [39.7, 4128.0], [39.8, 4139.0], [39.9, 4143.0], [40.0, 4145.0], [40.1, 4176.0], [40.2, 4177.0], [40.3, 4178.0], [40.4, 4188.0], [40.5, 4189.0], [40.6, 4210.0], [40.7, 4221.0], [40.8, 4233.0], [40.9, 4244.0], [41.0, 4253.0], [41.1, 4256.0], [41.2, 4259.0], [41.3, 4262.0], [41.4, 4277.0], [41.5, 4286.0], [41.6, 4302.0], [41.7, 4305.0], [41.8, 4322.0], [41.9, 4324.0], [42.0, 4344.0], [42.1, 4351.0], [42.2, 4352.0], [42.3, 4359.0], [42.4, 4371.0], [42.5, 4379.0], [42.6, 4398.0], [42.7, 4404.0], [42.8, 4413.0], [42.9, 4416.0], [43.0, 4417.0], [43.1, 4418.0], [43.2, 4433.0], [43.3, 4445.0], [43.4, 4452.0], [43.5, 4465.0], [43.6, 4476.0], [43.7, 4478.0], [43.8, 4495.0], [43.9, 4498.0], [44.0, 4505.0], [44.1, 4516.0], [44.2, 4543.0], [44.3, 4548.0], [44.4, 4550.0], [44.5, 4559.0], [44.6, 4560.0], [44.7, 4568.0], [44.8, 4579.0], [44.9, 4582.0], [45.0, 4595.0], [45.1, 4605.0], [45.2, 4611.0], [45.3, 4626.0], [45.4, 4633.0], [45.5, 4641.0], [45.6, 4643.0], [45.7, 4654.0], [45.8, 4655.0], [45.9, 4665.0], [46.0, 4669.0], [46.1, 4675.0], [46.2, 4691.0], [46.3, 4692.0], [46.4, 4704.0], [46.5, 4709.0], [46.6, 4714.0], [46.7, 4716.0], [46.8, 4723.0], [46.9, 4736.0], [47.0, 4755.0], [47.1, 4756.0], [47.2, 4772.0], [47.3, 4776.0], [47.4, 4784.0], [47.5, 4784.0], [47.6, 4787.0], [47.7, 4790.0], [47.8, 4803.0], [47.9, 4815.0], [48.0, 4830.0], [48.1, 4837.0], [48.2, 4846.0], [48.3, 4846.0], [48.4, 4850.0], [48.5, 4859.0], [48.6, 4867.0], [48.7, 4874.0], [48.8, 4883.0], [48.9, 4890.0], [49.0, 4898.0], [49.1, 4903.0], [49.2, 4911.0], [49.3, 4913.0], [49.4, 4920.0], [49.5, 4928.0], [49.6, 4937.0], [49.7, 4949.0], [49.8, 4950.0], [49.9, 4958.0], [50.0, 4963.0], [50.1, 4966.0], [50.2, 4971.0], [50.3, 4975.0], [50.4, 4979.0], [50.5, 4996.0], [50.6, 5000.0], [50.7, 5003.0], [50.8, 5012.0], [50.9, 5014.0], [51.0, 5022.0], [51.1, 5022.0], [51.2, 5027.0], [51.3, 5035.0], [51.4, 5046.0], [51.5, 5054.0], [51.6, 5056.0], [51.7, 5067.0], [51.8, 5068.0], [51.9, 5075.0], [52.0, 5077.0], [52.1, 5080.0], [52.2, 5088.0], [52.3, 5104.0], [52.4, 5108.0], [52.5, 5112.0], [52.6, 5122.0], [52.7, 5122.0], [52.8, 5133.0], [52.9, 5137.0], [53.0, 5144.0], [53.1, 5152.0], [53.2, 5161.0], [53.3, 5167.0], [53.4, 5171.0], [53.5, 5176.0], [53.6, 5183.0], [53.7, 5185.0], [53.8, 5190.0], [53.9, 5195.0], [54.0, 5200.0], [54.1, 5207.0], [54.2, 5209.0], [54.3, 5212.0], [54.4, 5220.0], [54.5, 5228.0], [54.6, 5232.0], [54.7, 5237.0], [54.8, 5241.0], [54.9, 5244.0], [55.0, 5248.0], [55.1, 5255.0], [55.2, 5261.0], [55.3, 5262.0], [55.4, 5268.0], [55.5, 5272.0], [55.6, 5274.0], [55.7, 5277.0], [55.8, 5284.0], [55.9, 5299.0], [56.0, 5300.0], [56.1, 5303.0], [56.2, 5306.0], [56.3, 5314.0], [56.4, 5323.0], [56.5, 5328.0], [56.6, 5338.0], [56.7, 5341.0], [56.8, 5348.0], [56.9, 5357.0], [57.0, 5360.0], [57.1, 5367.0], [57.2, 5372.0], [57.3, 5379.0], [57.4, 5389.0], [57.5, 5396.0], [57.6, 5407.0], [57.7, 5412.0], [57.8, 5415.0], [57.9, 5417.0], [58.0, 5423.0], [58.1, 5434.0], [58.2, 5435.0], [58.3, 5447.0], [58.4, 5451.0], [58.5, 5452.0], [58.6, 5464.0], [58.7, 5465.0], [58.8, 5469.0], [58.9, 5475.0], [59.0, 5475.0], [59.1, 5484.0], [59.2, 5491.0], [59.3, 5509.0], [59.4, 5511.0], [59.5, 5523.0], [59.6, 5523.0], [59.7, 5526.0], [59.8, 5536.0], [59.9, 5541.0], [60.0, 5541.0], [60.1, 5544.0], [60.2, 5563.0], [60.3, 5567.0], [60.4, 5573.0], [60.5, 5576.0], [60.6, 5581.0], [60.7, 5582.0], [60.8, 5586.0], [60.9, 5592.0], [61.0, 5603.0], [61.1, 5610.0], [61.2, 5631.0], [61.3, 5633.0], [61.4, 5637.0], [61.5, 5642.0], [61.6, 5642.0], [61.7, 5645.0], [61.8, 5651.0], [61.9, 5658.0], [62.0, 5660.0], [62.1, 5683.0], [62.2, 5692.0], [62.3, 5694.0], [62.4, 5696.0], [62.5, 5705.0], [62.6, 5708.0], [62.7, 5713.0], [62.8, 5722.0], [62.9, 5727.0], [63.0, 5748.0], [63.1, 5757.0], [63.2, 5788.0], [63.3, 5789.0], [63.4, 5794.0], [63.5, 5796.0], [63.6, 5798.0], [63.7, 5803.0], [63.8, 5803.0], [63.9, 5805.0], [64.0, 5818.0], [64.1, 5824.0], [64.2, 5830.0], [64.3, 5836.0], [64.4, 5853.0], [64.5, 5855.0], [64.6, 5861.0], [64.7, 5865.0], [64.8, 5873.0], [64.9, 5875.0], [65.0, 5880.0], [65.1, 5881.0], [65.2, 5896.0], [65.3, 5897.0], [65.4, 5901.0], [65.5, 5903.0], [65.6, 5907.0], [65.7, 5918.0], [65.8, 5924.0], [65.9, 5926.0], [66.0, 5928.0], [66.1, 5931.0], [66.2, 5948.0], [66.3, 5951.0], [66.4, 5952.0], [66.5, 5953.0], [66.6, 5959.0], [66.7, 5973.0], [66.8, 5975.0], [66.9, 5977.0], [67.0, 5980.0], [67.1, 5992.0], [67.2, 5993.0], [67.3, 6006.0], [67.4, 6012.0], [67.5, 6015.0], [67.6, 6025.0], [67.7, 6030.0], [67.8, 6030.0], [67.9, 6046.0], [68.0, 6046.0], [68.1, 6059.0], [68.2, 6061.0], [68.3, 6070.0], [68.4, 6073.0], [68.5, 6074.0], [68.6, 6075.0], [68.7, 6076.0], [68.8, 6076.0], [68.9, 6090.0], [69.0, 6098.0], [69.1, 6099.0], [69.2, 6100.0], [69.3, 6100.0], [69.4, 6102.0], [69.5, 6106.0], [69.6, 6114.0], [69.7, 6118.0], [69.8, 6119.0], [69.9, 6120.0], [70.0, 6135.0], [70.1, 6141.0], [70.2, 6141.0], [70.3, 6145.0], [70.4, 6164.0], [70.5, 6169.0], [70.6, 6172.0], [70.7, 6173.0], [70.8, 6175.0], [70.9, 6193.0], [71.0, 6198.0], [71.1, 6199.0], [71.2, 6210.0], [71.3, 6211.0], [71.4, 6212.0], [71.5, 6215.0], [71.6, 6215.0], [71.7, 6218.0], [71.8, 6224.0], [71.9, 6232.0], [72.0, 6234.0], [72.1, 6235.0], [72.2, 6243.0], [72.3, 6243.0], [72.4, 6245.0], [72.5, 6272.0], [72.6, 6274.0], [72.7, 6277.0], [72.8, 6278.0], [72.9, 6278.0], [73.0, 6282.0], [73.1, 6282.0], [73.2, 6284.0], [73.3, 6295.0], [73.4, 6302.0], [73.5, 6352.0], [73.6, 6355.0], [73.7, 6356.0], [73.8, 6360.0], [73.9, 6366.0], [74.0, 6389.0], [74.1, 6400.0], [74.2, 6402.0], [74.3, 6407.0], [74.4, 6411.0], [74.5, 6422.0], [74.6, 6425.0], [74.7, 6428.0], [74.8, 6433.0], [74.9, 6434.0], [75.0, 6446.0], [75.1, 6448.0], [75.2, 6455.0], [75.3, 6458.0], [75.4, 6459.0], [75.5, 6463.0], [75.6, 6465.0], [75.7, 6480.0], [75.8, 6480.0], [75.9, 6495.0], [76.0, 6502.0], [76.1, 6509.0], [76.2, 6519.0], [76.3, 6544.0], [76.4, 6545.0], [76.5, 6550.0], [76.6, 6551.0], [76.7, 6553.0], [76.8, 6557.0], [76.9, 6558.0], [77.0, 6570.0], [77.1, 6585.0], [77.2, 6590.0], [77.3, 6609.0], [77.4, 6612.0], [77.5, 6633.0], [77.6, 6633.0], [77.7, 6637.0], [77.8, 6638.0], [77.9, 6654.0], [78.0, 6655.0], [78.1, 6668.0], [78.2, 6671.0], [78.3, 6672.0], [78.4, 6679.0], [78.5, 6682.0], [78.6, 6682.0], [78.7, 6686.0], [78.8, 6691.0], [78.9, 6718.0], [79.0, 6721.0], [79.1, 6726.0], [79.2, 6730.0], [79.3, 6735.0], [79.4, 6740.0], [79.5, 6749.0], [79.6, 6750.0], [79.7, 6754.0], [79.8, 6783.0], [79.9, 6786.0], [80.0, 6788.0], [80.1, 6793.0], [80.2, 6795.0], [80.3, 6803.0], [80.4, 6804.0], [80.5, 6808.0], [80.6, 6812.0], [80.7, 6834.0], [80.8, 6839.0], [80.9, 6840.0], [81.0, 6844.0], [81.1, 6848.0], [81.2, 6856.0], [81.3, 6858.0], [81.4, 6862.0], [81.5, 6865.0], [81.6, 6879.0], [81.7, 6885.0], [81.8, 6891.0], [81.9, 6897.0], [82.0, 6901.0], [82.1, 6903.0], [82.2, 6910.0], [82.3, 6910.0], [82.4, 6911.0], [82.5, 6964.0], [82.6, 6972.0], [82.7, 6974.0], [82.8, 6976.0], [82.9, 6983.0], [83.0, 6990.0], [83.1, 6994.0], [83.2, 6995.0], [83.3, 7006.0], [83.4, 7018.0], [83.5, 7020.0], [83.6, 7023.0], [83.7, 7027.0], [83.8, 7042.0], [83.9, 7043.0], [84.0, 7053.0], [84.1, 7063.0], [84.2, 7065.0], [84.3, 7067.0], [84.4, 7070.0], [84.5, 7077.0], [84.6, 7096.0], [84.7, 7104.0], [84.8, 7105.0], [84.9, 7117.0], [85.0, 7125.0], [85.1, 7131.0], [85.2, 7145.0], [85.3, 7147.0], [85.4, 7150.0], [85.5, 7162.0], [85.6, 7175.0], [85.7, 7184.0], [85.8, 7185.0], [85.9, 7189.0], [86.0, 7191.0], [86.1, 7192.0], [86.2, 7193.0], [86.3, 7197.0], [86.4, 7231.0], [86.5, 7234.0], [86.6, 7241.0], [86.7, 7242.0], [86.8, 7252.0], [86.9, 7252.0], [87.0, 7254.0], [87.1, 7255.0], [87.2, 7257.0], [87.3, 7261.0], [87.4, 7267.0], [87.5, 7271.0], [87.6, 7273.0], [87.7, 7280.0], [87.8, 7286.0], [87.9, 7288.0], [88.0, 7302.0], [88.1, 7305.0], [88.2, 7308.0], [88.3, 7309.0], [88.4, 7346.0], [88.5, 7355.0], [88.6, 7356.0], [88.7, 7356.0], [88.8, 7361.0], [88.9, 7375.0], [89.0, 7391.0], [89.1, 7400.0], [89.2, 7405.0], [89.3, 7428.0], [89.4, 7460.0], [89.5, 7475.0], [89.6, 7479.0], [89.7, 7481.0], [89.8, 7487.0], [89.9, 7501.0], [90.0, 7524.0], [90.1, 7524.0], [90.2, 7535.0], [90.3, 7539.0], [90.4, 7539.0], [90.5, 7542.0], [90.6, 7568.0], [90.7, 7569.0], [90.8, 7575.0], [90.9, 7575.0], [91.0, 7585.0], [91.1, 7597.0], [91.2, 7598.0], [91.3, 7599.0], [91.4, 7599.0], [91.5, 7601.0], [91.6, 7602.0], [91.7, 7606.0], [91.8, 7607.0], [91.9, 7624.0], [92.0, 7640.0], [92.1, 7643.0], [92.2, 7643.0], [92.3, 7646.0], [92.4, 7652.0], [92.5, 7652.0], [92.6, 7652.0], [92.7, 7659.0], [92.8, 7672.0], [92.9, 7675.0], [93.0, 7679.0], [93.1, 7679.0], [93.2, 7682.0], [93.3, 7682.0], [93.4, 7701.0], [93.5, 7706.0], [93.6, 7710.0], [93.7, 7713.0], [93.8, 7718.0], [93.9, 7723.0], [94.0, 7728.0], [94.1, 7733.0], [94.2, 7734.0], [94.3, 7739.0], [94.4, 7743.0], [94.5, 7748.0], [94.6, 7751.0], [94.7, 7773.0], [94.8, 7774.0], [94.9, 7776.0], [95.0, 7777.0], [95.1, 7780.0], [95.2, 7782.0], [95.3, 7785.0], [95.4, 7797.0], [95.5, 7799.0], [95.6, 7799.0], [95.7, 7831.0], [95.8, 7831.0], [95.9, 7834.0], [96.0, 7839.0], [96.1, 7845.0], [96.2, 7851.0], [96.3, 7857.0], [96.4, 7868.0], [96.5, 7869.0], [96.6, 7870.0], [96.7, 7888.0], [96.8, 7892.0], [96.9, 7898.0], [97.0, 7907.0], [97.1, 7914.0], [97.2, 7916.0], [97.3, 7920.0], [97.4, 7928.0], [97.5, 7928.0], [97.6, 7939.0], [97.7, 7951.0], [97.8, 7952.0], [97.9, 7956.0], [98.0, 7961.0], [98.1, 7965.0], [98.2, 7969.0], [98.3, 7973.0], [98.4, 7978.0], [98.5, 7983.0], [98.6, 7996.0], [98.7, 8004.0], [98.8, 8012.0], [98.9, 8014.0], [99.0, 8015.0], [99.1, 8018.0], [99.2, 8020.0], [99.3, 8024.0], [99.4, 8028.0], [99.5, 8030.0], [99.6, 8050.0], [99.7, 8052.0], [99.8, 8059.0], [99.9, 8062.0]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[0.0, 17.0], [0.1, 17.0], [0.2, 17.0], [0.3, 17.0], [0.4, 18.0], [0.5, 18.0], [0.6, 18.0], [0.7, 18.0], [0.8, 19.0], [0.9, 19.0], [1.0, 19.0], [1.1, 19.0], [1.2, 19.0], [1.3, 19.0], [1.4, 20.0], [1.5, 20.0], [1.6, 20.0], [1.7, 20.0], [1.8, 20.0], [1.9, 20.0], [2.0, 21.0], [2.1, 21.0], [2.2, 21.0], [2.3, 21.0], [2.4, 21.0], [2.5, 21.0], [2.6, 21.0], [2.7, 22.0], [2.8, 22.0], [2.9, 22.0], [3.0, 22.0], [3.1, 22.0], [3.2, 22.0], [3.3, 22.0], [3.4, 22.0], [3.5, 22.0], [3.6, 22.0], [3.7, 22.0], [3.8, 22.0], [3.9, 22.0], [4.0, 22.0], [4.1, 22.0], [4.2, 22.0], [4.3, 22.0], [4.4, 22.0], [4.5, 22.0], [4.6, 22.0], [4.7, 22.0], [4.8, 22.0], [4.9, 22.0], [5.0, 23.0], [5.1, 23.0], [5.2, 23.0], [5.3, 23.0], [5.4, 23.0], [5.5, 23.0], [5.6, 23.0], [5.7, 23.0], [5.8, 23.0], [5.9, 23.0], [6.0, 23.0], [6.1, 23.0], [6.2, 23.0], [6.3, 23.0], [6.4, 23.0], [6.5, 23.0], [6.6, 23.0], [6.7, 23.0], [6.8, 23.0], [6.9, 23.0], [7.0, 23.0], [7.1, 23.0], [7.2, 23.0], [7.3, 24.0], [7.4, 24.0], [7.5, 24.0], [7.6, 24.0], [7.7, 24.0], [7.8, 24.0], [7.9, 24.0], [8.0, 24.0], [8.1, 24.0], [8.2, 24.0], [8.3, 24.0], [8.4, 24.0], [8.5, 24.0], [8.6, 24.0], [8.7, 24.0], [8.8, 24.0], [8.9, 24.0], [9.0, 24.0], [9.1, 24.0], [9.2, 24.0], [9.3, 24.0], [9.4, 24.0], [9.5, 24.0], [9.6, 24.0], [9.7, 24.0], [9.8, 24.0], [9.9, 24.0], [10.0, 24.0], [10.1, 24.0], [10.2, 24.0], [10.3, 24.0], [10.4, 24.0], [10.5, 24.0], [10.6, 24.0], [10.7, 25.0], [10.8, 25.0], [10.9, 25.0], [11.0, 25.0], [11.1, 25.0], [11.2, 25.0], [11.3, 25.0], [11.4, 25.0], [11.5, 25.0], [11.6, 25.0], [11.7, 25.0], [11.8, 25.0], [11.9, 25.0], [12.0, 25.0], [12.1, 25.0], [12.2, 25.0], [12.3, 25.0], [12.4, 25.0], [12.5, 25.0], [12.6, 25.0], [12.7, 25.0], [12.8, 25.0], [12.9, 25.0], [13.0, 25.0], [13.1, 25.0], [13.2, 25.0], [13.3, 25.0], [13.4, 25.0], [13.5, 25.0], [13.6, 25.0], [13.7, 25.0], [13.8, 26.0], [13.9, 26.0], [14.0, 26.0], [14.1, 26.0], [14.2, 26.0], [14.3, 26.0], [14.4, 26.0], [14.5, 26.0], [14.6, 26.0], [14.7, 26.0], [14.8, 26.0], [14.9, 26.0], [15.0, 26.0], [15.1, 26.0], [15.2, 26.0], [15.3, 26.0], [15.4, 26.0], [15.5, 26.0], [15.6, 26.0], [15.7, 26.0], [15.8, 26.0], [15.9, 26.0], [16.0, 26.0], [16.1, 26.0], [16.2, 26.0], [16.3, 26.0], [16.4, 26.0], [16.5, 26.0], [16.6, 27.0], [16.7, 27.0], [16.8, 27.0], [16.9, 27.0], [17.0, 27.0], [17.1, 27.0], [17.2, 27.0], [17.3, 27.0], [17.4, 27.0], [17.5, 27.0], [17.6, 27.0], [17.7, 27.0], [17.8, 27.0], [17.9, 27.0], [18.0, 27.0], [18.1, 27.0], [18.2, 27.0], [18.3, 27.0], [18.4, 27.0], [18.5, 27.0], [18.6, 27.0], [18.7, 27.0], [18.8, 27.0], [18.9, 28.0], [19.0, 28.0], [19.1, 28.0], [19.2, 28.0], [19.3, 28.0], [19.4, 28.0], [19.5, 28.0], [19.6, 28.0], [19.7, 28.0], [19.8, 28.0], [19.9, 28.0], [20.0, 28.0], [20.1, 28.0], [20.2, 28.0], [20.3, 28.0], [20.4, 28.0], [20.5, 28.0], [20.6, 28.0], [20.7, 28.0], [20.8, 28.0], [20.9, 28.0], [21.0, 28.0], [21.1, 28.0], [21.2, 28.0], [21.3, 28.0], [21.4, 28.0], [21.5, 28.0], [21.6, 28.0], [21.7, 29.0], [21.8, 29.0], [21.9, 29.0], [22.0, 29.0], [22.1, 29.0], [22.2, 29.0], [22.3, 29.0], [22.4, 29.0], [22.5, 29.0], [22.6, 29.0], [22.7, 29.0], [22.8, 29.0], [22.9, 29.0], [23.0, 29.0], [23.1, 29.0], [23.2, 29.0], [23.3, 29.0], [23.4, 29.0], [23.5, 29.0], [23.6, 29.0], [23.7, 29.0], [23.8, 29.0], [23.9, 29.0], [24.0, 29.0], [24.1, 29.0], [24.2, 29.0], [24.3, 29.0], [24.4, 29.0], [24.5, 29.0], [24.6, 29.0], [24.7, 29.0], [24.8, 29.0], [24.9, 29.0], [25.0, 29.0], [25.1, 29.0], [25.2, 30.0], [25.3, 30.0], [25.4, 30.0], [25.5, 30.0], [25.6, 30.0], [25.7, 30.0], [25.8, 30.0], [25.9, 30.0], [26.0, 30.0], [26.1, 30.0], [26.2, 30.0], [26.3, 30.0], [26.4, 30.0], [26.5, 30.0], [26.6, 30.0], [26.7, 30.0], [26.8, 30.0], [26.9, 30.0], [27.0, 30.0], [27.1, 30.0], [27.2, 30.0], [27.3, 30.0], [27.4, 31.0], [27.5, 31.0], [27.6, 31.0], [27.7, 31.0], [27.8, 31.0], [27.9, 31.0], [28.0, 31.0], [28.1, 31.0], [28.2, 31.0], [28.3, 31.0], [28.4, 31.0], [28.5, 31.0], [28.6, 31.0], [28.7, 31.0], [28.8, 31.0], [28.9, 31.0], [29.0, 31.0], [29.1, 31.0], [29.2, 31.0], [29.3, 31.0], [29.4, 31.0], [29.5, 31.0], [29.6, 31.0], [29.7, 31.0], [29.8, 32.0], [29.9, 32.0], [30.0, 32.0], [30.1, 32.0], [30.2, 32.0], [30.3, 32.0], [30.4, 32.0], [30.5, 32.0], [30.6, 32.0], [30.7, 32.0], [30.8, 32.0], [30.9, 32.0], [31.0, 32.0], [31.1, 32.0], [31.2, 32.0], [31.3, 32.0], [31.4, 32.0], [31.5, 32.0], [31.6, 32.0], [31.7, 32.0], [31.8, 32.0], [31.9, 32.0], [32.0, 32.0], [32.1, 33.0], [32.2, 33.0], [32.3, 33.0], [32.4, 33.0], [32.5, 33.0], [32.6, 33.0], [32.7, 33.0], [32.8, 33.0], [32.9, 33.0], [33.0, 33.0], [33.1, 33.0], [33.2, 33.0], [33.3, 33.0], [33.4, 33.0], [33.5, 33.0], [33.6, 33.0], [33.7, 33.0], [33.8, 33.0], [33.9, 33.0], [34.0, 33.0], [34.1, 33.0], [34.2, 33.0], [34.3, 33.0], [34.4, 33.0], [34.5, 34.0], [34.6, 34.0], [34.7, 34.0], [34.8, 34.0], [34.9, 34.0], [35.0, 34.0], [35.1, 34.0], [35.2, 34.0], [35.3, 34.0], [35.4, 34.0], [35.5, 34.0], [35.6, 34.0], [35.7, 34.0], [35.8, 34.0], [35.9, 34.0], [36.0, 34.0], [36.1, 34.0], [36.2, 34.0], [36.3, 34.0], [36.4, 35.0], [36.5, 35.0], [36.6, 35.0], [36.7, 35.0], [36.8, 35.0], [36.9, 35.0], [37.0, 35.0], [37.1, 35.0], [37.2, 35.0], [37.3, 35.0], [37.4, 35.0], [37.5, 35.0], [37.6, 35.0], [37.7, 35.0], [37.8, 36.0], [37.9, 36.0], [38.0, 36.0], [38.1, 36.0], [38.2, 36.0], [38.3, 36.0], [38.4, 36.0], [38.5, 36.0], [38.6, 36.0], [38.7, 36.0], [38.8, 36.0], [38.9, 36.0], [39.0, 36.0], [39.1, 36.0], [39.2, 36.0], [39.3, 36.0], [39.4, 36.0], [39.5, 36.0], [39.6, 37.0], [39.7, 37.0], [39.8, 37.0], [39.9, 37.0], [40.0, 37.0], [40.1, 37.0], [40.2, 37.0], [40.3, 37.0], [40.4, 37.0], [40.5, 37.0], [40.6, 37.0], [40.7, 37.0], [40.8, 37.0], [40.9, 37.0], [41.0, 37.0], [41.1, 38.0], [41.2, 38.0], [41.3, 38.0], [41.4, 38.0], [41.5, 38.0], [41.6, 38.0], [41.7, 38.0], [41.8, 38.0], [41.9, 38.0], [42.0, 38.0], [42.1, 38.0], [42.2, 38.0], [42.3, 38.0], [42.4, 38.0], [42.5, 38.0], [42.6, 38.0], [42.7, 38.0], [42.8, 38.0], [42.9, 38.0], [43.0, 38.0], [43.1, 39.0], [43.2, 39.0], [43.3, 39.0], [43.4, 39.0], [43.5, 39.0], [43.6, 39.0], [43.7, 39.0], [43.8, 39.0], [43.9, 39.0], [44.0, 39.0], [44.1, 39.0], [44.2, 40.0], [44.3, 40.0], [44.4, 40.0], [44.5, 40.0], [44.6, 40.0], [44.7, 40.0], [44.8, 40.0], [44.9, 40.0], [45.0, 40.0], [45.1, 40.0], [45.2, 40.0], [45.3, 40.0], [45.4, 41.0], [45.5, 41.0], [45.6, 41.0], [45.7, 41.0], [45.8, 41.0], [45.9, 41.0], [46.0, 41.0], [46.1, 41.0], [46.2, 41.0], [46.3, 41.0], [46.4, 41.0], [46.5, 41.0], [46.6, 41.0], [46.7, 41.0], [46.8, 41.0], [46.9, 41.0], [47.0, 42.0], [47.1, 42.0], [47.2, 42.0], [47.3, 42.0], [47.4, 42.0], [47.5, 42.0], [47.6, 42.0], [47.7, 42.0], [47.8, 42.0], [47.9, 42.0], [48.0, 42.0], [48.1, 42.0], [48.2, 42.0], [48.3, 42.0], [48.4, 42.0], [48.5, 42.0], [48.6, 42.0], [48.7, 43.0], [48.8, 43.0], [48.9, 43.0], [49.0, 43.0], [49.1, 43.0], [49.2, 43.0], [49.3, 44.0], [49.4, 44.0], [49.5, 44.0], [49.6, 44.0], [49.7, 44.0], [49.8, 44.0], [49.9, 44.0], [50.0, 44.0], [50.1, 44.0], [50.2, 44.0], [50.3, 44.0], [50.4, 45.0], [50.5, 45.0], [50.6, 45.0], [50.7, 45.0], [50.8, 45.0], [50.9, 45.0], [51.0, 45.0], [51.1, 45.0], [51.2, 45.0], [51.3, 45.0], [51.4, 45.0], [51.5, 45.0], [51.6, 45.0], [51.7, 45.0], [51.8, 46.0], [51.9, 46.0], [52.0, 46.0], [52.1, 46.0], [52.2, 46.0], [52.3, 46.0], [52.4, 46.0], [52.5, 46.0], [52.6, 46.0], [52.7, 46.0], [52.8, 46.0], [52.9, 46.0], [53.0, 47.0], [53.1, 47.0], [53.2, 47.0], [53.3, 47.0], [53.4, 47.0], [53.5, 47.0], [53.6, 47.0], [53.7, 47.0], [53.8, 47.0], [53.9, 47.0], [54.0, 47.0], [54.1, 47.0], [54.2, 47.0], [54.3, 47.0], [54.4, 48.0], [54.5, 48.0], [54.6, 48.0], [54.7, 48.0], [54.8, 48.0], [54.9, 48.0], [55.0, 48.0], [55.1, 48.0], [55.2, 48.0], [55.3, 48.0], [55.4, 48.0], [55.5, 48.0], [55.6, 48.0], [55.7, 49.0], [55.8, 49.0], [55.9, 49.0], [56.0, 49.0], [56.1, 49.0], [56.2, 49.0], [56.3, 49.0], [56.4, 50.0], [56.5, 50.0], [56.6, 50.0], [56.7, 50.0], [56.8, 50.0], [56.9, 50.0], [57.0, 50.0], [57.1, 51.0], [57.2, 51.0], [57.3, 51.0], [57.4, 51.0], [57.5, 51.0], [57.6, 51.0], [57.7, 51.0], [57.8, 51.0], [57.9, 51.0], [58.0, 51.0], [58.1, 52.0], [58.2, 52.0], [58.3, 52.0], [58.4, 52.0], [58.5, 52.0], [58.6, 52.0], [58.7, 52.0], [58.8, 52.0], [58.9, 53.0], [59.0, 53.0], [59.1, 53.0], [59.2, 53.0], [59.3, 54.0], [59.4, 54.0], [59.5, 54.0], [59.6, 54.0], [59.7, 54.0], [59.8, 55.0], [59.9, 55.0], [60.0, 55.0], [60.1, 55.0], [60.2, 55.0], [60.3, 55.0], [60.4, 55.0], [60.5, 55.0], [60.6, 55.0], [60.7, 55.0], [60.8, 55.0], [60.9, 56.0], [61.0, 56.0], [61.1, 56.0], [61.2, 56.0], [61.3, 56.0], [61.4, 57.0], [61.5, 57.0], [61.6, 57.0], [61.7, 57.0], [61.8, 57.0], [61.9, 57.0], [62.0, 57.0], [62.1, 57.0], [62.2, 57.0], [62.3, 57.0], [62.4, 57.0], [62.5, 57.0], [62.6, 57.0], [62.7, 57.0], [62.8, 58.0], [62.9, 58.0], [63.0, 58.0], [63.1, 58.0], [63.2, 58.0], [63.3, 58.0], [63.4, 58.0], [63.5, 59.0], [63.6, 59.0], [63.7, 59.0], [63.8, 59.0], [63.9, 59.0], [64.0, 59.0], [64.1, 59.0], [64.2, 59.0], [64.3, 60.0], [64.4, 60.0], [64.5, 61.0], [64.6, 61.0], [64.7, 61.0], [64.8, 61.0], [64.9, 62.0], [65.0, 62.0], [65.1, 62.0], [65.2, 62.0], [65.3, 62.0], [65.4, 63.0], [65.5, 63.0], [65.6, 63.0], [65.7, 64.0], [65.8, 64.0], [65.9, 64.0], [66.0, 64.0], [66.1, 64.0], [66.2, 65.0], [66.3, 65.0], [66.4, 65.0], [66.5, 65.0], [66.6, 65.0], [66.7, 66.0], [66.8, 66.0], [66.9, 66.0], [67.0, 66.0], [67.1, 66.0], [67.2, 67.0], [67.3, 67.0], [67.4, 67.0], [67.5, 67.0], [67.6, 68.0], [67.7, 68.0], [67.8, 69.0], [67.9, 69.0], [68.0, 69.0], [68.1, 69.0], [68.2, 69.0], [68.3, 69.0], [68.4, 70.0], [68.5, 70.0], [68.6, 70.0], [68.7, 70.0], [68.8, 71.0], [68.9, 71.0], [69.0, 71.0], [69.1, 72.0], [69.2, 72.0], [69.3, 72.0], [69.4, 72.0], [69.5, 72.0], [69.6, 73.0], [69.7, 73.0], [69.8, 73.0], [69.9, 74.0], [70.0, 74.0], [70.1, 75.0], [70.2, 75.0], [70.3, 75.0], [70.4, 76.0], [70.5, 76.0], [70.6, 76.0], [70.7, 77.0], [70.8, 77.0], [70.9, 78.0], [71.0, 78.0], [71.1, 78.0], [71.2, 78.0], [71.3, 78.0], [71.4, 79.0], [71.5, 79.0], [71.6, 79.0], [71.7, 79.0], [71.8, 79.0], [71.9, 80.0], [72.0, 80.0], [72.1, 81.0], [72.2, 81.0], [72.3, 81.0], [72.4, 81.0], [72.5, 82.0], [72.6, 82.0], [72.7, 83.0], [72.8, 83.0], [72.9, 83.0], [73.0, 84.0], [73.1, 85.0], [73.2, 85.0], [73.3, 85.0], [73.4, 87.0], [73.5, 87.0], [73.6, 87.0], [73.7, 88.0], [73.8, 88.0], [73.9, 89.0], [74.0, 89.0], [74.1, 89.0], [74.2, 89.0], [74.3, 89.0], [74.4, 90.0], [74.5, 90.0], [74.6, 90.0], [74.7, 92.0], [74.8, 93.0], [74.9, 93.0], [75.0, 94.0], [75.1, 94.0], [75.2, 95.0], [75.3, 98.0], [75.4, 98.0], [75.5, 99.0], [75.6, 101.0], [75.7, 101.0], [75.8, 101.0], [75.9, 104.0], [76.0, 104.0], [76.1, 104.0], [76.2, 104.0], [76.3, 105.0], [76.4, 105.0], [76.5, 107.0], [76.6, 107.0], [76.7, 107.0], [76.8, 108.0], [76.9, 108.0], [77.0, 109.0], [77.1, 110.0], [77.2, 110.0], [77.3, 111.0], [77.4, 111.0], [77.5, 114.0], [77.6, 114.0], [77.7, 114.0], [77.8, 115.0], [77.9, 116.0], [78.0, 116.0], [78.1, 118.0], [78.2, 118.0], [78.3, 119.0], [78.4, 119.0], [78.5, 121.0], [78.6, 124.0], [78.7, 124.0], [78.8, 124.0], [78.9, 125.0], [79.0, 125.0], [79.1, 126.0], [79.2, 126.0], [79.3, 126.0], [79.4, 126.0], [79.5, 127.0], [79.6, 128.0], [79.7, 128.0], [79.8, 128.0], [79.9, 129.0], [80.0, 130.0], [80.1, 130.0], [80.2, 130.0], [80.3, 131.0], [80.4, 132.0], [80.5, 133.0], [80.6, 134.0], [80.7, 134.0], [80.8, 134.0], [80.9, 135.0], [81.0, 135.0], [81.1, 136.0], [81.2, 137.0], [81.3, 137.0], [81.4, 137.0], [81.5, 138.0], [81.6, 139.0], [81.7, 139.0], [81.8, 140.0], [81.9, 141.0], [82.0, 141.0], [82.1, 141.0], [82.2, 142.0], [82.3, 143.0], [82.4, 143.0], [82.5, 144.0], [82.6, 144.0], [82.7, 145.0], [82.8, 145.0], [82.9, 145.0], [83.0, 145.0], [83.1, 146.0], [83.2, 147.0], [83.3, 148.0], [83.4, 149.0], [83.5, 150.0], [83.6, 151.0], [83.7, 151.0], [83.8, 151.0], [83.9, 152.0], [84.0, 152.0], [84.1, 153.0], [84.2, 153.0], [84.3, 154.0], [84.4, 154.0], [84.5, 155.0], [84.6, 155.0], [84.7, 158.0], [84.8, 158.0], [84.9, 159.0], [85.0, 159.0], [85.1, 160.0], [85.2, 160.0], [85.3, 161.0], [85.4, 161.0], [85.5, 161.0], [85.6, 162.0], [85.7, 163.0], [85.8, 163.0], [85.9, 164.0], [86.0, 165.0], [86.1, 167.0], [86.2, 167.0], [86.3, 167.0], [86.4, 168.0], [86.5, 168.0], [86.6, 168.0], [86.7, 169.0], [86.8, 170.0], [86.9, 170.0], [87.0, 170.0], [87.1, 170.0], [87.2, 172.0], [87.3, 172.0], [87.4, 173.0], [87.5, 174.0], [87.6, 175.0], [87.7, 175.0], [87.8, 175.0], [87.9, 178.0], [88.0, 178.0], [88.1, 179.0], [88.2, 179.0], [88.3, 180.0], [88.4, 181.0], [88.5, 181.0], [88.6, 182.0], [88.7, 182.0], [88.8, 183.0], [88.9, 184.0], [89.0, 186.0], [89.1, 187.0], [89.2, 188.0], [89.3, 189.0], [89.4, 190.0], [89.5, 192.0], [89.6, 193.0], [89.7, 197.0], [89.8, 199.0], [89.9, 199.0], [90.0, 200.0], [90.1, 200.0], [90.2, 201.0], [90.3, 201.0], [90.4, 202.0], [90.5, 203.0], [90.6, 203.0], [90.7, 204.0], [90.8, 204.0], [90.9, 205.0], [91.0, 206.0], [91.1, 207.0], [91.2, 210.0], [91.3, 213.0], [91.4, 217.0], [91.5, 217.0], [91.6, 218.0], [91.7, 219.0], [91.8, 221.0], [91.9, 222.0], [92.0, 222.0], [92.1, 222.0], [92.2, 224.0], [92.3, 225.0], [92.4, 226.0], [92.5, 227.0], [92.6, 227.0], [92.7, 229.0], [92.8, 231.0], [92.9, 231.0], [93.0, 232.0], [93.1, 234.0], [93.2, 234.0], [93.3, 234.0], [93.4, 235.0], [93.5, 239.0], [93.6, 240.0], [93.7, 240.0], [93.8, 242.0], [93.9, 242.0], [94.0, 244.0], [94.1, 244.0], [94.2, 248.0], [94.3, 248.0], [94.4, 267.0], [94.5, 276.0], [94.6, 276.0], [94.7, 276.0], [94.8, 278.0], [94.9, 279.0], [95.0, 280.0], [95.1, 284.0], [95.2, 286.0], [95.3, 287.0], [95.4, 291.0], [95.5, 292.0], [95.6, 292.0], [95.7, 293.0], [95.8, 295.0], [95.9, 295.0], [96.0, 299.0], [96.1, 308.0], [96.2, 308.0], [96.3, 312.0], [96.4, 317.0], [96.5, 324.0], [96.6, 324.0], [96.7, 324.0], [96.8, 327.0], [96.9, 328.0], [97.0, 328.0], [97.1, 332.0], [97.2, 336.0], [97.3, 337.0], [97.4, 338.0], [97.5, 342.0], [97.6, 351.0], [97.7, 356.0], [97.8, 358.0], [97.9, 362.0], [98.0, 370.0], [98.1, 372.0], [98.2, 375.0], [98.3, 376.0], [98.4, 389.0], [98.5, 390.0], [98.6, 396.0], [98.7, 400.0], [98.8, 403.0], [98.9, 405.0], [99.0, 407.0], [99.1, 421.0], [99.2, 468.0], [99.3, 472.0], [99.4, 481.0], [99.5, 511.0], [99.6, 513.0], [99.7, 521.0], [99.8, 574.0], [99.9, 682.0]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[0.0, 18.0], [0.1, 18.0], [0.2, 18.0], [0.3, 19.0], [0.4, 19.0], [0.5, 20.0], [0.6, 20.0], [0.7, 20.0], [0.8, 20.0], [0.9, 20.0], [1.0, 20.0], [1.1, 21.0], [1.2, 21.0], [1.3, 21.0], [1.4, 21.0], [1.5, 21.0], [1.6, 21.0], [1.7, 21.0], [1.8, 21.0], [1.9, 21.0], [2.0, 21.0], [2.1, 21.0], [2.2, 21.0], [2.3, 21.0], [2.4, 21.0], [2.5, 22.0], [2.6, 22.0], [2.7, 22.0], [2.8, 22.0], [2.9, 22.0], [3.0, 22.0], [3.1, 22.0], [3.2, 22.0], [3.3, 22.0], [3.4, 22.0], [3.5, 22.0], [3.6, 22.0], [3.7, 22.0], [3.8, 22.0], [3.9, 22.0], [4.0, 22.0], [4.1, 22.0], [4.2, 22.0], [4.3, 22.0], [4.4, 23.0], [4.5, 23.0], [4.6, 23.0], [4.7, 23.0], [4.8, 23.0], [4.9, 23.0], [5.0, 23.0], [5.1, 23.0], [5.2, 23.0], [5.3, 23.0], [5.4, 23.0], [5.5, 23.0], [5.6, 23.0], [5.7, 23.0], [5.8, 23.0], [5.9, 23.0], [6.0, 23.0], [6.1, 23.0], [6.2, 24.0], [6.3, 24.0], [6.4, 24.0], [6.5, 24.0], [6.6, 24.0], [6.7, 24.0], [6.8, 24.0], [6.9, 24.0], [7.0, 24.0], [7.1, 24.0], [7.2, 24.0], [7.3, 24.0], [7.4, 24.0], [7.5, 24.0], [7.6, 24.0], [7.7, 24.0], [7.8, 24.0], [7.9, 24.0], [8.0, 24.0], [8.1, 24.0], [8.2, 24.0], [8.3, 25.0], [8.4, 25.0], [8.5, 25.0], [8.6, 25.0], [8.7, 25.0], [8.8, 25.0], [8.9, 25.0], [9.0, 25.0], [9.1, 25.0], [9.2, 25.0], [9.3, 25.0], [9.4, 25.0], [9.5, 25.0], [9.6, 25.0], [9.7, 25.0], [9.8, 25.0], [9.9, 25.0], [10.0, 25.0], [10.1, 25.0], [10.2, 25.0], [10.3, 26.0], [10.4, 26.0], [10.5, 26.0], [10.6, 26.0], [10.7, 26.0], [10.8, 26.0], [10.9, 26.0], [11.0, 26.0], [11.1, 26.0], [11.2, 26.0], [11.3, 26.0], [11.4, 26.0], [11.5, 26.0], [11.6, 26.0], [11.7, 26.0], [11.8, 26.0], [11.9, 26.0], [12.0, 26.0], [12.1, 26.0], [12.2, 26.0], [12.3, 26.0], [12.4, 26.0], [12.5, 26.0], [12.6, 26.0], [12.7, 26.0], [12.8, 26.0], [12.9, 26.0], [13.0, 26.0], [13.1, 26.0], [13.2, 27.0], [13.3, 27.0], [13.4, 27.0], [13.5, 27.0], [13.6, 27.0], [13.7, 27.0], [13.8, 27.0], [13.9, 27.0], [14.0, 27.0], [14.1, 27.0], [14.2, 27.0], [14.3, 27.0], [14.4, 27.0], [14.5, 27.0], [14.6, 28.0], [14.7, 28.0], [14.8, 28.0], [14.9, 28.0], [15.0, 28.0], [15.1, 28.0], [15.2, 28.0], [15.3, 28.0], [15.4, 28.0], [15.5, 28.0], [15.6, 28.0], [15.7, 28.0], [15.8, 28.0], [15.9, 28.0], [16.0, 28.0], [16.1, 28.0], [16.2, 28.0], [16.3, 28.0], [16.4, 28.0], [16.5, 28.0], [16.6, 28.0], [16.7, 28.0], [16.8, 28.0], [16.9, 28.0], [17.0, 28.0], [17.1, 28.0], [17.2, 28.0], [17.3, 29.0], [17.4, 29.0], [17.5, 29.0], [17.6, 29.0], [17.7, 29.0], [17.8, 29.0], [17.9, 29.0], [18.0, 29.0], [18.1, 29.0], [18.2, 29.0], [18.3, 29.0], [18.4, 29.0], [18.5, 29.0], [18.6, 29.0], [18.7, 29.0], [18.8, 29.0], [18.9, 29.0], [19.0, 29.0], [19.1, 29.0], [19.2, 29.0], [19.3, 29.0], [19.4, 29.0], [19.5, 29.0], [19.6, 29.0], [19.7, 29.0], [19.8, 29.0], [19.9, 29.0], [20.0, 29.0], [20.1, 29.0], [20.2, 30.0], [20.3, 30.0], [20.4, 30.0], [20.5, 30.0], [20.6, 30.0], [20.7, 30.0], [20.8, 30.0], [20.9, 30.0], [21.0, 30.0], [21.1, 30.0], [21.2, 30.0], [21.3, 30.0], [21.4, 30.0], [21.5, 30.0], [21.6, 30.0], [21.7, 30.0], [21.8, 30.0], [21.9, 30.0], [22.0, 30.0], [22.1, 30.0], [22.2, 30.0], [22.3, 30.0], [22.4, 30.0], [22.5, 30.0], [22.6, 30.0], [22.7, 30.0], [22.8, 30.0], [22.9, 30.0], [23.0, 30.0], [23.1, 30.0], [23.2, 30.0], [23.3, 30.0], [23.4, 30.0], [23.5, 31.0], [23.6, 31.0], [23.7, 31.0], [23.8, 31.0], [23.9, 31.0], [24.0, 31.0], [24.1, 31.0], [24.2, 31.0], [24.3, 31.0], [24.4, 31.0], [24.5, 31.0], [24.6, 31.0], [24.7, 31.0], [24.8, 31.0], [24.9, 31.0], [25.0, 31.0], [25.1, 31.0], [25.2, 31.0], [25.3, 31.0], [25.4, 31.0], [25.5, 31.0], [25.6, 31.0], [25.7, 31.0], [25.8, 31.0], [25.9, 32.0], [26.0, 32.0], [26.1, 32.0], [26.2, 32.0], [26.3, 32.0], [26.4, 32.0], [26.5, 32.0], [26.6, 32.0], [26.7, 32.0], [26.8, 32.0], [26.9, 32.0], [27.0, 32.0], [27.1, 32.0], [27.2, 32.0], [27.3, 32.0], [27.4, 32.0], [27.5, 32.0], [27.6, 32.0], [27.7, 32.0], [27.8, 32.0], [27.9, 32.0], [28.0, 32.0], [28.1, 32.0], [28.2, 32.0], [28.3, 33.0], [28.4, 33.0], [28.5, 33.0], [28.6, 33.0], [28.7, 33.0], [28.8, 33.0], [28.9, 33.0], [29.0, 33.0], [29.1, 33.0], [29.2, 33.0], [29.3, 33.0], [29.4, 33.0], [29.5, 33.0], [29.6, 33.0], [29.7, 33.0], [29.8, 33.0], [29.9, 33.0], [30.0, 33.0], [30.1, 33.0], [30.2, 33.0], [30.3, 33.0], [30.4, 33.0], [30.5, 33.0], [30.6, 33.0], [30.7, 34.0], [30.8, 34.0], [30.9, 34.0], [31.0, 34.0], [31.1, 34.0], [31.2, 34.0], [31.3, 34.0], [31.4, 34.0], [31.5, 34.0], [31.6, 34.0], [31.7, 34.0], [31.8, 34.0], [31.9, 34.0], [32.0, 34.0], [32.1, 34.0], [32.2, 34.0], [32.3, 34.0], [32.4, 34.0], [32.5, 34.0], [32.6, 34.0], [32.7, 34.0], [32.8, 34.0], [32.9, 35.0], [33.0, 35.0], [33.1, 35.0], [33.2, 35.0], [33.3, 35.0], [33.4, 35.0], [33.5, 35.0], [33.6, 35.0], [33.7, 35.0], [33.8, 35.0], [33.9, 35.0], [34.0, 35.0], [34.1, 35.0], [34.2, 35.0], [34.3, 35.0], [34.4, 35.0], [34.5, 35.0], [34.6, 36.0], [34.7, 36.0], [34.8, 36.0], [34.9, 36.0], [35.0, 36.0], [35.1, 36.0], [35.2, 36.0], [35.3, 36.0], [35.4, 36.0], [35.5, 36.0], [35.6, 36.0], [35.7, 36.0], [35.8, 36.0], [35.9, 36.0], [36.0, 36.0], [36.1, 36.0], [36.2, 37.0], [36.3, 37.0], [36.4, 37.0], [36.5, 37.0], [36.6, 37.0], [36.7, 37.0], [36.8, 37.0], [36.9, 37.0], [37.0, 37.0], [37.1, 37.0], [37.2, 37.0], [37.3, 37.0], [37.4, 37.0], [37.5, 37.0], [37.6, 37.0], [37.7, 37.0], [37.8, 37.0], [37.9, 37.0], [38.0, 37.0], [38.1, 38.0], [38.2, 38.0], [38.3, 38.0], [38.4, 38.0], [38.5, 38.0], [38.6, 38.0], [38.7, 38.0], [38.8, 38.0], [38.9, 38.0], [39.0, 38.0], [39.1, 38.0], [39.2, 38.0], [39.3, 38.0], [39.4, 38.0], [39.5, 38.0], [39.6, 38.0], [39.7, 38.0], [39.8, 38.0], [39.9, 38.0], [40.0, 39.0], [40.1, 39.0], [40.2, 39.0], [40.3, 39.0], [40.4, 39.0], [40.5, 39.0], [40.6, 39.0], [40.7, 39.0], [40.8, 39.0], [40.9, 39.0], [41.0, 39.0], [41.1, 39.0], [41.2, 39.0], [41.3, 39.0], [41.4, 39.0], [41.5, 39.0], [41.6, 39.0], [41.7, 39.0], [41.8, 39.0], [41.9, 40.0], [42.0, 40.0], [42.1, 40.0], [42.2, 40.0], [42.3, 40.0], [42.4, 40.0], [42.5, 40.0], [42.6, 40.0], [42.7, 40.0], [42.8, 40.0], [42.9, 40.0], [43.0, 41.0], [43.1, 41.0], [43.2, 41.0], [43.3, 41.0], [43.4, 41.0], [43.5, 41.0], [43.6, 41.0], [43.7, 41.0], [43.8, 41.0], [43.9, 41.0], [44.0, 41.0], [44.1, 41.0], [44.2, 41.0], [44.3, 41.0], [44.4, 41.0], [44.5, 41.0], [44.6, 41.0], [44.7, 41.0], [44.8, 41.0], [44.9, 41.0], [45.0, 41.0], [45.1, 41.0], [45.2, 41.0], [45.3, 41.0], [45.4, 41.0], [45.5, 42.0], [45.6, 42.0], [45.7, 42.0], [45.8, 42.0], [45.9, 42.0], [46.0, 42.0], [46.1, 42.0], [46.2, 42.0], [46.3, 42.0], [46.4, 42.0], [46.5, 42.0], [46.6, 42.0], [46.7, 42.0], [46.8, 42.0], [46.9, 42.0], [47.0, 43.0], [47.1, 43.0], [47.2, 43.0], [47.3, 43.0], [47.4, 43.0], [47.5, 43.0], [47.6, 43.0], [47.7, 43.0], [47.8, 43.0], [47.9, 43.0], [48.0, 43.0], [48.1, 43.0], [48.2, 43.0], [48.3, 43.0], [48.4, 43.0], [48.5, 43.0], [48.6, 44.0], [48.7, 44.0], [48.8, 44.0], [48.9, 44.0], [49.0, 44.0], [49.1, 44.0], [49.2, 44.0], [49.3, 44.0], [49.4, 44.0], [49.5, 44.0], [49.6, 44.0], [49.7, 44.0], [49.8, 44.0], [49.9, 44.0], [50.0, 44.0], [50.1, 44.0], [50.2, 44.0], [50.3, 44.0], [50.4, 44.0], [50.5, 44.0], [50.6, 45.0], [50.7, 45.0], [50.8, 45.0], [50.9, 45.0], [51.0, 45.0], [51.1, 45.0], [51.2, 45.0], [51.3, 45.0], [51.4, 46.0], [51.5, 46.0], [51.6, 46.0], [51.7, 46.0], [51.8, 46.0], [51.9, 46.0], [52.0, 46.0], [52.1, 46.0], [52.2, 46.0], [52.3, 46.0], [52.4, 46.0], [52.5, 46.0], [52.6, 47.0], [52.7, 47.0], [52.8, 47.0], [52.9, 47.0], [53.0, 47.0], [53.1, 47.0], [53.2, 47.0], [53.3, 47.0], [53.4, 47.0], [53.5, 47.0], [53.6, 47.0], [53.7, 47.0], [53.8, 47.0], [53.9, 47.0], [54.0, 48.0], [54.1, 48.0], [54.2, 48.0], [54.3, 48.0], [54.4, 48.0], [54.5, 48.0], [54.6, 48.0], [54.7, 48.0], [54.8, 48.0], [54.9, 48.0], [55.0, 48.0], [55.1, 48.0], [55.2, 49.0], [55.3, 49.0], [55.4, 49.0], [55.5, 49.0], [55.6, 49.0], [55.7, 49.0], [55.8, 49.0], [55.9, 49.0], [56.0, 50.0], [56.1, 50.0], [56.2, 50.0], [56.3, 50.0], [56.4, 50.0], [56.5, 50.0], [56.6, 50.0], [56.7, 50.0], [56.8, 50.0], [56.9, 50.0], [57.0, 51.0], [57.1, 51.0], [57.2, 51.0], [57.3, 51.0], [57.4, 51.0], [57.5, 51.0], [57.6, 51.0], [57.7, 51.0], [57.8, 51.0], [57.9, 51.0], [58.0, 51.0], [58.1, 52.0], [58.2, 52.0], [58.3, 52.0], [58.4, 52.0], [58.5, 52.0], [58.6, 52.0], [58.7, 52.0], [58.8, 52.0], [58.9, 53.0], [59.0, 53.0], [59.1, 53.0], [59.2, 53.0], [59.3, 53.0], [59.4, 53.0], [59.5, 53.0], [59.6, 53.0], [59.7, 53.0], [59.8, 53.0], [59.9, 53.0], [60.0, 54.0], [60.1, 54.0], [60.2, 54.0], [60.3, 54.0], [60.4, 54.0], [60.5, 54.0], [60.6, 54.0], [60.7, 54.0], [60.8, 54.0], [60.9, 54.0], [61.0, 54.0], [61.1, 54.0], [61.2, 54.0], [61.3, 54.0], [61.4, 55.0], [61.5, 55.0], [61.6, 55.0], [61.7, 55.0], [61.8, 55.0], [61.9, 56.0], [62.0, 56.0], [62.1, 56.0], [62.2, 56.0], [62.3, 56.0], [62.4, 56.0], [62.5, 56.0], [62.6, 56.0], [62.7, 56.0], [62.8, 56.0], [62.9, 57.0], [63.0, 57.0], [63.1, 57.0], [63.2, 57.0], [63.3, 57.0], [63.4, 57.0], [63.5, 57.0], [63.6, 57.0], [63.7, 57.0], [63.8, 57.0], [63.9, 58.0], [64.0, 58.0], [64.1, 58.0], [64.2, 58.0], [64.3, 58.0], [64.4, 58.0], [64.5, 59.0], [64.6, 59.0], [64.7, 59.0], [64.8, 59.0], [64.9, 59.0], [65.0, 59.0], [65.1, 59.0], [65.2, 59.0], [65.3, 60.0], [65.4, 60.0], [65.5, 60.0], [65.6, 60.0], [65.7, 60.0], [65.8, 60.0], [65.9, 60.0], [66.0, 60.0], [66.1, 60.0], [66.2, 60.0], [66.3, 61.0], [66.4, 61.0], [66.5, 61.0], [66.6, 61.0], [66.7, 61.0], [66.8, 61.0], [66.9, 61.0], [67.0, 61.0], [67.1, 62.0], [67.2, 62.0], [67.3, 62.0], [67.4, 62.0], [67.5, 62.0], [67.6, 62.0], [67.7, 63.0], [67.8, 63.0], [67.9, 63.0], [68.0, 63.0], [68.1, 63.0], [68.2, 63.0], [68.3, 64.0], [68.4, 64.0], [68.5, 64.0], [68.6, 64.0], [68.7, 64.0], [68.8, 65.0], [68.9, 65.0], [69.0, 65.0], [69.1, 65.0], [69.2, 65.0], [69.3, 65.0], [69.4, 66.0], [69.5, 66.0], [69.6, 66.0], [69.7, 66.0], [69.8, 66.0], [69.9, 66.0], [70.0, 67.0], [70.1, 68.0], [70.2, 68.0], [70.3, 68.0], [70.4, 68.0], [70.5, 68.0], [70.6, 69.0], [70.7, 70.0], [70.8, 70.0], [70.9, 70.0], [71.0, 70.0], [71.1, 71.0], [71.2, 71.0], [71.3, 71.0], [71.4, 71.0], [71.5, 71.0], [71.6, 71.0], [71.7, 72.0], [71.8, 72.0], [71.9, 72.0], [72.0, 73.0], [72.1, 73.0], [72.2, 74.0], [72.3, 74.0], [72.4, 74.0], [72.5, 74.0], [72.6, 74.0], [72.7, 75.0], [72.8, 75.0], [72.9, 75.0], [73.0, 75.0], [73.1, 75.0], [73.2, 75.0], [73.3, 75.0], [73.4, 75.0], [73.5, 75.0], [73.6, 76.0], [73.7, 76.0], [73.8, 76.0], [73.9, 76.0], [74.0, 76.0], [74.1, 76.0], [74.2, 77.0], [74.3, 77.0], [74.4, 77.0], [74.5, 78.0], [74.6, 78.0], [74.7, 78.0], [74.8, 78.0], [74.9, 78.0], [75.0, 78.0], [75.1, 79.0], [75.2, 80.0], [75.3, 80.0], [75.4, 80.0], [75.5, 81.0], [75.6, 81.0], [75.7, 81.0], [75.8, 82.0], [75.9, 82.0], [76.0, 82.0], [76.1, 83.0], [76.2, 83.0], [76.3, 83.0], [76.4, 83.0], [76.5, 83.0], [76.6, 84.0], [76.7, 85.0], [76.8, 85.0], [76.9, 85.0], [77.0, 85.0], [77.1, 85.0], [77.2, 85.0], [77.3, 86.0], [77.4, 87.0], [77.5, 87.0], [77.6, 88.0], [77.7, 88.0], [77.8, 88.0], [77.9, 88.0], [78.0, 88.0], [78.1, 89.0], [78.2, 89.0], [78.3, 89.0], [78.4, 90.0], [78.5, 90.0], [78.6, 91.0], [78.7, 91.0], [78.8, 91.0], [78.9, 91.0], [79.0, 92.0], [79.1, 92.0], [79.2, 93.0], [79.3, 93.0], [79.4, 93.0], [79.5, 93.0], [79.6, 93.0], [79.7, 94.0], [79.8, 96.0], [79.9, 98.0], [80.0, 98.0], [80.1, 98.0], [80.2, 98.0], [80.3, 99.0], [80.4, 99.0], [80.5, 99.0], [80.6, 99.0], [80.7, 100.0], [80.8, 101.0], [80.9, 101.0], [81.0, 101.0], [81.1, 101.0], [81.2, 102.0], [81.3, 102.0], [81.4, 102.0], [81.5, 102.0], [81.6, 103.0], [81.7, 103.0], [81.8, 104.0], [81.9, 104.0], [82.0, 105.0], [82.1, 105.0], [82.2, 106.0], [82.3, 107.0], [82.4, 107.0], [82.5, 108.0], [82.6, 109.0], [82.7, 109.0], [82.8, 109.0], [82.9, 110.0], [83.0, 110.0], [83.1, 110.0], [83.2, 110.0], [83.3, 111.0], [83.4, 111.0], [83.5, 111.0], [83.6, 112.0], [83.7, 112.0], [83.8, 113.0], [83.9, 113.0], [84.0, 113.0], [84.1, 114.0], [84.2, 114.0], [84.3, 114.0], [84.4, 115.0], [84.5, 115.0], [84.6, 115.0], [84.7, 117.0], [84.8, 117.0], [84.9, 117.0], [85.0, 117.0], [85.1, 118.0], [85.2, 118.0], [85.3, 118.0], [85.4, 118.0], [85.5, 119.0], [85.6, 120.0], [85.7, 121.0], [85.8, 122.0], [85.9, 122.0], [86.0, 123.0], [86.1, 123.0], [86.2, 124.0], [86.3, 125.0], [86.4, 126.0], [86.5, 126.0], [86.6, 126.0], [86.7, 128.0], [86.8, 128.0], [86.9, 129.0], [87.0, 129.0], [87.1, 131.0], [87.2, 131.0], [87.3, 131.0], [87.4, 132.0], [87.5, 133.0], [87.6, 133.0], [87.7, 133.0], [87.8, 133.0], [87.9, 134.0], [88.0, 134.0], [88.1, 134.0], [88.2, 134.0], [88.3, 135.0], [88.4, 135.0], [88.5, 136.0], [88.6, 136.0], [88.7, 136.0], [88.8, 137.0], [88.9, 137.0], [89.0, 139.0], [89.1, 139.0], [89.2, 140.0], [89.3, 140.0], [89.4, 140.0], [89.5, 140.0], [89.6, 141.0], [89.7, 142.0], [89.8, 142.0], [89.9, 142.0], [90.0, 142.0], [90.1, 143.0], [90.2, 143.0], [90.3, 143.0], [90.4, 144.0], [90.5, 145.0], [90.6, 145.0], [90.7, 146.0], [90.8, 147.0], [90.9, 147.0], [91.0, 148.0], [91.1, 148.0], [91.2, 149.0], [91.3, 149.0], [91.4, 149.0], [91.5, 150.0], [91.6, 150.0], [91.7, 150.0], [91.8, 151.0], [91.9, 151.0], [92.0, 152.0], [92.1, 154.0], [92.2, 154.0], [92.3, 157.0], [92.4, 159.0], [92.5, 159.0], [92.6, 160.0], [92.7, 160.0], [92.8, 160.0], [92.9, 161.0], [93.0, 162.0], [93.1, 163.0], [93.2, 164.0], [93.3, 165.0], [93.4, 169.0], [93.5, 170.0], [93.6, 171.0], [93.7, 171.0], [93.8, 172.0], [93.9, 172.0], [94.0, 172.0], [94.1, 172.0], [94.2, 173.0], [94.3, 173.0], [94.4, 177.0], [94.5, 177.0], [94.6, 178.0], [94.7, 178.0], [94.8, 178.0], [94.9, 178.0], [95.0, 178.0], [95.1, 178.0], [95.2, 179.0], [95.3, 183.0], [95.4, 183.0], [95.5, 184.0], [95.6, 184.0], [95.7, 185.0], [95.8, 187.0], [95.9, 187.0], [96.0, 188.0], [96.1, 189.0], [96.2, 189.0], [96.3, 190.0], [96.4, 196.0], [96.5, 196.0], [96.6, 200.0], [96.7, 200.0], [96.8, 203.0], [96.9, 203.0], [97.0, 209.0], [97.1, 210.0], [97.2, 212.0], [97.3, 217.0], [97.4, 220.0], [97.5, 223.0], [97.6, 223.0], [97.7, 225.0], [97.8, 226.0], [97.9, 235.0], [98.0, 236.0], [98.1, 237.0], [98.2, 237.0], [98.3, 238.0], [98.4, 240.0], [98.5, 241.0], [98.6, 245.0], [98.7, 246.0], [98.8, 247.0], [98.9, 250.0], [99.0, 250.0], [99.1, 259.0], [99.2, 268.0], [99.3, 269.0], [99.4, 272.0], [99.5, 279.0], [99.6, 293.0], [99.7, 334.0], [99.8, 366.0], [99.9, 369.0]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 807.0, "series": [{"data": [[600.0, 5.0], [700.0, 10.0], [800.0, 13.0], [900.0, 10.0], [1000.0, 12.0], [1100.0, 10.0], [1200.0, 9.0], [1300.0, 6.0], [1400.0, 10.0], [1500.0, 9.0], [1600.0, 7.0], [1700.0, 10.0], [1800.0, 4.0], [1900.0, 11.0], [2000.0, 13.0], [2100.0, 8.0], [2200.0, 12.0], [2300.0, 10.0], [2400.0, 15.0], [2500.0, 6.0], [2600.0, 9.0], [2700.0, 13.0], [2800.0, 14.0], [2900.0, 10.0], [3000.0, 9.0], [3100.0, 16.0], [3200.0, 12.0], [3300.0, 11.0], [3400.0, 14.0], [3500.0, 10.0], [3600.0, 14.0], [3700.0, 12.0], [3800.0, 13.0], [3900.0, 18.0], [4000.0, 12.0], [4100.0, 12.0], [4200.0, 10.0], [4300.0, 11.0], [4400.0, 13.0], [4500.0, 11.0], [4600.0, 13.0], [4700.0, 14.0], [4800.0, 13.0], [4900.0, 15.0], [5000.0, 17.0], [5100.0, 17.0], [5200.0, 20.0], [5300.0, 16.0], [5400.0, 17.0], [5500.0, 17.0], [5600.0, 15.0], [5700.0, 12.0], [5800.0, 17.0], [5900.0, 19.0], [6000.0, 19.0], [6100.0, 20.0], [6200.0, 22.0], [6300.0, 7.0], [6400.0, 19.0], [6500.0, 13.0], [6600.0, 17.0], [6700.0, 14.0], [6800.0, 17.0], [6900.0, 13.0], [7000.0, 14.0], [7100.0, 17.0], [7200.0, 16.0], [7300.0, 11.0], [7400.0, 8.0], [7500.0, 16.0], [7600.0, 19.0], [7700.0, 23.0], [7800.0, 13.0], [7900.0, 17.0], [8000.0, 13.0], [200.0, 5.0], [300.0, 3.0], [400.0, 4.0], [500.0, 4.0]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[0.0, 756.0], [300.0, 26.0], [600.0, 1.0], [100.0, 144.0], [200.0, 61.0], [400.0, 8.0], [500.0, 4.0]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[0.0, 807.0], [300.0, 3.0], [100.0, 159.0], [200.0, 31.0]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 8000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 94.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2007.0, "series": [{"data": [[0.0, 2007.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 94.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 899.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 277.7956666666664, "minX": 1.69851438E12, "maxY": 277.7956666666664, "series": [{"data": [[1.69851438E12, 277.7956666666664]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851438E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 18.0, "minX": 2.0, "maxY": 8060.5, "series": [{"data": [[5.0, 8060.5], [6.0, 8052.0], [8.0, 8050.0], [10.0, 8029.0], [12.0, 8017.5], [13.0, 8021.0], [14.0, 8012.0], [15.0, 8009.0], [17.0, 7996.0], [19.0, 7980.5], [20.0, 7973.0], [22.0, 7967.0], [23.0, 7961.0], [24.0, 7951.0], [26.0, 7954.0], [28.0, 7933.5], [29.0, 7928.0], [30.0, 7920.0], [31.0, 7915.0], [33.0, 7907.0], [35.0, 7895.0], [36.0, 7888.0], [39.0, 7869.0], [38.0, 7869.0], [43.0, 7848.0], [42.0, 7857.0], [45.0, 7839.0], [46.0, 7832.5], [49.0, 250.5], [50.0, 204.0], [53.0, 251.0], [52.0, 7799.0], [54.0, 5289.333333333333], [55.0, 7782.0], [56.0, 7776.0], [58.0, 4059.5], [59.0, 7777.0], [60.0, 4069.5], [62.0, 384.0], [63.0, 404.0], [66.0, 4092.0], [67.0, 5314.0], [65.0, 7775.0], [68.0, 453.0], [70.0, 4119.0], [71.0, 7723.0], [74.0, 4858.2], [75.0, 596.0], [72.0, 7718.0], [77.0, 623.5], [78.0, 659.0], [79.0, 5941.0], [80.0, 4881.2], [81.0, 4200.5], [83.0, 786.0], [85.0, 3059.3333333333335], [84.0, 5398.0], [86.0, 5369.0], [87.0, 4210.25], [88.0, 785.0], [90.0, 4207.5], [89.0, 7640.0], [92.0, 5343.666666666667], [93.0, 801.0], [94.0, 5936.5], [96.0, 5345.666666666667], [98.0, 4234.0], [99.0, 7659.0], [100.0, 5344.0], [102.0, 3118.6666666666665], [103.0, 3108.3333333333335], [104.0, 895.0], [107.0, 4231.0], [106.0, 7524.0], [105.0, 7535.0], [109.0, 938.0], [111.0, 950.6666666666666], [110.0, 4224.5], [108.0, 7539.0], [112.0, 3140.6666666666665], [114.0, 967.0], [115.0, 1034.0], [113.0, 7478.333333333333], [116.0, 1039.0], [117.0, 5339.333333333333], [119.0, 1043.0], [120.0, 4222.166666666667], [122.0, 1075.0], [123.0, 1076.0], [124.0, 4854.6], [125.0, 4235.0], [126.0, 1127.6666666666667], [127.0, 5817.75], [129.0, 4245.0], [130.0, 3229.0], [131.0, 4253.0], [134.0, 4246.0], [135.0, 7275.5], [133.0, 7288.0], [132.0, 7302.0], [136.0, 5751.25], [138.0, 4245.0], [139.0, 1239.0], [141.0, 1239.0], [143.0, 7231.0], [142.0, 7238.0], [140.0, 7249.0], [137.0, 7255.0], [145.0, 3258.666666666667], [147.0, 4674.571428571428], [149.0, 7179.5], [146.0, 7193.0], [155.0, 5210.0], [157.0, 4245.0], [159.0, 3288.666666666667], [158.0, 7105.0], [156.0, 7117.0], [154.0, 7150.0], [153.0, 7145.0], [152.0, 7154.5], [163.0, 3315.0], [162.0, 4281.5], [167.0, 1452.0], [166.0, 7053.0], [165.0, 7063.0], [161.0, 7077.0], [168.0, 5176.333333333333], [171.0, 3324.333333333333], [175.0, 5879.8], [174.0, 6994.0], [173.0, 6997.0], [170.0, 7019.0], [169.0, 7027.0], [179.0, 1522.0], [180.0, 1525.0], [182.0, 1529.0], [181.0, 3330.0], [183.0, 6911.0], [177.0, 6964.0], [184.0, 5832.0], [185.0, 1621.5], [189.0, 2947.0], [188.0, 6885.0], [187.0, 6891.0], [194.0, 4265.5], [197.0, 3415.666666666667], [198.0, 1738.0], [195.0, 6841.0], [193.0, 6858.666666666667], [192.0, 6865.0], [201.0, 4262.0], [202.0, 3444.333333333333], [203.0, 4289.833333333333], [204.0, 4265.0], [205.0, 1965.0], [206.0, 4273.75], [200.0, 6812.0], [208.0, 1737.0], [211.0, 5101.666666666667], [212.0, 5100.333333333333], [214.0, 1945.5], [215.0, 2730.0], [210.0, 6749.0], [209.0, 6754.0], [216.0, 3575.333333333333], [218.0, 2053.5], [219.0, 2080.0], [220.0, 5127.0], [221.0, 4358.0], [223.0, 3590.0], [222.0, 6684.0], [217.0, 6726.0], [226.0, 3599.333333333333], [227.0, 2076.0], [229.0, 4358.0], [231.0, 6610.5], [230.0, 6638.0], [228.0, 6635.0], [225.0, 6663.0], [224.0, 6668.0], [232.0, 2192.5], [233.0, 2157.0], [234.0, 2156.0], [236.0, 3275.0], [239.0, 2182.0], [238.0, 6563.5], [235.0, 6610.0], [242.0, 2209.0], [244.0, 2225.0], [245.0, 2224.5], [246.0, 4382.5], [247.0, 6545.0], [243.0, 6551.0], [241.0, 6550.0], [240.0, 6555.5], [249.0, 4386.0], [250.0, 2273.0], [251.0, 4111.285714285715], [252.0, 2318.0], [253.0, 2327.6666666666665], [255.0, 4469.0], [254.0, 2370.0], [268.0, 2497.0], [257.0, 2416.0], [256.0, 3740.333333333333], [262.0, 6447.0], [258.0, 4441.5], [261.0, 4724.428571428572], [260.0, 2418.0], [266.0, 3795.333333333333], [267.0, 2481.0], [265.0, 4852.0], [269.0, 4458.25], [270.0, 6394.5], [271.0, 6357.5], [274.0, 4451.0], [275.0, 2604.5], [284.0, 3962.666666666667], [286.0, 2809.3333333333335], [287.0, 2854.0], [285.0, 4546.5], [277.0, 3181.142857142857], [276.0, 2639.6], [278.0, 2671.25], [280.0, 4279.285714285715], [279.0, 2795.0], [273.0, 6361.0], [283.0, 4875.8], [282.0, 4533.5], [281.0, 6278.0], [289.0, 3994.333333333333], [288.0, 2841.0], [291.0, 5397.75], [290.0, 6244.0], [300.0, 2961.5], [301.0, 4569.5], [302.0, 5107.666666666667], [303.0, 5119.333333333333], [292.0, 4221.4], [293.0, 4556.5], [296.0, 4565.0], [295.0, 5116.666666666667], [297.0, 2946.0], [298.0, 4579.5], [299.0, 5385.75], [307.0, 3033.5], [305.0, 5101.666666666667], [304.0, 3013.0], [311.0, 6118.0], [306.0, 3020.0], [308.0, 4592.75], [309.0, 6119.5], [310.0, 3071.0], [312.0, 5108.666666666667], [318.0, 3139.0], [319.0, 4632.0], [316.0, 4118.333333333333], [317.0, 4615.0], [313.0, 3107.0], [314.0, 3112.0], [315.0, 6101.0], [321.0, 5352.75], [320.0, 3897.25], [323.0, 4345.0], [322.0, 6073.0], [333.0, 5091.0], [334.0, 4198.0], [335.0, 4641.0], [332.0, 3278.0], [324.0, 5109.333333333333], [325.0, 4627.5], [326.0, 3228.0], [327.0, 4638.0], [328.0, 5101.0], [329.0, 4640.5], [330.0, 4638.0], [331.0, 3258.0], [348.0, 4249.333333333333], [338.0, 4650.0], [337.0, 5086.333333333333], [343.0, 5948.0], [339.0, 5077.0], [351.0, 5283.5], [349.0, 5905.0], [341.0, 3331.0], [340.0, 5952.0], [342.0, 4652.0], [344.0, 4654.5], [345.0, 4230.666666666667], [346.0, 4413.6], [347.0, 3413.0], [354.0, 4676.5], [352.0, 3447.5], [353.0, 5880.0], [355.0, 4675.5], [365.0, 4689.0], [367.0, 5075.333333333333], [366.0, 3638.0], [364.0, 3596.0], [356.0, 4280.0], [357.0, 4681.5], [358.0, 4683.5], [359.0, 4680.5], [360.0, 4109.0], [362.0, 3553.5], [361.0, 5836.0], [363.0, 5075.0], [371.0, 3685.0], [369.0, 4363.222222222223], [370.0, 4717.5], [372.0, 3680.5], [373.0, 3699.0], [375.0, 3702.5], [368.0, 5800.5], [374.0, 5752.5], [377.0, 3727.0], [379.0, 4390.666666666667], [378.0, 5706.5], [381.0, 5041.333333333333], [383.0, 4255.0], [376.0, 5724.5], [382.0, 5692.0], [385.0, 4420.666666666667], [384.0, 3785.0], [386.0, 4728.5], [387.0, 5040.333333333333], [388.0, 4434.0], [389.0, 5639.5], [390.0, 4746.5], [391.0, 4743.0], [392.0, 4301.5], [396.0, 4462.666666666667], [397.0, 4472.666666666667], [398.0, 4475.666666666667], [399.0, 4759.75], [393.0, 3869.0], [394.0, 4746.5], [395.0, 4744.0], [401.0, 3976.0], [400.0, 4493.333333333333], [402.0, 3981.0], [403.0, 4510.333333333333], [405.0, 3995.5], [404.0, 5542.5], [406.0, 4764.5], [407.0, 4401.25], [408.0, 5029.0], [414.0, 4568.666666666667], [415.0, 5022.333333333333], [413.0, 4096.0], [412.0, 4794.0], [409.0, 4780.0], [410.0, 4426.0], [411.0, 4082.0], [417.0, 5135.25], [416.0, 4133.5], [419.0, 4591.0], [428.0, 4830.0], [430.0, 4825.5], [431.0, 4259.0], [429.0, 4826.0], [420.0, 4814.0], [421.0, 4178.0], [423.0, 4811.5], [422.0, 5447.0], [424.0, 4210.0], [425.0, 5020.333333333333], [426.0, 4822.5], [427.0, 4829.5], [433.0, 4286.0], [432.0, 4828.0], [434.0, 5014.666666666667], [435.0, 4302.0], [436.0, 4840.5], [437.0, 5360.0], [438.0, 4835.0], [439.0, 4599.0], [440.0, 4351.0], [446.0, 5006.333333333333], [447.0, 4858.5], [445.0, 4859.25], [444.0, 4417.0], [441.0, 4858.5], [443.0, 4384.5], [442.0, 5325.5], [450.0, 5110.4], [448.0, 4433.0], [451.0, 4732.666666666667], [460.0, 5220.0], [461.0, 4780.0], [462.0, 4893.0], [463.0, 4795.333333333333], [452.0, 4869.0], [453.0, 5261.0], [454.0, 4739.333333333333], [456.0, 4999.0], [455.0, 4749.333333333333], [458.0, 4550.0], [459.0, 4893.5], [457.0, 4891.0], [466.0, 5003.666666666667], [465.0, 4805.333333333333], [467.0, 4909.0], [476.0, 4915.5], [477.0, 4719.5], [478.0, 4990.0], [479.0, 4873.0], [469.0, 4908.5], [468.0, 5183.0], [470.0, 4912.5], [471.0, 4821.666666666667], [472.0, 4831.666666666667], [474.0, 4800.5], [473.0, 5152.0], [475.0, 4922.0], [492.0, 4936.0], [482.0, 4878.666666666667], [484.0, 4903.6], [483.0, 4784.0], [493.0, 4956.0], [494.0, 4979.666666666667], [495.0, 4945.333333333333], [485.0, 4897.666666666667], [487.0, 4833.5], [480.0, 5104.0], [486.0, 5067.5], [488.0, 4916.0], [489.0, 4983.333333333333], [490.0, 4859.0], [491.0, 4925.333333333333], [497.0, 4952.333333333333], [496.0, 4965.5], [498.0, 4965.0], [499.0, 4958.0], [500.0, 4964.5], [501.0, 4975.0]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[276.8249999999997, 4680.845000000001]], "isOverall": false, "label": "Express Js Http Call-Aggregated", "isController": false}, {"data": [[2.0, 27.5], [5.0, 64.5], [6.0, 22.0], [8.0, 31.0], [9.0, 23.0], [10.0, 29.0], [12.0, 35.0], [13.0, 28.0], [14.0, 25.0], [15.0, 23.0], [16.0, 32.0], [17.0, 26.0], [19.0, 23.0], [20.0, 28.0], [22.0, 25.0], [23.0, 27.0], [24.0, 28.0], [26.0, 26.0], [28.0, 29.5], [29.0, 31.0], [30.0, 21.0], [31.0, 22.0], [33.0, 23.0], [35.0, 31.0], [36.0, 30.0], [39.0, 34.0], [38.0, 33.0], [41.0, 37.0], [43.0, 33.666666666666664], [45.0, 145.0], [49.0, 44.0], [48.0, 35.0], [50.0, 45.0], [52.0, 87.66666666666667], [54.0, 62.666666666666664], [56.0, 53.0], [57.0, 72.5], [59.0, 62.0], [60.0, 62.5], [63.0, 72.5], [62.0, 89.0], [64.0, 108.0], [66.0, 106.66666666666666], [67.0, 94.0], [69.0, 127.0], [71.0, 150.0], [70.0, 58.0], [72.0, 83.0], [73.0, 60.0], [74.0, 130.0], [76.0, 64.5], [77.0, 47.0], [78.0, 53.5], [79.0, 47.333333333333336], [80.0, 81.0], [83.0, 127.75], [85.0, 77.0], [87.0, 89.0], [86.0, 63.0], [84.0, 90.0], [88.0, 64.66666666666667], [91.0, 73.0], [90.0, 79.5], [89.0, 133.5], [92.0, 65.0], [93.0, 204.0], [95.0, 72.0], [94.0, 93.33333333333333], [96.0, 86.0], [97.0, 126.66666666666666], [99.0, 52.0], [103.0, 109.25], [102.0, 159.5], [101.0, 70.0], [100.0, 133.5], [105.0, 53.0], [104.0, 95.0], [107.0, 225.0], [106.0, 65.0], [109.0, 151.33333333333334], [110.0, 120.0], [111.0, 157.5], [108.0, 90.0], [114.0, 155.0], [115.0, 108.0], [113.0, 51.0], [112.0, 223.0], [117.0, 170.85714285714286], [116.0, 124.0], [118.0, 299.0], [120.0, 122.8], [122.0, 105.0], [123.0, 91.0], [121.0, 336.0], [124.0, 128.66666666666666], [125.0, 118.0], [126.0, 77.0], [127.0, 101.75], [128.0, 232.0], [129.0, 134.375], [130.0, 108.66666666666667], [135.0, 72.0], [134.0, 57.0], [131.0, 107.5], [139.0, 141.0], [143.0, 72.33333333333333], [142.0, 75.0], [140.0, 60.5], [136.0, 69.33333333333333], [146.0, 124.5], [148.0, 351.0], [147.0, 100.0], [150.0, 57.0], [149.0, 46.0], [145.0, 100.5], [154.0, 82.33333333333333], [157.0, 253.0], [158.0, 191.5], [159.0, 35.0], [156.0, 80.0], [155.0, 94.5], [152.0, 49.0], [162.0, 121.0], [163.0, 266.0], [164.0, 331.0], [165.0, 188.66666666666669], [167.0, 151.0], [160.0, 65.0], [170.0, 203.0], [175.0, 23.5], [173.0, 42.75], [171.0, 29.0], [169.0, 134.0], [168.0, 37.75], [178.0, 160.0], [180.0, 405.0], [181.0, 95.75], [183.0, 28.0], [179.0, 41.0], [185.0, 281.5], [186.0, 362.0], [188.0, 234.0], [189.0, 165.66666666666666], [191.0, 40.0], [187.0, 43.0], [184.0, 41.0], [192.0, 102.0], [194.0, 129.0], [195.0, 166.33333333333331], [196.0, 468.0], [197.0, 232.33333333333331], [199.0, 574.0], [198.0, 50.0], [193.0, 61.333333333333336], [201.0, 301.0], [203.0, 276.4], [204.0, 202.6], [205.0, 376.0], [206.0, 274.5], [202.0, 83.0], [210.0, 107.0], [211.0, 116.0], [213.0, 246.2], [214.0, 233.33333333333334], [215.0, 184.2], [212.0, 42.5], [209.0, 40.0], [208.0, 49.5], [216.0, 107.0], [217.0, 158.0], [218.0, 142.5], [219.0, 154.5], [220.0, 75.42857142857143], [222.0, 48.0], [221.0, 51.0], [225.0, 83.33333333333333], [228.0, 163.0], [229.0, 139.0], [231.0, 39.5], [230.0, 151.0], [226.0, 55.0], [224.0, 38.0], [233.0, 183.0], [234.0, 213.0], [235.0, 96.0], [238.0, 61.0], [237.0, 105.0], [236.0, 37.0], [241.0, 324.0], [242.0, 370.0], [243.0, 390.0], [244.0, 252.5], [245.0, 100.33333333333333], [247.0, 104.5], [240.0, 47.0], [248.0, 198.5], [250.0, 263.6666666666667], [249.0, 121.0], [251.0, 166.28571428571428], [252.0, 160.0], [253.0, 218.33333333333331], [254.0, 121.0], [255.0, 147.0], [258.0, 142.0], [256.0, 124.0], [259.0, 134.0], [261.0, 127.55555555555556], [266.0, 192.75], [267.0, 164.5], [270.0, 215.5], [269.0, 144.33333333333334], [262.0, 200.0], [274.0, 172.0], [276.0, 153.25], [275.0, 299.0], [284.0, 77.5], [285.0, 31.0], [286.0, 58.0], [287.0, 25.0], [277.0, 107.57142857142857], [279.0, 72.5], [273.0, 66.33333333333333], [278.0, 58.5], [280.0, 107.8], [281.0, 39.5], [282.0, 40.5], [283.0, 93.4], [290.0, 19.0], [288.0, 22.0], [291.0, 37.5], [292.0, 66.83333333333334], [294.0, 30.0], [293.0, 79.0], [295.0, 41.25], [297.0, 28.5], [302.0, 33.0], [301.0, 49.0], [303.0, 41.0], [296.0, 50.0], [299.0, 37.5], [298.0, 154.0], [300.0, 59.6], [306.0, 23.0], [304.0, 28.0], [305.0, 116.0], [307.0, 30.5], [308.0, 41.75], [309.0, 33.75], [310.0, 36.0], [311.0, 53.0], [313.0, 18.0], [315.0, 38.333333333333336], [316.0, 36.0], [317.0, 38.0], [318.0, 42.5], [319.0, 36.666666666666664], [312.0, 50.0], [321.0, 50.2], [320.0, 39.0], [322.0, 33.5], [323.0, 34.666666666666664], [324.0, 29.5], [325.0, 29.0], [326.0, 41.0], [327.0, 45.0], [329.0, 35.75], [330.0, 30.5], [328.0, 28.0], [333.0, 35.25], [332.0, 37.0], [334.0, 35.5], [348.0, 37.0], [337.0, 38.75], [338.0, 61.33333333333333], [339.0, 22.0], [340.0, 37.0], [343.0, 44.2], [342.0, 40.0], [346.0, 67.5], [345.0, 42.333333333333336], [347.0, 38.0], [350.0, 41.5], [349.0, 24.5], [351.0, 23.0], [344.0, 26.0], [354.0, 32.0], [352.0, 80.66666666666667], [353.0, 23.0], [355.0, 44.666666666666664], [364.0, 35.333333333333336], [366.0, 80.33333333333333], [365.0, 32.5], [367.0, 39.5], [356.0, 99.0], [357.0, 98.0], [358.0, 54.0], [359.0, 50.0], [360.0, 43.0], [361.0, 36.666666666666664], [362.0, 77.33333333333333], [363.0, 29.0], [369.0, 27.5], [368.0, 25.0], [370.0, 27.0], [371.0, 34.5], [372.0, 51.666666666666664], [373.0, 25.0], [374.0, 29.0], [375.0, 32.0], [377.0, 34.0], [381.0, 47.25], [382.0, 217.0], [383.0, 46.0], [376.0, 43.0], [380.0, 42.0], [378.0, 40.0], [379.0, 33.5], [396.0, 29.5], [384.0, 35.5], [385.0, 44.666666666666664], [387.0, 34.0], [397.0, 61.0], [398.0, 30.5], [399.0, 28.0], [388.0, 35.0], [389.0, 24.5], [390.0, 33.0], [391.0, 19.0], [393.0, 64.0], [392.0, 24.5], [395.0, 34.666666666666664], [394.0, 48.0], [401.0, 28.0], [400.0, 33.6], [403.0, 28.75], [402.0, 29.0], [404.0, 31.0], [405.0, 30.5], [407.0, 28.75], [406.0, 32.25], [409.0, 30.333333333333332], [415.0, 26.0], [408.0, 29.5], [412.0, 27.0], [413.0, 34.5], [414.0, 23.0], [411.0, 23.333333333333332], [410.0, 27.0], [428.0, 25.0], [418.0, 24.0], [417.0, 29.8], [419.0, 19.5], [421.0, 24.0], [420.0, 29.0], [422.0, 25.0], [423.0, 28.0], [425.0, 25.0], [426.0, 23.5], [427.0, 27.0], [430.0, 30.333333333333332], [429.0, 28.5], [434.0, 30.0], [432.0, 38.0], [435.0, 44.0], [444.0, 35.0], [446.0, 51.333333333333336], [447.0, 37.0], [445.0, 35.5], [437.0, 66.33333333333333], [436.0, 34.0], [439.0, 35.0], [438.0, 86.0], [440.0, 35.5], [441.0, 87.5], [443.0, 40.666666666666664], [442.0, 29.0], [450.0, 39.2], [448.0, 34.0], [451.0, 47.5], [460.0, 22.0], [461.0, 31.5], [462.0, 29.0], [463.0, 31.0], [452.0, 39.0], [453.0, 33.0], [454.0, 32.0], [456.0, 32.333333333333336], [455.0, 37.0], [457.0, 32.0], [458.0, 28.5], [459.0, 34.0], [465.0, 33.0], [464.0, 38.5], [466.0, 28.6], [467.0, 30.0], [476.0, 39.333333333333336], [477.0, 40.0], [479.0, 32.0], [478.0, 21.666666666666668], [469.0, 34.666666666666664], [471.0, 35.0], [470.0, 29.0], [472.0, 37.0], [473.0, 33.0], [474.0, 38.5], [475.0, 24.0], [481.0, 30.0], [480.0, 28.5], [482.0, 51.5], [483.0, 30.0], [484.0, 30.8], [485.0, 33.0], [486.0, 29.0], [487.0, 34.0], [488.0, 26.333333333333332], [494.0, 21.0], [495.0, 23.5], [492.0, 25.0], [493.0, 26.0], [489.0, 25.5], [490.0, 29.666666666666668], [491.0, 24.666666666666668], [497.0, 27.0], [496.0, 24.666666666666668], [499.0, 26.25], [498.0, 22.5], [501.0, 25.0]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[277.841, 81.88199999999993]], "isOverall": false, "label": "Gin Gonic Http Call-Aggregated", "isController": false}, {"data": [[2.0, 20.0], [3.0, 22.0], [4.0, 23.0], [5.0, 34.0], [6.0, 26.0], [7.0, 21.0], [8.0, 28.0], [9.0, 39.0], [10.0, 26.0], [12.0, 35.5], [13.0, 24.0], [14.0, 25.0], [15.0, 30.0], [16.0, 23.0], [17.0, 30.0], [18.0, 29.0], [19.0, 28.0], [20.0, 25.0], [21.0, 24.0], [22.0, 26.0], [23.0, 22.0], [24.0, 30.0], [25.0, 34.0], [26.0, 28.0], [28.0, 30.5], [29.0, 21.0], [30.0, 27.0], [31.0, 31.0], [33.0, 31.0], [32.0, 25.0], [35.0, 37.5], [37.0, 34.0], [36.0, 23.0], [39.0, 32.0], [38.0, 37.0], [41.0, 33.0], [40.0, 31.0], [43.0, 29.0], [42.0, 32.0], [45.0, 43.0], [44.0, 47.0], [47.0, 29.0], [46.0, 36.0], [49.0, 42.0], [48.0, 60.0], [51.0, 50.0], [50.0, 39.0], [53.0, 69.0], [52.0, 57.0], [55.0, 44.0], [54.0, 56.0], [57.0, 41.0], [56.0, 51.0], [59.0, 44.0], [58.0, 53.0], [60.0, 70.0], [62.0, 73.33333333333333], [63.0, 75.0], [64.0, 84.0], [67.0, 62.0], [66.0, 60.0], [65.0, 81.0], [70.0, 72.0], [71.0, 72.0], [69.0, 57.0], [68.0, 54.0], [72.0, 66.5], [74.0, 89.33333333333333], [75.0, 99.0], [73.0, 89.0], [77.0, 61.0], [76.0, 81.0], [79.0, 72.66666666666667], [78.0, 73.0], [80.0, 65.0], [81.0, 73.5], [83.0, 90.0], [82.0, 71.0], [85.0, 77.25], [87.0, 67.5], [86.0, 52.0], [84.0, 114.0], [88.0, 84.33333333333333], [91.0, 66.0], [90.0, 78.0], [89.0, 87.0], [93.0, 70.5], [94.0, 64.0], [95.0, 53.0], [92.0, 74.0], [96.0, 86.5], [98.0, 77.0], [99.0, 66.0], [97.0, 56.0], [100.0, 89.5], [103.0, 111.5], [102.0, 92.0], [101.0, 101.0], [104.0, 84.5], [105.0, 85.0], [107.0, 82.0], [106.0, 53.0], [108.0, 82.0], [111.0, 115.16666666666666], [110.0, 117.0], [109.0, 88.0], [114.0, 70.0], [115.0, 108.0], [113.0, 75.0], [112.0, 55.0], [118.0, 113.0], [117.0, 129.0], [116.0, 106.0], [119.0, 105.0], [121.0, 116.5], [120.0, 120.0], [122.0, 100.0], [123.0, 101.0], [124.0, 112.4], [125.0, 99.5], [127.0, 89.25], [126.0, 120.0], [128.0, 100.5], [129.0, 105.0], [130.0, 109.0], [134.0, 94.5], [135.0, 111.0], [133.0, 126.0], [132.0, 124.0], [131.0, 98.0], [140.0, 105.5], [143.0, 58.0], [142.0, 91.0], [141.0, 64.0], [139.0, 83.0], [138.0, 83.0], [137.0, 63.0], [136.0, 71.0], [144.0, 125.5], [147.0, 183.5], [146.0, 134.0], [148.0, 85.0], [150.0, 64.0], [149.0, 31.0], [145.0, 49.0], [159.0, 102.0], [158.0, 38.0], [157.0, 37.0], [156.0, 31.0], [155.0, 49.0], [154.0, 54.5], [152.0, 59.0], [163.0, 131.0], [167.0, 38.0], [166.0, 49.0], [165.0, 59.0], [164.0, 39.0], [162.0, 43.0], [161.0, 51.0], [160.0, 35.0], [168.0, 120.33333333333334], [175.0, 44.0], [174.0, 41.0], [173.0, 43.5], [171.0, 38.0], [170.0, 35.0], [169.0, 37.0], [182.0, 189.66666666666669], [181.0, 196.0], [183.0, 48.0], [180.0, 33.0], [179.0, 38.0], [178.0, 32.0], [177.0, 22.0], [176.0, 18.0], [184.0, 226.33333333333331], [185.0, 132.33333333333334], [186.0, 183.0], [190.0, 195.0], [189.0, 113.0], [188.0, 40.0], [187.0, 48.0], [192.0, 106.0], [194.0, 77.0], [195.0, 95.0], [196.0, 107.5], [198.0, 103.0], [197.0, 26.0], [193.0, 43.0], [202.0, 80.0], [204.0, 142.25], [205.0, 119.66666666666666], [207.0, 39.0], [206.0, 27.0], [203.0, 47.0], [201.0, 34.0], [200.0, 44.0], [211.0, 149.5], [212.0, 166.33333333333334], [214.0, 166.33333333333334], [213.0, 164.5], [215.0, 181.25], [210.0, 52.0], [209.0, 43.0], [208.0, 62.0], [216.0, 188.63636363636368], [219.0, 127.5], [220.0, 110.4], [222.0, 99.0], [223.0, 75.0], [221.0, 50.0], [218.0, 57.0], [217.0, 48.0], [225.0, 111.0], [229.0, 142.0], [230.0, 107.5], [231.0, 44.0], [228.0, 39.0], [227.0, 45.0], [226.0, 53.0], [224.0, 41.0], [234.0, 143.0], [235.0, 110.66666666666667], [239.0, 44.0], [238.0, 45.0], [237.0, 51.0], [236.0, 47.0], [233.0, 51.0], [232.0, 55.0], [243.0, 124.5], [244.0, 109.5], [245.0, 126.0], [247.0, 91.0], [246.0, 70.0], [242.0, 48.0], [241.0, 39.0], [240.0, 42.0], [248.0, 143.0], [250.0, 155.33333333333334], [249.0, 105.5], [251.0, 98.0], [252.0, 137.5], [253.0, 127.25], [254.0, 128.75], [255.0, 149.6], [270.0, 95.0], [256.0, 112.5], [258.0, 149.4], [259.0, 59.0], [269.0, 117.0], [268.0, 137.0], [261.0, 141.33333333333334], [260.0, 120.5], [263.0, 135.5], [262.0, 75.0], [266.0, 132.33333333333334], [267.0, 118.4], [271.0, 91.0], [265.0, 109.0], [264.0, 98.0], [275.0, 118.0], [276.0, 106.8888888888889], [277.0, 90.0], [278.0, 76.6], [280.0, 69.71428571428571], [279.0, 90.28571428571429], [274.0, 73.0], [273.0, 93.0], [272.0, 57.0], [284.0, 61.833333333333336], [285.0, 151.0], [286.0, 55.6], [287.0, 54.75], [282.0, 48.5], [281.0, 54.0], [283.0, 46.5], [288.0, 65.66666666666666], [289.0, 86.5], [291.0, 103.0], [290.0, 78.0], [292.0, 38.333333333333336], [293.0, 34.5], [294.0, 35.5], [296.0, 43.0], [295.0, 32.0], [297.0, 30.0], [299.0, 42.0], [298.0, 59.5], [300.0, 38.25], [301.0, 34.5], [302.0, 36.0], [303.0, 31.666666666666668], [305.0, 44.5], [304.0, 42.0], [307.0, 37.25], [308.0, 38.666666666666664], [309.0, 36.0], [310.0, 31.0], [311.0, 33.666666666666664], [313.0, 28.5], [312.0, 50.0], [315.0, 42.5], [316.0, 40.5], [317.0, 45.0], [318.0, 42.0], [319.0, 39.666666666666664], [323.0, 35.666666666666664], [321.0, 43.5], [320.0, 30.75], [327.0, 54.0], [322.0, 33.5], [325.0, 29.5], [324.0, 39.0], [326.0, 40.5], [329.0, 37.0], [328.0, 39.0], [333.0, 47.333333333333336], [332.0, 47.0], [334.0, 30.0], [335.0, 34.5], [331.0, 40.5], [330.0, 35.0], [349.0, 46.0], [337.0, 39.0], [336.0, 53.0], [338.0, 40.0], [348.0, 37.0], [339.0, 24.0], [341.0, 36.0], [340.0, 31.0], [342.0, 51.0], [343.0, 54.5], [345.0, 53.25], [346.0, 44.0], [347.0, 37.666666666666664], [351.0, 42.0], [344.0, 24.0], [350.0, 29.0], [354.0, 38.0], [352.0, 40.5], [353.0, 30.0], [355.0, 36.0], [365.0, 45.0], [364.0, 25.0], [360.0, 37.0], [367.0, 49.0], [366.0, 50.0], [356.0, 41.0], [357.0, 31.0], [358.0, 42.0], [359.0, 43.5], [362.0, 48.333333333333336], [363.0, 44.0], [361.0, 51.333333333333336], [369.0, 34.5], [370.0, 37.0], [372.0, 25.5], [373.0, 28.5], [374.0, 26.5], [375.0, 31.333333333333332], [368.0, 38.0], [377.0, 36.5], [376.0, 29.0], [379.0, 32.0], [378.0, 38.0], [383.0, 32.5], [382.0, 26.0], [381.0, 43.333333333333336], [380.0, 32.0], [396.0, 39.333333333333336], [384.0, 46.0], [385.0, 37.5], [387.0, 35.0], [386.0, 28.0], [389.0, 39.0], [391.0, 22.0], [390.0, 24.0], [388.0, 38.666666666666664], [392.0, 37.0], [393.0, 38.0], [394.0, 41.0], [395.0, 28.0], [398.0, 31.666666666666668], [399.0, 21.0], [397.0, 33.0], [401.0, 29.0], [400.0, 34.5], [402.0, 25.5], [403.0, 35.0], [405.0, 36.333333333333336], [404.0, 32.0], [407.0, 33.4], [406.0, 36.5], [408.0, 28.0], [412.0, 28.0], [413.0, 27.333333333333332], [415.0, 24.666666666666668], [414.0, 33.0], [409.0, 30.5], [411.0, 34.5], [410.0, 24.666666666666668], [417.0, 30.5], [416.0, 29.5], [418.0, 27.0], [419.0, 26.0], [420.0, 22.5], [421.0, 31.0], [422.0, 31.0], [423.0, 31.333333333333332], [424.0, 25.666666666666668], [431.0, 33.0], [428.0, 24.5], [429.0, 29.0], [430.0, 31.0], [425.0, 37.5], [426.0, 24.0], [427.0, 29.0], [445.0, 39.0], [433.0, 40.0], [435.0, 40.666666666666664], [434.0, 47.0], [444.0, 36.0], [437.0, 37.5], [436.0, 30.5], [438.0, 35.5], [439.0, 38.0], [432.0, 34.0], [440.0, 38.6], [442.0, 35.0], [441.0, 41.0], [443.0, 36.666666666666664], [446.0, 39.333333333333336], [447.0, 55.0], [461.0, 32.5], [449.0, 53.5], [452.0, 48.25], [453.0, 37.0], [451.0, 57.0], [450.0, 74.0], [460.0, 27.0], [454.0, 42.0], [456.0, 37.0], [455.0, 42.666666666666664], [448.0, 53.0], [458.0, 31.2], [459.0, 22.0], [457.0, 30.0], [462.0, 29.333333333333332], [463.0, 29.0], [476.0, 36.5], [465.0, 43.0], [464.0, 30.5], [467.0, 36.4], [466.0, 31.0], [468.0, 35.5], [470.0, 34.0], [469.0, 32.0], [471.0, 38.333333333333336], [473.0, 37.666666666666664], [474.0, 43.5], [475.0, 36.0], [477.0, 35.5], [478.0, 29.333333333333332], [479.0, 32.666666666666664], [472.0, 23.0], [480.0, 29.0], [482.0, 33.0], [481.0, 23.0], [484.0, 32.25], [483.0, 31.0], [485.0, 27.5], [486.0, 35.0], [487.0, 30.0], [488.0, 34.0], [494.0, 26.0], [495.0, 25.5], [492.0, 26.333333333333332], [493.0, 29.0], [489.0, 28.666666666666668], [490.0, 29.0], [491.0, 32.666666666666664], [497.0, 30.333333333333332], [498.0, 26.666666666666668], [499.0, 25.666666666666668], [500.0, 25.5], [501.0, 27.333333333333332], [502.0, 20.0], [496.0, 21.0]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}, {"data": [[278.7200000000003, 65.84900000000007]], "isOverall": false, "label": "Spring Boot Http Call-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 502.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 6800.0, "minX": 1.69851438E12, "maxY": 8992483.333333334, "series": [{"data": [[1.69851438E12, 8992483.333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69851438E12, 6800.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851438E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 65.84900000000007, "minX": 1.69851438E12, "maxY": 4680.845000000001, "series": [{"data": [[1.69851438E12, 4680.845000000001]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[1.69851438E12, 81.88199999999993]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[1.69851438E12, 65.84900000000007]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851438E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 52.51200000000002, "minX": 1.69851438E12, "maxY": 4666.749000000001, "series": [{"data": [[1.69851438E12, 4666.749000000001]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[1.69851438E12, 68.28800000000008]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[1.69851438E12, 52.51200000000002]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851438E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 1.9430000000000014, "minX": 1.69851438E12, "maxY": 4.169000000000002, "series": [{"data": [[1.69851438E12, 4.169000000000002]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[1.69851438E12, 1.9430000000000014]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[1.69851438E12, 2.0000000000000004]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851438E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 17.0, "minX": 1.69851438E12, "maxY": 8062.0, "series": [{"data": [[1.69851438E12, 8062.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69851438E12, 6140.400000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69851438E12, 7906.909999999998]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69851438E12, 7124.5999999999985]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69851438E12, 17.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69851438E12, 85.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851438E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 25.5, "minX": 14.0, "maxY": 365.5, "series": [{"data": [[149.0, 140.0], [154.0, 223.0], [158.0, 41.0], [167.0, 31.0], [162.0, 57.5], [169.0, 59.0], [175.0, 107.0], [178.0, 115.5], [176.0, 38.5], [179.0, 117.0], [186.0, 37.5], [185.0, 33.0], [195.0, 66.0], [203.0, 57.0], [14.0, 25.5], [66.0, 96.0], [120.0, 365.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 203.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 20.0, "minX": 14.0, "maxY": 317.0, "series": [{"data": [[149.0, 118.0], [154.0, 179.5], [158.0, 31.0], [167.0, 25.0], [162.0, 45.0], [169.0, 47.0], [175.0, 87.0], [178.0, 86.0], [176.0, 30.5], [179.0, 94.0], [186.0, 30.0], [185.0, 27.0], [195.0, 53.0], [203.0, 45.0], [14.0, 20.0], [66.0, 79.5], [120.0, 317.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 203.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.69851438E12, "maxY": 50.0, "series": [{"data": [[1.69851438E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851438E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.69851438E12, "maxY": 50.0, "series": [{"data": [[1.69851438E12, 50.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851438E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.69851438E12, "maxY": 16.666666666666668, "series": [{"data": [[1.69851438E12, 16.666666666666668]], "isOverall": false, "label": "Gin Gonic Http Call-success", "isController": false}, {"data": [[1.69851438E12, 16.666666666666668]], "isOverall": false, "label": "Spring Boot Http Call-success", "isController": false}, {"data": [[1.69851438E12, 16.666666666666668]], "isOverall": false, "label": "Express Js Http Call-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851438E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.69851438E12, "maxY": 50.0, "series": [{"data": [[1.69851438E12, 50.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851438E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}


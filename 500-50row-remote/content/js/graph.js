/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 88.0, "minX": 0.0, "maxY": 4003.0, "series": [{"data": [[0.0, 526.0], [0.1, 526.0], [0.2, 558.0], [0.3, 558.0], [0.4, 568.0], [0.5, 568.0], [0.6, 568.0], [0.7, 577.0], [0.8, 580.0], [0.9, 580.0], [1.0, 588.0], [1.1, 588.0], [1.2, 591.0], [1.3, 591.0], [1.4, 593.0], [1.5, 593.0], [1.6, 600.0], [1.7, 600.0], [1.8, 602.0], [1.9, 602.0], [2.0, 657.0], [2.1, 657.0], [2.2, 671.0], [2.3, 671.0], [2.4, 677.0], [2.5, 677.0], [2.6, 682.0], [2.7, 682.0], [2.8, 682.0], [2.9, 684.0], [3.0, 684.0], [3.1, 689.0], [3.2, 689.0], [3.3, 692.0], [3.4, 692.0], [3.5, 694.0], [3.6, 694.0], [3.7, 694.0], [3.8, 694.0], [3.9, 742.0], [4.0, 742.0], [4.1, 751.0], [4.2, 751.0], [4.3, 772.0], [4.4, 772.0], [4.5, 775.0], [4.6, 775.0], [4.7, 783.0], [4.8, 783.0], [4.9, 791.0], [5.0, 791.0], [5.1, 792.0], [5.2, 792.0], [5.3, 794.0], [5.4, 794.0], [5.5, 795.0], [5.6, 795.0], [5.7, 797.0], [5.8, 797.0], [5.9, 803.0], [6.0, 803.0], [6.1, 803.0], [6.2, 803.0], [6.3, 806.0], [6.4, 806.0], [6.5, 806.0], [6.6, 806.0], [6.7, 810.0], [6.8, 810.0], [6.9, 816.0], [7.0, 816.0], [7.1, 818.0], [7.2, 818.0], [7.3, 818.0], [7.4, 818.0], [7.5, 819.0], [7.6, 819.0], [7.7, 820.0], [7.8, 820.0], [7.9, 823.0], [8.0, 823.0], [8.1, 825.0], [8.2, 825.0], [8.3, 826.0], [8.4, 826.0], [8.5, 826.0], [8.6, 826.0], [8.7, 827.0], [8.8, 827.0], [8.9, 828.0], [9.0, 828.0], [9.1, 833.0], [9.2, 833.0], [9.3, 835.0], [9.4, 837.0], [9.5, 837.0], [9.6, 838.0], [9.7, 838.0], [9.8, 841.0], [9.9, 841.0], [10.0, 842.0], [10.1, 842.0], [10.2, 843.0], [10.3, 843.0], [10.4, 844.0], [10.5, 844.0], [10.6, 845.0], [10.7, 845.0], [10.8, 845.0], [10.9, 845.0], [11.0, 845.0], [11.1, 845.0], [11.2, 845.0], [11.3, 845.0], [11.4, 846.0], [11.5, 846.0], [11.6, 847.0], [11.7, 847.0], [11.8, 849.0], [11.9, 849.0], [12.0, 850.0], [12.1, 850.0], [12.2, 852.0], [12.3, 852.0], [12.4, 853.0], [12.5, 853.0], [12.6, 854.0], [12.7, 854.0], [12.8, 854.0], [12.9, 854.0], [13.0, 855.0], [13.1, 855.0], [13.2, 856.0], [13.3, 856.0], [13.4, 857.0], [13.5, 857.0], [13.6, 857.0], [13.7, 857.0], [13.8, 857.0], [13.9, 857.0], [14.0, 859.0], [14.1, 859.0], [14.2, 865.0], [14.3, 865.0], [14.4, 867.0], [14.5, 867.0], [14.6, 867.0], [14.7, 867.0], [14.8, 874.0], [14.9, 874.0], [15.0, 886.0], [15.1, 886.0], [15.2, 893.0], [15.3, 893.0], [15.4, 899.0], [15.5, 899.0], [15.6, 900.0], [15.7, 900.0], [15.8, 902.0], [15.9, 902.0], [16.0, 903.0], [16.1, 903.0], [16.2, 905.0], [16.3, 905.0], [16.4, 908.0], [16.5, 908.0], [16.6, 912.0], [16.7, 912.0], [16.8, 924.0], [16.9, 924.0], [17.0, 926.0], [17.1, 926.0], [17.2, 928.0], [17.3, 928.0], [17.4, 929.0], [17.5, 929.0], [17.6, 933.0], [17.7, 933.0], [17.8, 933.0], [17.9, 933.0], [18.0, 934.0], [18.1, 934.0], [18.2, 936.0], [18.3, 936.0], [18.4, 938.0], [18.5, 938.0], [18.6, 938.0], [18.7, 938.0], [18.8, 939.0], [18.9, 939.0], [19.0, 941.0], [19.1, 941.0], [19.2, 944.0], [19.3, 944.0], [19.4, 944.0], [19.5, 944.0], [19.6, 945.0], [19.7, 945.0], [19.8, 945.0], [19.9, 945.0], [20.0, 946.0], [20.1, 946.0], [20.2, 950.0], [20.3, 950.0], [20.4, 951.0], [20.5, 951.0], [20.6, 954.0], [20.7, 954.0], [20.8, 954.0], [20.9, 954.0], [21.0, 957.0], [21.1, 957.0], [21.2, 960.0], [21.3, 960.0], [21.4, 961.0], [21.5, 961.0], [21.6, 962.0], [21.7, 962.0], [21.8, 965.0], [21.9, 965.0], [22.0, 965.0], [22.1, 965.0], [22.2, 967.0], [22.3, 967.0], [22.4, 968.0], [22.5, 968.0], [22.6, 969.0], [22.7, 969.0], [22.8, 969.0], [22.9, 969.0], [23.0, 971.0], [23.1, 971.0], [23.2, 972.0], [23.3, 972.0], [23.4, 972.0], [23.5, 972.0], [23.6, 974.0], [23.7, 974.0], [23.8, 975.0], [23.9, 975.0], [24.0, 976.0], [24.1, 976.0], [24.2, 976.0], [24.3, 976.0], [24.4, 976.0], [24.5, 976.0], [24.6, 979.0], [24.7, 979.0], [24.8, 985.0], [24.9, 985.0], [25.0, 985.0], [25.1, 985.0], [25.2, 1020.0], [25.3, 1020.0], [25.4, 1030.0], [25.5, 1030.0], [25.6, 1033.0], [25.7, 1033.0], [25.8, 1033.0], [25.9, 1033.0], [26.0, 1038.0], [26.1, 1038.0], [26.2, 1073.0], [26.3, 1073.0], [26.4, 1079.0], [26.5, 1079.0], [26.6, 1079.0], [26.7, 1079.0], [26.8, 1086.0], [26.9, 1086.0], [27.0, 1091.0], [27.1, 1091.0], [27.2, 1097.0], [27.3, 1097.0], [27.4, 1104.0], [27.5, 1104.0], [27.6, 1108.0], [27.7, 1108.0], [27.8, 1109.0], [27.9, 1109.0], [28.0, 1111.0], [28.1, 1111.0], [28.2, 1111.0], [28.3, 1111.0], [28.4, 1112.0], [28.5, 1112.0], [28.6, 1112.0], [28.7, 1112.0], [28.8, 1115.0], [28.9, 1115.0], [29.0, 1116.0], [29.1, 1116.0], [29.2, 1128.0], [29.3, 1128.0], [29.4, 1130.0], [29.5, 1130.0], [29.6, 1133.0], [29.7, 1133.0], [29.8, 1135.0], [29.9, 1135.0], [30.0, 1142.0], [30.1, 1142.0], [30.2, 1143.0], [30.3, 1143.0], [30.4, 1144.0], [30.5, 1144.0], [30.6, 1146.0], [30.7, 1146.0], [30.8, 1152.0], [30.9, 1152.0], [31.0, 1153.0], [31.1, 1153.0], [31.2, 1153.0], [31.3, 1153.0], [31.4, 1154.0], [31.5, 1154.0], [31.6, 1163.0], [31.7, 1163.0], [31.8, 1170.0], [31.9, 1170.0], [32.0, 1172.0], [32.1, 1172.0], [32.2, 1173.0], [32.3, 1173.0], [32.4, 1175.0], [32.5, 1175.0], [32.6, 1176.0], [32.7, 1176.0], [32.8, 1181.0], [32.9, 1181.0], [33.0, 1183.0], [33.1, 1183.0], [33.2, 1189.0], [33.3, 1189.0], [33.4, 1193.0], [33.5, 1193.0], [33.6, 1200.0], [33.7, 1200.0], [33.8, 1201.0], [33.9, 1201.0], [34.0, 1208.0], [34.1, 1208.0], [34.2, 1219.0], [34.3, 1219.0], [34.4, 1230.0], [34.5, 1230.0], [34.6, 1234.0], [34.7, 1234.0], [34.8, 1269.0], [34.9, 1269.0], [35.0, 1296.0], [35.1, 1296.0], [35.2, 1302.0], [35.3, 1302.0], [35.4, 1314.0], [35.5, 1314.0], [35.6, 1320.0], [35.7, 1320.0], [35.8, 1320.0], [35.9, 1320.0], [36.0, 1322.0], [36.1, 1322.0], [36.2, 1331.0], [36.3, 1331.0], [36.4, 1335.0], [36.5, 1335.0], [36.6, 1338.0], [36.7, 1338.0], [36.8, 1345.0], [36.9, 1345.0], [37.0, 1352.0], [37.1, 1352.0], [37.2, 1367.0], [37.3, 1367.0], [37.4, 1392.0], [37.5, 1392.0], [37.6, 1393.0], [37.7, 1393.0], [37.8, 1393.0], [37.9, 1402.0], [38.0, 1402.0], [38.1, 1404.0], [38.2, 1404.0], [38.3, 1405.0], [38.4, 1405.0], [38.5, 1407.0], [38.6, 1407.0], [38.7, 1407.0], [38.8, 1407.0], [38.9, 1407.0], [39.0, 1407.0], [39.1, 1415.0], [39.2, 1415.0], [39.3, 1422.0], [39.4, 1422.0], [39.5, 1424.0], [39.6, 1424.0], [39.7, 1428.0], [39.8, 1428.0], [39.9, 1428.0], [40.0, 1428.0], [40.1, 1438.0], [40.2, 1438.0], [40.3, 1439.0], [40.4, 1439.0], [40.5, 1440.0], [40.6, 1440.0], [40.7, 1444.0], [40.8, 1444.0], [40.9, 1445.0], [41.0, 1445.0], [41.1, 1452.0], [41.2, 1452.0], [41.3, 1456.0], [41.4, 1456.0], [41.5, 1456.0], [41.6, 1456.0], [41.7, 1472.0], [41.8, 1472.0], [41.9, 1484.0], [42.0, 1484.0], [42.1, 1487.0], [42.2, 1487.0], [42.3, 1488.0], [42.4, 1488.0], [42.5, 1488.0], [42.6, 1488.0], [42.7, 1488.0], [42.8, 1488.0], [42.9, 1489.0], [43.0, 1489.0], [43.1, 1489.0], [43.2, 1489.0], [43.3, 1491.0], [43.4, 1491.0], [43.5, 1494.0], [43.6, 1494.0], [43.7, 1494.0], [43.8, 1494.0], [43.9, 1495.0], [44.0, 1495.0], [44.1, 1495.0], [44.2, 1495.0], [44.3, 1499.0], [44.4, 1499.0], [44.5, 1500.0], [44.6, 1500.0], [44.7, 1504.0], [44.8, 1504.0], [44.9, 1505.0], [45.0, 1505.0], [45.1, 1509.0], [45.2, 1509.0], [45.3, 1512.0], [45.4, 1512.0], [45.5, 1513.0], [45.6, 1513.0], [45.7, 1518.0], [45.8, 1518.0], [45.9, 1523.0], [46.0, 1523.0], [46.1, 1563.0], [46.2, 1563.0], [46.3, 1565.0], [46.4, 1565.0], [46.5, 1580.0], [46.6, 1580.0], [46.7, 1590.0], [46.8, 1590.0], [46.9, 1596.0], [47.0, 1596.0], [47.1, 1609.0], [47.2, 1609.0], [47.3, 1611.0], [47.4, 1611.0], [47.5, 1616.0], [47.6, 1616.0], [47.7, 1622.0], [47.8, 1622.0], [47.9, 1624.0], [48.0, 1624.0], [48.1, 1625.0], [48.2, 1625.0], [48.3, 1627.0], [48.4, 1627.0], [48.5, 1627.0], [48.6, 1627.0], [48.7, 1629.0], [48.8, 1629.0], [48.9, 1631.0], [49.0, 1631.0], [49.1, 1639.0], [49.2, 1639.0], [49.3, 1640.0], [49.4, 1640.0], [49.5, 1682.0], [49.6, 1682.0], [49.7, 1704.0], [49.8, 1704.0], [49.9, 1709.0], [50.0, 1709.0], [50.1, 1725.0], [50.2, 1725.0], [50.3, 1732.0], [50.4, 1732.0], [50.5, 1734.0], [50.6, 1734.0], [50.7, 1737.0], [50.8, 1737.0], [50.9, 1737.0], [51.0, 1737.0], [51.1, 1738.0], [51.2, 1738.0], [51.3, 1740.0], [51.4, 1740.0], [51.5, 1742.0], [51.6, 1742.0], [51.7, 1743.0], [51.8, 1743.0], [51.9, 1745.0], [52.0, 1745.0], [52.1, 1746.0], [52.2, 1746.0], [52.3, 1747.0], [52.4, 1747.0], [52.5, 1750.0], [52.6, 1750.0], [52.7, 1754.0], [52.8, 1754.0], [52.9, 1756.0], [53.0, 1756.0], [53.1, 1756.0], [53.2, 1756.0], [53.3, 1759.0], [53.4, 1759.0], [53.5, 1766.0], [53.6, 1766.0], [53.7, 1766.0], [53.8, 1766.0], [53.9, 1767.0], [54.0, 1767.0], [54.1, 1771.0], [54.2, 1771.0], [54.3, 1772.0], [54.4, 1772.0], [54.5, 1783.0], [54.6, 1783.0], [54.7, 1788.0], [54.8, 1788.0], [54.9, 1797.0], [55.0, 1797.0], [55.1, 1804.0], [55.2, 1804.0], [55.3, 1832.0], [55.4, 1832.0], [55.5, 1838.0], [55.6, 1838.0], [55.7, 1838.0], [55.8, 1838.0], [55.9, 1840.0], [56.0, 1840.0], [56.1, 1849.0], [56.2, 1849.0], [56.3, 1850.0], [56.4, 1850.0], [56.5, 1851.0], [56.6, 1851.0], [56.7, 1855.0], [56.8, 1855.0], [56.9, 1857.0], [57.0, 1857.0], [57.1, 1866.0], [57.2, 1866.0], [57.3, 1869.0], [57.4, 1869.0], [57.5, 1874.0], [57.6, 1874.0], [57.7, 1877.0], [57.8, 1877.0], [57.9, 1881.0], [58.0, 1881.0], [58.1, 1888.0], [58.2, 1888.0], [58.3, 1889.0], [58.4, 1889.0], [58.5, 1891.0], [58.6, 1891.0], [58.7, 1895.0], [58.8, 1895.0], [58.9, 1896.0], [59.0, 1896.0], [59.1, 1905.0], [59.2, 1905.0], [59.3, 1908.0], [59.4, 1908.0], [59.5, 1909.0], [59.6, 1909.0], [59.7, 1976.0], [59.8, 1976.0], [59.9, 1982.0], [60.0, 1982.0], [60.1, 1990.0], [60.2, 1990.0], [60.3, 1992.0], [60.4, 1992.0], [60.5, 1997.0], [60.6, 1997.0], [60.7, 2001.0], [60.8, 2001.0], [60.9, 2004.0], [61.0, 2004.0], [61.1, 2007.0], [61.2, 2007.0], [61.3, 2011.0], [61.4, 2011.0], [61.5, 2014.0], [61.6, 2014.0], [61.7, 2017.0], [61.8, 2017.0], [61.9, 2028.0], [62.0, 2028.0], [62.1, 2028.0], [62.2, 2028.0], [62.3, 2030.0], [62.4, 2030.0], [62.5, 2031.0], [62.6, 2031.0], [62.7, 2034.0], [62.8, 2034.0], [62.9, 2043.0], [63.0, 2043.0], [63.1, 2045.0], [63.2, 2045.0], [63.3, 2047.0], [63.4, 2047.0], [63.5, 2052.0], [63.6, 2052.0], [63.7, 2054.0], [63.8, 2054.0], [63.9, 2056.0], [64.0, 2056.0], [64.1, 2062.0], [64.2, 2062.0], [64.3, 2080.0], [64.4, 2080.0], [64.5, 2136.0], [64.6, 2136.0], [64.7, 2150.0], [64.8, 2150.0], [64.9, 2155.0], [65.0, 2155.0], [65.1, 2163.0], [65.2, 2163.0], [65.3, 2178.0], [65.4, 2178.0], [65.5, 2179.0], [65.6, 2179.0], [65.7, 2192.0], [65.8, 2192.0], [65.9, 2197.0], [66.0, 2197.0], [66.1, 2215.0], [66.2, 2215.0], [66.3, 2225.0], [66.4, 2225.0], [66.5, 2230.0], [66.6, 2230.0], [66.7, 2231.0], [66.8, 2231.0], [66.9, 2233.0], [67.0, 2233.0], [67.1, 2237.0], [67.2, 2237.0], [67.3, 2238.0], [67.4, 2238.0], [67.5, 2239.0], [67.6, 2239.0], [67.7, 2243.0], [67.8, 2243.0], [67.9, 2243.0], [68.0, 2243.0], [68.1, 2245.0], [68.2, 2245.0], [68.3, 2247.0], [68.4, 2247.0], [68.5, 2248.0], [68.6, 2248.0], [68.7, 2249.0], [68.8, 2249.0], [68.9, 2249.0], [69.0, 2249.0], [69.1, 2250.0], [69.2, 2250.0], [69.3, 2250.0], [69.4, 2250.0], [69.5, 2254.0], [69.6, 2254.0], [69.7, 2255.0], [69.8, 2255.0], [69.9, 2259.0], [70.0, 2259.0], [70.1, 2260.0], [70.2, 2260.0], [70.3, 2267.0], [70.4, 2267.0], [70.5, 2275.0], [70.6, 2275.0], [70.7, 2285.0], [70.8, 2285.0], [70.9, 2285.0], [71.0, 2285.0], [71.1, 2286.0], [71.2, 2286.0], [71.3, 2287.0], [71.4, 2287.0], [71.5, 2290.0], [71.6, 2290.0], [71.7, 2294.0], [71.8, 2294.0], [71.9, 2296.0], [72.0, 2296.0], [72.1, 2300.0], [72.2, 2300.0], [72.3, 2321.0], [72.4, 2321.0], [72.5, 2366.0], [72.6, 2366.0], [72.7, 2383.0], [72.8, 2383.0], [72.9, 2386.0], [73.0, 2386.0], [73.1, 2391.0], [73.2, 2391.0], [73.3, 2391.0], [73.4, 2391.0], [73.5, 2392.0], [73.6, 2392.0], [73.7, 2403.0], [73.8, 2403.0], [73.9, 2414.0], [74.0, 2414.0], [74.1, 2418.0], [74.2, 2418.0], [74.3, 2488.0], [74.4, 2488.0], [74.5, 2506.0], [74.6, 2506.0], [74.7, 2511.0], [74.8, 2511.0], [74.9, 2522.0], [75.0, 2522.0], [75.1, 2527.0], [75.2, 2527.0], [75.3, 2544.0], [75.4, 2544.0], [75.5, 2549.0], [75.6, 2549.0], [75.7, 2551.0], [75.8, 2551.0], [75.9, 2555.0], [76.0, 2555.0], [76.1, 2558.0], [76.2, 2558.0], [76.3, 2560.0], [76.4, 2560.0], [76.5, 2561.0], [76.6, 2561.0], [76.7, 2566.0], [76.8, 2566.0], [76.9, 2582.0], [77.0, 2582.0], [77.1, 2591.0], [77.2, 2591.0], [77.3, 2598.0], [77.4, 2598.0], [77.5, 2605.0], [77.6, 2605.0], [77.7, 2608.0], [77.8, 2608.0], [77.9, 2615.0], [78.0, 2615.0], [78.1, 2616.0], [78.2, 2616.0], [78.3, 2616.0], [78.4, 2616.0], [78.5, 2631.0], [78.6, 2631.0], [78.7, 2636.0], [78.8, 2636.0], [78.9, 2636.0], [79.0, 2636.0], [79.1, 2654.0], [79.2, 2654.0], [79.3, 2660.0], [79.4, 2660.0], [79.5, 2672.0], [79.6, 2672.0], [79.7, 2672.0], [79.8, 2672.0], [79.9, 2676.0], [80.0, 2676.0], [80.1, 2676.0], [80.2, 2676.0], [80.3, 2679.0], [80.4, 2679.0], [80.5, 2680.0], [80.6, 2680.0], [80.7, 2681.0], [80.8, 2681.0], [80.9, 2682.0], [81.0, 2682.0], [81.1, 2682.0], [81.2, 2682.0], [81.3, 2683.0], [81.4, 2683.0], [81.5, 2686.0], [81.6, 2686.0], [81.7, 2686.0], [81.8, 2686.0], [81.9, 2687.0], [82.0, 2687.0], [82.1, 2688.0], [82.2, 2688.0], [82.3, 2693.0], [82.4, 2693.0], [82.5, 2694.0], [82.6, 2694.0], [82.7, 2696.0], [82.8, 2696.0], [82.9, 2697.0], [83.0, 2697.0], [83.1, 2698.0], [83.2, 2698.0], [83.3, 2699.0], [83.4, 2699.0], [83.5, 2702.0], [83.6, 2702.0], [83.7, 2702.0], [83.8, 2702.0], [83.9, 2704.0], [84.0, 2704.0], [84.1, 2709.0], [84.2, 2709.0], [84.3, 2713.0], [84.4, 2713.0], [84.5, 2714.0], [84.6, 2714.0], [84.7, 2719.0], [84.8, 2719.0], [84.9, 2720.0], [85.0, 2720.0], [85.1, 2896.0], [85.2, 2896.0], [85.3, 2967.0], [85.4, 2967.0], [85.5, 3016.0], [85.6, 3016.0], [85.7, 3022.0], [85.8, 3022.0], [85.9, 3025.0], [86.0, 3025.0], [86.1, 3034.0], [86.2, 3034.0], [86.3, 3041.0], [86.4, 3041.0], [86.5, 3041.0], [86.6, 3041.0], [86.7, 3047.0], [86.8, 3047.0], [86.9, 3064.0], [87.0, 3064.0], [87.1, 3078.0], [87.2, 3078.0], [87.3, 3083.0], [87.4, 3083.0], [87.5, 3093.0], [87.6, 3093.0], [87.7, 3101.0], [87.8, 3101.0], [87.9, 3105.0], [88.0, 3105.0], [88.1, 3106.0], [88.2, 3106.0], [88.3, 3108.0], [88.4, 3108.0], [88.5, 3112.0], [88.6, 3112.0], [88.7, 3115.0], [88.8, 3115.0], [88.9, 3116.0], [89.0, 3116.0], [89.1, 3120.0], [89.2, 3120.0], [89.3, 3122.0], [89.4, 3122.0], [89.5, 3125.0], [89.6, 3125.0], [89.7, 3129.0], [89.8, 3129.0], [89.9, 3137.0], [90.0, 3137.0], [90.1, 3138.0], [90.2, 3138.0], [90.3, 3206.0], [90.4, 3206.0], [90.5, 3208.0], [90.6, 3208.0], [90.7, 3213.0], [90.8, 3213.0], [90.9, 3227.0], [91.0, 3227.0], [91.1, 3251.0], [91.2, 3251.0], [91.3, 3265.0], [91.4, 3265.0], [91.5, 3272.0], [91.6, 3272.0], [91.7, 3274.0], [91.8, 3274.0], [91.9, 3288.0], [92.0, 3288.0], [92.1, 3310.0], [92.2, 3310.0], [92.3, 3316.0], [92.4, 3316.0], [92.5, 3322.0], [92.6, 3322.0], [92.7, 3327.0], [92.8, 3327.0], [92.9, 3348.0], [93.0, 3348.0], [93.1, 3384.0], [93.2, 3384.0], [93.3, 3392.0], [93.4, 3392.0], [93.5, 3395.0], [93.6, 3395.0], [93.7, 3397.0], [93.8, 3397.0], [93.9, 3408.0], [94.0, 3408.0], [94.1, 3410.0], [94.2, 3410.0], [94.3, 3418.0], [94.4, 3418.0], [94.5, 3418.0], [94.6, 3418.0], [94.7, 3425.0], [94.8, 3425.0], [94.9, 3431.0], [95.0, 3431.0], [95.1, 3432.0], [95.2, 3432.0], [95.3, 3445.0], [95.4, 3445.0], [95.5, 3449.0], [95.6, 3449.0], [95.7, 3471.0], [95.8, 3471.0], [95.9, 3477.0], [96.0, 3477.0], [96.1, 3479.0], [96.2, 3479.0], [96.3, 3479.0], [96.4, 3479.0], [96.5, 3481.0], [96.6, 3481.0], [96.7, 3484.0], [96.8, 3484.0], [96.9, 3488.0], [97.0, 3488.0], [97.1, 3543.0], [97.2, 3543.0], [97.3, 3644.0], [97.4, 3644.0], [97.5, 3747.0], [97.6, 3747.0], [97.7, 3753.0], [97.8, 3753.0], [97.9, 3773.0], [98.0, 3773.0], [98.1, 3794.0], [98.2, 3794.0], [98.3, 3830.0], [98.4, 3830.0], [98.5, 3832.0], [98.6, 3832.0], [98.7, 3867.0], [98.8, 3867.0], [98.9, 3879.0], [99.0, 3879.0], [99.1, 3894.0], [99.2, 3894.0], [99.3, 3901.0], [99.4, 3901.0], [99.5, 3948.0], [99.6, 3948.0], [99.7, 3976.0], [99.8, 3976.0], [99.9, 4003.0], [100.0, 4003.0]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[0.0, 88.0], [0.1, 88.0], [0.2, 93.0], [0.3, 93.0], [0.4, 93.0], [0.5, 93.0], [0.6, 93.0], [0.7, 94.0], [0.8, 95.0], [0.9, 95.0], [1.0, 95.0], [1.1, 95.0], [1.2, 95.0], [1.3, 96.0], [1.4, 96.0], [1.5, 96.0], [1.6, 97.0], [1.7, 97.0], [1.8, 98.0], [1.9, 98.0], [2.0, 98.0], [2.1, 98.0], [2.2, 98.0], [2.3, 98.0], [2.4, 99.0], [2.5, 99.0], [2.6, 99.0], [2.7, 99.0], [2.8, 99.0], [2.9, 99.0], [3.0, 99.0], [3.1, 99.0], [3.2, 99.0], [3.3, 99.0], [3.4, 99.0], [3.5, 99.0], [3.6, 100.0], [3.7, 100.0], [3.8, 100.0], [3.9, 100.0], [4.0, 100.0], [4.1, 100.0], [4.2, 100.0], [4.3, 100.0], [4.4, 100.0], [4.5, 100.0], [4.6, 101.0], [4.7, 101.0], [4.8, 101.0], [4.9, 101.0], [5.0, 102.0], [5.1, 102.0], [5.2, 102.0], [5.3, 102.0], [5.4, 102.0], [5.5, 102.0], [5.6, 102.0], [5.7, 102.0], [5.8, 102.0], [5.9, 102.0], [6.0, 102.0], [6.1, 102.0], [6.2, 102.0], [6.3, 102.0], [6.4, 102.0], [6.5, 102.0], [6.6, 103.0], [6.7, 103.0], [6.8, 103.0], [6.9, 103.0], [7.0, 103.0], [7.1, 103.0], [7.2, 103.0], [7.3, 103.0], [7.4, 104.0], [7.5, 104.0], [7.6, 104.0], [7.7, 104.0], [7.8, 104.0], [7.9, 104.0], [8.0, 104.0], [8.1, 104.0], [8.2, 104.0], [8.3, 104.0], [8.4, 104.0], [8.5, 104.0], [8.6, 105.0], [8.7, 105.0], [8.8, 105.0], [8.9, 105.0], [9.0, 105.0], [9.1, 105.0], [9.2, 105.0], [9.3, 105.0], [9.4, 105.0], [9.5, 105.0], [9.6, 106.0], [9.7, 106.0], [9.8, 106.0], [9.9, 106.0], [10.0, 106.0], [10.1, 106.0], [10.2, 106.0], [10.3, 106.0], [10.4, 107.0], [10.5, 107.0], [10.6, 107.0], [10.7, 107.0], [10.8, 107.0], [10.9, 107.0], [11.0, 107.0], [11.1, 107.0], [11.2, 107.0], [11.3, 108.0], [11.4, 108.0], [11.5, 108.0], [11.6, 108.0], [11.7, 108.0], [11.8, 108.0], [11.9, 108.0], [12.0, 108.0], [12.1, 108.0], [12.2, 108.0], [12.3, 108.0], [12.4, 109.0], [12.5, 109.0], [12.6, 109.0], [12.7, 109.0], [12.8, 109.0], [12.9, 109.0], [13.0, 109.0], [13.1, 109.0], [13.2, 109.0], [13.3, 109.0], [13.4, 109.0], [13.5, 109.0], [13.6, 109.0], [13.7, 109.0], [13.8, 109.0], [13.9, 109.0], [14.0, 110.0], [14.1, 110.0], [14.2, 110.0], [14.3, 110.0], [14.4, 110.0], [14.5, 110.0], [14.6, 110.0], [14.7, 110.0], [14.8, 111.0], [14.9, 111.0], [15.0, 111.0], [15.1, 111.0], [15.2, 111.0], [15.3, 111.0], [15.4, 112.0], [15.5, 112.0], [15.6, 112.0], [15.7, 112.0], [15.8, 112.0], [15.9, 112.0], [16.0, 112.0], [16.1, 112.0], [16.2, 112.0], [16.3, 112.0], [16.4, 112.0], [16.5, 112.0], [16.6, 112.0], [16.7, 112.0], [16.8, 112.0], [16.9, 112.0], [17.0, 113.0], [17.1, 113.0], [17.2, 113.0], [17.3, 113.0], [17.4, 113.0], [17.5, 113.0], [17.6, 114.0], [17.7, 114.0], [17.8, 114.0], [17.9, 114.0], [18.0, 114.0], [18.1, 114.0], [18.2, 114.0], [18.3, 114.0], [18.4, 114.0], [18.5, 114.0], [18.6, 114.0], [18.7, 114.0], [18.8, 115.0], [18.9, 115.0], [19.0, 115.0], [19.1, 115.0], [19.2, 115.0], [19.3, 115.0], [19.4, 115.0], [19.5, 115.0], [19.6, 115.0], [19.7, 115.0], [19.8, 115.0], [19.9, 115.0], [20.0, 115.0], [20.1, 115.0], [20.2, 116.0], [20.3, 116.0], [20.4, 116.0], [20.5, 116.0], [20.6, 116.0], [20.7, 116.0], [20.8, 116.0], [20.9, 116.0], [21.0, 116.0], [21.1, 116.0], [21.2, 116.0], [21.3, 116.0], [21.4, 117.0], [21.5, 117.0], [21.6, 117.0], [21.7, 117.0], [21.8, 118.0], [21.9, 118.0], [22.0, 118.0], [22.1, 118.0], [22.2, 118.0], [22.3, 118.0], [22.4, 118.0], [22.5, 118.0], [22.6, 118.0], [22.7, 118.0], [22.8, 118.0], [22.9, 118.0], [23.0, 119.0], [23.1, 119.0], [23.2, 119.0], [23.3, 119.0], [23.4, 119.0], [23.5, 119.0], [23.6, 119.0], [23.7, 119.0], [23.8, 120.0], [23.9, 120.0], [24.0, 121.0], [24.1, 121.0], [24.2, 121.0], [24.3, 121.0], [24.4, 121.0], [24.5, 121.0], [24.6, 122.0], [24.7, 122.0], [24.8, 122.0], [24.9, 122.0], [25.0, 122.0], [25.1, 122.0], [25.2, 123.0], [25.3, 123.0], [25.4, 123.0], [25.5, 123.0], [25.6, 123.0], [25.7, 123.0], [25.8, 123.0], [25.9, 123.0], [26.0, 123.0], [26.1, 123.0], [26.2, 123.0], [26.3, 123.0], [26.4, 123.0], [26.5, 123.0], [26.6, 123.0], [26.7, 123.0], [26.8, 123.0], [26.9, 123.0], [27.0, 126.0], [27.1, 126.0], [27.2, 126.0], [27.3, 126.0], [27.4, 126.0], [27.5, 126.0], [27.6, 127.0], [27.7, 127.0], [27.8, 127.0], [27.9, 127.0], [28.0, 127.0], [28.1, 127.0], [28.2, 127.0], [28.3, 127.0], [28.4, 127.0], [28.5, 129.0], [28.6, 129.0], [28.7, 129.0], [28.8, 129.0], [28.9, 129.0], [29.0, 129.0], [29.1, 130.0], [29.2, 130.0], [29.3, 131.0], [29.4, 131.0], [29.5, 131.0], [29.6, 131.0], [29.7, 131.0], [29.8, 131.0], [29.9, 131.0], [30.0, 131.0], [30.1, 132.0], [30.2, 132.0], [30.3, 132.0], [30.4, 132.0], [30.5, 132.0], [30.6, 132.0], [30.7, 132.0], [30.8, 132.0], [30.9, 133.0], [31.0, 133.0], [31.1, 133.0], [31.2, 133.0], [31.3, 133.0], [31.4, 133.0], [31.5, 136.0], [31.6, 136.0], [31.7, 136.0], [31.8, 136.0], [31.9, 136.0], [32.0, 136.0], [32.1, 136.0], [32.2, 136.0], [32.3, 136.0], [32.4, 136.0], [32.5, 136.0], [32.6, 136.0], [32.7, 136.0], [32.8, 136.0], [32.9, 136.0], [33.0, 136.0], [33.1, 137.0], [33.2, 137.0], [33.3, 137.0], [33.4, 137.0], [33.5, 137.0], [33.6, 137.0], [33.7, 139.0], [33.8, 139.0], [33.9, 139.0], [34.0, 139.0], [34.1, 140.0], [34.2, 140.0], [34.3, 140.0], [34.4, 140.0], [34.5, 140.0], [34.6, 140.0], [34.7, 141.0], [34.8, 141.0], [34.9, 141.0], [35.0, 141.0], [35.1, 141.0], [35.2, 141.0], [35.3, 142.0], [35.4, 142.0], [35.5, 142.0], [35.6, 142.0], [35.7, 143.0], [35.8, 143.0], [35.9, 143.0], [36.0, 143.0], [36.1, 143.0], [36.2, 143.0], [36.3, 143.0], [36.4, 143.0], [36.5, 143.0], [36.6, 143.0], [36.7, 144.0], [36.8, 144.0], [36.9, 144.0], [37.0, 144.0], [37.1, 145.0], [37.2, 145.0], [37.3, 145.0], [37.4, 145.0], [37.5, 145.0], [37.6, 145.0], [37.7, 145.0], [37.8, 145.0], [37.9, 146.0], [38.0, 146.0], [38.1, 146.0], [38.2, 146.0], [38.3, 146.0], [38.4, 146.0], [38.5, 146.0], [38.6, 146.0], [38.7, 146.0], [38.8, 146.0], [38.9, 147.0], [39.0, 147.0], [39.1, 147.0], [39.2, 147.0], [39.3, 147.0], [39.4, 147.0], [39.5, 147.0], [39.6, 149.0], [39.7, 149.0], [39.8, 149.0], [39.9, 149.0], [40.0, 150.0], [40.1, 150.0], [40.2, 151.0], [40.3, 151.0], [40.4, 151.0], [40.5, 152.0], [40.6, 152.0], [40.7, 152.0], [40.8, 152.0], [40.9, 153.0], [41.0, 153.0], [41.1, 154.0], [41.2, 154.0], [41.3, 154.0], [41.4, 154.0], [41.5, 155.0], [41.6, 155.0], [41.7, 155.0], [41.8, 155.0], [41.9, 155.0], [42.0, 155.0], [42.1, 155.0], [42.2, 155.0], [42.3, 155.0], [42.4, 155.0], [42.5, 156.0], [42.6, 156.0], [42.7, 156.0], [42.8, 156.0], [42.9, 157.0], [43.0, 157.0], [43.1, 158.0], [43.2, 158.0], [43.3, 158.0], [43.4, 158.0], [43.5, 158.0], [43.6, 158.0], [43.7, 159.0], [43.8, 159.0], [43.9, 160.0], [44.0, 160.0], [44.1, 160.0], [44.2, 160.0], [44.3, 161.0], [44.4, 161.0], [44.5, 161.0], [44.6, 161.0], [44.7, 161.0], [44.8, 161.0], [44.9, 161.0], [45.0, 161.0], [45.1, 162.0], [45.2, 162.0], [45.3, 162.0], [45.4, 162.0], [45.5, 163.0], [45.6, 163.0], [45.7, 163.0], [45.8, 163.0], [45.9, 164.0], [46.0, 164.0], [46.1, 164.0], [46.2, 165.0], [46.3, 165.0], [46.4, 165.0], [46.5, 165.0], [46.6, 166.0], [46.7, 166.0], [46.8, 166.0], [46.9, 166.0], [47.0, 167.0], [47.1, 167.0], [47.2, 168.0], [47.3, 168.0], [47.4, 168.0], [47.5, 168.0], [47.6, 168.0], [47.7, 168.0], [47.8, 168.0], [47.9, 169.0], [48.0, 169.0], [48.1, 171.0], [48.2, 171.0], [48.3, 171.0], [48.4, 171.0], [48.5, 174.0], [48.6, 174.0], [48.7, 174.0], [48.8, 174.0], [48.9, 175.0], [49.0, 175.0], [49.1, 176.0], [49.2, 176.0], [49.3, 179.0], [49.4, 179.0], [49.5, 181.0], [49.6, 181.0], [49.7, 182.0], [49.8, 182.0], [49.9, 182.0], [50.0, 182.0], [50.1, 182.0], [50.2, 182.0], [50.3, 182.0], [50.4, 182.0], [50.5, 183.0], [50.6, 183.0], [50.7, 184.0], [50.8, 184.0], [50.9, 184.0], [51.0, 184.0], [51.1, 186.0], [51.2, 186.0], [51.3, 190.0], [51.4, 190.0], [51.5, 190.0], [51.6, 190.0], [51.7, 191.0], [51.8, 191.0], [51.9, 192.0], [52.0, 192.0], [52.1, 193.0], [52.2, 193.0], [52.3, 193.0], [52.4, 193.0], [52.5, 194.0], [52.6, 194.0], [52.7, 195.0], [52.8, 195.0], [52.9, 198.0], [53.0, 198.0], [53.1, 199.0], [53.2, 199.0], [53.3, 200.0], [53.4, 200.0], [53.5, 200.0], [53.6, 200.0], [53.7, 201.0], [53.8, 201.0], [53.9, 201.0], [54.0, 201.0], [54.1, 201.0], [54.2, 201.0], [54.3, 202.0], [54.4, 202.0], [54.5, 204.0], [54.6, 204.0], [54.7, 204.0], [54.8, 204.0], [54.9, 205.0], [55.0, 205.0], [55.1, 205.0], [55.2, 205.0], [55.3, 206.0], [55.4, 206.0], [55.5, 206.0], [55.6, 206.0], [55.7, 207.0], [55.8, 207.0], [55.9, 207.0], [56.0, 207.0], [56.1, 207.0], [56.2, 207.0], [56.3, 209.0], [56.4, 209.0], [56.5, 209.0], [56.6, 209.0], [56.7, 209.0], [56.8, 209.0], [56.9, 210.0], [57.0, 210.0], [57.1, 210.0], [57.2, 210.0], [57.3, 210.0], [57.4, 210.0], [57.5, 211.0], [57.6, 211.0], [57.7, 211.0], [57.8, 211.0], [57.9, 214.0], [58.0, 214.0], [58.1, 214.0], [58.2, 214.0], [58.3, 216.0], [58.4, 216.0], [58.5, 218.0], [58.6, 218.0], [58.7, 219.0], [58.8, 219.0], [58.9, 220.0], [59.0, 220.0], [59.1, 221.0], [59.2, 221.0], [59.3, 221.0], [59.4, 221.0], [59.5, 229.0], [59.6, 229.0], [59.7, 231.0], [59.8, 231.0], [59.9, 232.0], [60.0, 232.0], [60.1, 233.0], [60.2, 233.0], [60.3, 233.0], [60.4, 233.0], [60.5, 233.0], [60.6, 233.0], [60.7, 235.0], [60.8, 235.0], [60.9, 237.0], [61.0, 237.0], [61.1, 238.0], [61.2, 238.0], [61.3, 243.0], [61.4, 243.0], [61.5, 247.0], [61.6, 247.0], [61.7, 252.0], [61.8, 252.0], [61.9, 254.0], [62.0, 254.0], [62.1, 265.0], [62.2, 265.0], [62.3, 265.0], [62.4, 265.0], [62.5, 266.0], [62.6, 266.0], [62.7, 274.0], [62.8, 274.0], [62.9, 276.0], [63.0, 276.0], [63.1, 284.0], [63.2, 284.0], [63.3, 285.0], [63.4, 285.0], [63.5, 289.0], [63.6, 289.0], [63.7, 291.0], [63.8, 291.0], [63.9, 291.0], [64.0, 291.0], [64.1, 310.0], [64.2, 310.0], [64.3, 324.0], [64.4, 324.0], [64.5, 324.0], [64.6, 324.0], [64.7, 340.0], [64.8, 340.0], [64.9, 348.0], [65.0, 348.0], [65.1, 365.0], [65.2, 365.0], [65.3, 375.0], [65.4, 375.0], [65.5, 377.0], [65.6, 377.0], [65.7, 388.0], [65.8, 388.0], [65.9, 403.0], [66.0, 403.0], [66.1, 413.0], [66.2, 413.0], [66.3, 419.0], [66.4, 419.0], [66.5, 424.0], [66.6, 424.0], [66.7, 434.0], [66.8, 434.0], [66.9, 441.0], [67.0, 441.0], [67.1, 460.0], [67.2, 460.0], [67.3, 461.0], [67.4, 461.0], [67.5, 462.0], [67.6, 462.0], [67.7, 467.0], [67.8, 467.0], [67.9, 556.0], [68.0, 556.0], [68.1, 558.0], [68.2, 558.0], [68.3, 567.0], [68.4, 567.0], [68.5, 570.0], [68.6, 570.0], [68.7, 582.0], [68.8, 582.0], [68.9, 587.0], [69.0, 587.0], [69.1, 591.0], [69.2, 591.0], [69.3, 591.0], [69.4, 591.0], [69.5, 598.0], [69.6, 598.0], [69.7, 602.0], [69.8, 602.0], [69.9, 605.0], [70.0, 605.0], [70.1, 609.0], [70.2, 609.0], [70.3, 615.0], [70.4, 615.0], [70.5, 620.0], [70.6, 620.0], [70.7, 622.0], [70.8, 622.0], [70.9, 628.0], [71.0, 628.0], [71.1, 630.0], [71.2, 630.0], [71.3, 631.0], [71.4, 631.0], [71.5, 632.0], [71.6, 632.0], [71.7, 633.0], [71.8, 633.0], [71.9, 633.0], [72.0, 633.0], [72.1, 636.0], [72.2, 636.0], [72.3, 644.0], [72.4, 644.0], [72.5, 649.0], [72.6, 649.0], [72.7, 649.0], [72.8, 649.0], [72.9, 650.0], [73.0, 650.0], [73.1, 650.0], [73.2, 650.0], [73.3, 652.0], [73.4, 652.0], [73.5, 654.0], [73.6, 654.0], [73.7, 654.0], [73.8, 654.0], [73.9, 658.0], [74.0, 658.0], [74.1, 658.0], [74.2, 658.0], [74.3, 662.0], [74.4, 662.0], [74.5, 663.0], [74.6, 663.0], [74.7, 664.0], [74.8, 664.0], [74.9, 666.0], [75.0, 666.0], [75.1, 666.0], [75.2, 666.0], [75.3, 667.0], [75.4, 667.0], [75.5, 668.0], [75.6, 668.0], [75.7, 668.0], [75.8, 668.0], [75.9, 670.0], [76.0, 670.0], [76.1, 673.0], [76.2, 673.0], [76.3, 677.0], [76.4, 677.0], [76.5, 686.0], [76.6, 686.0], [76.7, 690.0], [76.8, 690.0], [76.9, 694.0], [77.0, 694.0], [77.1, 694.0], [77.2, 694.0], [77.3, 701.0], [77.4, 701.0], [77.5, 704.0], [77.6, 704.0], [77.7, 718.0], [77.8, 718.0], [77.9, 720.0], [78.0, 720.0], [78.1, 729.0], [78.2, 729.0], [78.3, 735.0], [78.4, 735.0], [78.5, 736.0], [78.6, 736.0], [78.7, 741.0], [78.8, 741.0], [78.9, 748.0], [79.0, 748.0], [79.1, 764.0], [79.2, 764.0], [79.3, 778.0], [79.4, 778.0], [79.5, 784.0], [79.6, 784.0], [79.7, 791.0], [79.8, 791.0], [79.9, 793.0], [80.0, 793.0], [80.1, 798.0], [80.2, 798.0], [80.3, 802.0], [80.4, 802.0], [80.5, 805.0], [80.6, 805.0], [80.7, 805.0], [80.8, 805.0], [80.9, 806.0], [81.0, 806.0], [81.1, 807.0], [81.2, 807.0], [81.3, 807.0], [81.4, 807.0], [81.5, 807.0], [81.6, 807.0], [81.7, 808.0], [81.8, 808.0], [81.9, 817.0], [82.0, 817.0], [82.1, 818.0], [82.2, 818.0], [82.3, 818.0], [82.4, 818.0], [82.5, 818.0], [82.6, 818.0], [82.7, 819.0], [82.8, 819.0], [82.9, 819.0], [83.0, 819.0], [83.1, 829.0], [83.2, 829.0], [83.3, 831.0], [83.4, 831.0], [83.5, 833.0], [83.6, 833.0], [83.7, 833.0], [83.8, 833.0], [83.9, 834.0], [84.0, 834.0], [84.1, 835.0], [84.2, 835.0], [84.3, 836.0], [84.4, 836.0], [84.5, 837.0], [84.6, 837.0], [84.7, 837.0], [84.8, 837.0], [84.9, 842.0], [85.0, 842.0], [85.1, 846.0], [85.2, 846.0], [85.3, 846.0], [85.4, 846.0], [85.5, 848.0], [85.6, 848.0], [85.7, 850.0], [85.8, 850.0], [85.9, 855.0], [86.0, 855.0], [86.1, 864.0], [86.2, 864.0], [86.3, 867.0], [86.4, 867.0], [86.5, 869.0], [86.6, 869.0], [86.7, 876.0], [86.8, 876.0], [86.9, 878.0], [87.0, 878.0], [87.1, 878.0], [87.2, 878.0], [87.3, 879.0], [87.4, 879.0], [87.5, 880.0], [87.6, 880.0], [87.7, 881.0], [87.8, 881.0], [87.9, 883.0], [88.0, 883.0], [88.1, 889.0], [88.2, 889.0], [88.3, 899.0], [88.4, 899.0], [88.5, 905.0], [88.6, 905.0], [88.7, 905.0], [88.8, 905.0], [88.9, 907.0], [89.0, 907.0], [89.1, 916.0], [89.2, 916.0], [89.3, 929.0], [89.4, 929.0], [89.5, 931.0], [89.6, 931.0], [89.7, 933.0], [89.8, 933.0], [89.9, 935.0], [90.0, 935.0], [90.1, 939.0], [90.2, 939.0], [90.3, 940.0], [90.4, 940.0], [90.5, 948.0], [90.6, 948.0], [90.7, 954.0], [90.8, 954.0], [90.9, 960.0], [91.0, 960.0], [91.1, 979.0], [91.2, 979.0], [91.3, 979.0], [91.4, 979.0], [91.5, 997.0], [91.6, 997.0], [91.7, 1024.0], [91.8, 1024.0], [91.9, 1027.0], [92.0, 1027.0], [92.1, 1027.0], [92.2, 1027.0], [92.3, 1032.0], [92.4, 1032.0], [92.5, 1034.0], [92.6, 1034.0], [92.7, 1043.0], [92.8, 1043.0], [92.9, 1061.0], [93.0, 1061.0], [93.1, 1065.0], [93.2, 1065.0], [93.3, 1071.0], [93.4, 1071.0], [93.5, 1073.0], [93.6, 1073.0], [93.7, 1088.0], [93.8, 1088.0], [93.9, 1113.0], [94.0, 1113.0], [94.1, 1116.0], [94.2, 1116.0], [94.3, 1120.0], [94.4, 1120.0], [94.5, 1148.0], [94.6, 1148.0], [94.7, 1156.0], [94.8, 1156.0], [94.9, 1185.0], [95.0, 1185.0], [95.1, 1188.0], [95.2, 1188.0], [95.3, 1194.0], [95.4, 1194.0], [95.5, 1197.0], [95.6, 1197.0], [95.7, 1227.0], [95.8, 1227.0], [95.9, 1232.0], [96.0, 1232.0], [96.1, 1236.0], [96.2, 1236.0], [96.3, 1246.0], [96.4, 1246.0], [96.5, 1253.0], [96.6, 1253.0], [96.7, 1258.0], [96.8, 1258.0], [96.9, 1258.0], [97.0, 1258.0], [97.1, 1292.0], [97.2, 1292.0], [97.3, 1319.0], [97.4, 1319.0], [97.5, 1320.0], [97.6, 1320.0], [97.7, 1330.0], [97.8, 1330.0], [97.9, 1333.0], [98.0, 1333.0], [98.1, 1333.0], [98.2, 1333.0], [98.3, 1352.0], [98.4, 1352.0], [98.5, 1384.0], [98.6, 1384.0], [98.7, 1387.0], [98.8, 1387.0], [98.9, 1395.0], [99.0, 1395.0], [99.1, 1457.0], [99.2, 1457.0], [99.3, 1481.0], [99.4, 1481.0], [99.5, 1495.0], [99.6, 1495.0], [99.7, 1584.0], [99.8, 1584.0], [99.9, 1602.0], [100.0, 1602.0]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[0.0, 96.0], [0.1, 96.0], [0.2, 97.0], [0.3, 97.0], [0.4, 98.0], [0.5, 98.0], [0.6, 98.0], [0.7, 99.0], [0.8, 99.0], [0.9, 99.0], [1.0, 100.0], [1.1, 100.0], [1.2, 100.0], [1.3, 100.0], [1.4, 100.0], [1.5, 100.0], [1.6, 101.0], [1.7, 101.0], [1.8, 101.0], [1.9, 101.0], [2.0, 101.0], [2.1, 101.0], [2.2, 103.0], [2.3, 103.0], [2.4, 103.0], [2.5, 103.0], [2.6, 103.0], [2.7, 103.0], [2.8, 103.0], [2.9, 104.0], [3.0, 104.0], [3.1, 105.0], [3.2, 105.0], [3.3, 106.0], [3.4, 106.0], [3.5, 106.0], [3.6, 106.0], [3.7, 106.0], [3.8, 106.0], [3.9, 107.0], [4.0, 107.0], [4.1, 108.0], [4.2, 108.0], [4.3, 109.0], [4.4, 109.0], [4.5, 109.0], [4.6, 109.0], [4.7, 109.0], [4.8, 109.0], [4.9, 109.0], [5.0, 109.0], [5.1, 110.0], [5.2, 110.0], [5.3, 110.0], [5.4, 110.0], [5.5, 111.0], [5.6, 111.0], [5.7, 112.0], [5.8, 112.0], [5.9, 112.0], [6.0, 112.0], [6.1, 112.0], [6.2, 112.0], [6.3, 113.0], [6.4, 113.0], [6.5, 113.0], [6.6, 113.0], [6.7, 114.0], [6.8, 114.0], [6.9, 114.0], [7.0, 114.0], [7.1, 115.0], [7.2, 115.0], [7.3, 115.0], [7.4, 115.0], [7.5, 116.0], [7.6, 116.0], [7.7, 116.0], [7.8, 116.0], [7.9, 117.0], [8.0, 117.0], [8.1, 117.0], [8.2, 117.0], [8.3, 118.0], [8.4, 118.0], [8.5, 118.0], [8.6, 118.0], [8.7, 119.0], [8.8, 119.0], [8.9, 120.0], [9.0, 120.0], [9.1, 120.0], [9.2, 120.0], [9.3, 120.0], [9.4, 120.0], [9.5, 123.0], [9.6, 123.0], [9.7, 123.0], [9.8, 123.0], [9.9, 125.0], [10.0, 125.0], [10.1, 125.0], [10.2, 125.0], [10.3, 125.0], [10.4, 125.0], [10.5, 126.0], [10.6, 126.0], [10.7, 128.0], [10.8, 129.0], [10.9, 129.0], [11.0, 129.0], [11.1, 129.0], [11.2, 129.0], [11.3, 129.0], [11.4, 129.0], [11.5, 129.0], [11.6, 129.0], [11.7, 130.0], [11.8, 130.0], [11.9, 130.0], [12.0, 130.0], [12.1, 131.0], [12.2, 131.0], [12.3, 131.0], [12.4, 131.0], [12.5, 132.0], [12.6, 132.0], [12.7, 132.0], [12.8, 132.0], [12.9, 132.0], [13.0, 132.0], [13.1, 132.0], [13.2, 132.0], [13.3, 133.0], [13.4, 133.0], [13.5, 133.0], [13.6, 133.0], [13.7, 133.0], [13.8, 133.0], [13.9, 133.0], [14.0, 133.0], [14.1, 134.0], [14.2, 134.0], [14.3, 134.0], [14.4, 134.0], [14.5, 134.0], [14.6, 134.0], [14.7, 134.0], [14.8, 134.0], [14.9, 135.0], [15.0, 135.0], [15.1, 136.0], [15.2, 136.0], [15.3, 137.0], [15.4, 137.0], [15.5, 138.0], [15.6, 138.0], [15.7, 138.0], [15.8, 138.0], [15.9, 138.0], [16.0, 138.0], [16.1, 140.0], [16.2, 140.0], [16.3, 140.0], [16.4, 140.0], [16.5, 141.0], [16.6, 142.0], [16.7, 142.0], [16.8, 142.0], [16.9, 142.0], [17.0, 143.0], [17.1, 143.0], [17.2, 143.0], [17.3, 143.0], [17.4, 143.0], [17.5, 143.0], [17.6, 143.0], [17.7, 143.0], [17.8, 143.0], [17.9, 143.0], [18.0, 144.0], [18.1, 144.0], [18.2, 145.0], [18.3, 145.0], [18.4, 146.0], [18.5, 146.0], [18.6, 146.0], [18.7, 146.0], [18.8, 147.0], [18.9, 147.0], [19.0, 148.0], [19.1, 148.0], [19.2, 148.0], [19.3, 148.0], [19.4, 148.0], [19.5, 148.0], [19.6, 149.0], [19.7, 149.0], [19.8, 150.0], [19.9, 150.0], [20.0, 151.0], [20.1, 151.0], [20.2, 151.0], [20.3, 151.0], [20.4, 151.0], [20.5, 151.0], [20.6, 152.0], [20.7, 152.0], [20.8, 152.0], [20.9, 152.0], [21.0, 153.0], [21.1, 153.0], [21.2, 153.0], [21.3, 153.0], [21.4, 153.0], [21.5, 153.0], [21.6, 153.0], [21.7, 153.0], [21.8, 156.0], [21.9, 156.0], [22.0, 156.0], [22.1, 156.0], [22.2, 156.0], [22.3, 156.0], [22.4, 156.0], [22.5, 156.0], [22.6, 156.0], [22.7, 156.0], [22.8, 158.0], [22.9, 158.0], [23.0, 158.0], [23.1, 158.0], [23.2, 158.0], [23.3, 158.0], [23.4, 158.0], [23.5, 158.0], [23.6, 159.0], [23.7, 159.0], [23.8, 159.0], [23.9, 159.0], [24.0, 159.0], [24.1, 159.0], [24.2, 160.0], [24.3, 160.0], [24.4, 160.0], [24.5, 160.0], [24.6, 161.0], [24.7, 161.0], [24.8, 161.0], [24.9, 161.0], [25.0, 161.0], [25.1, 161.0], [25.2, 161.0], [25.3, 161.0], [25.4, 161.0], [25.5, 161.0], [25.6, 163.0], [25.7, 163.0], [25.8, 163.0], [25.9, 163.0], [26.0, 163.0], [26.1, 163.0], [26.2, 163.0], [26.3, 163.0], [26.4, 164.0], [26.5, 164.0], [26.6, 164.0], [26.7, 164.0], [26.8, 164.0], [26.9, 164.0], [27.0, 165.0], [27.1, 165.0], [27.2, 165.0], [27.3, 165.0], [27.4, 166.0], [27.5, 166.0], [27.6, 166.0], [27.7, 166.0], [27.8, 166.0], [27.9, 166.0], [28.0, 166.0], [28.1, 166.0], [28.2, 168.0], [28.3, 168.0], [28.4, 168.0], [28.5, 168.0], [28.6, 168.0], [28.7, 168.0], [28.8, 168.0], [28.9, 168.0], [29.0, 168.0], [29.1, 168.0], [29.2, 169.0], [29.3, 169.0], [29.4, 169.0], [29.5, 169.0], [29.6, 170.0], [29.7, 170.0], [29.8, 171.0], [29.9, 171.0], [30.0, 173.0], [30.1, 173.0], [30.2, 173.0], [30.3, 173.0], [30.4, 173.0], [30.5, 173.0], [30.6, 174.0], [30.7, 174.0], [30.8, 175.0], [30.9, 175.0], [31.0, 176.0], [31.1, 176.0], [31.2, 176.0], [31.3, 176.0], [31.4, 176.0], [31.5, 176.0], [31.6, 178.0], [31.7, 178.0], [31.8, 179.0], [31.9, 179.0], [32.0, 179.0], [32.1, 179.0], [32.2, 181.0], [32.3, 181.0], [32.4, 181.0], [32.5, 181.0], [32.6, 182.0], [32.7, 182.0], [32.8, 182.0], [32.9, 182.0], [33.0, 182.0], [33.1, 182.0], [33.2, 183.0], [33.3, 183.0], [33.4, 183.0], [33.5, 183.0], [33.6, 184.0], [33.7, 184.0], [33.8, 185.0], [33.9, 185.0], [34.0, 186.0], [34.1, 186.0], [34.2, 186.0], [34.3, 186.0], [34.4, 187.0], [34.5, 187.0], [34.6, 187.0], [34.7, 187.0], [34.8, 187.0], [34.9, 187.0], [35.0, 188.0], [35.1, 188.0], [35.2, 189.0], [35.3, 189.0], [35.4, 189.0], [35.5, 189.0], [35.6, 189.0], [35.7, 189.0], [35.8, 189.0], [35.9, 190.0], [36.0, 190.0], [36.1, 191.0], [36.2, 191.0], [36.3, 191.0], [36.4, 191.0], [36.5, 192.0], [36.6, 192.0], [36.7, 192.0], [36.8, 192.0], [36.9, 192.0], [37.0, 192.0], [37.1, 192.0], [37.2, 193.0], [37.3, 193.0], [37.4, 193.0], [37.5, 193.0], [37.6, 194.0], [37.7, 194.0], [37.8, 194.0], [37.9, 194.0], [38.0, 194.0], [38.1, 194.0], [38.2, 195.0], [38.3, 195.0], [38.4, 195.0], [38.5, 195.0], [38.6, 195.0], [38.7, 195.0], [38.8, 195.0], [38.9, 195.0], [39.0, 196.0], [39.1, 196.0], [39.2, 196.0], [39.3, 196.0], [39.4, 198.0], [39.5, 198.0], [39.6, 198.0], [39.7, 198.0], [39.8, 198.0], [39.9, 198.0], [40.0, 199.0], [40.1, 199.0], [40.2, 199.0], [40.3, 199.0], [40.4, 199.0], [40.5, 199.0], [40.6, 199.0], [40.7, 199.0], [40.8, 199.0], [40.9, 199.0], [41.0, 199.0], [41.1, 199.0], [41.2, 199.0], [41.3, 199.0], [41.4, 199.0], [41.5, 199.0], [41.6, 200.0], [41.7, 200.0], [41.8, 200.0], [41.9, 201.0], [42.0, 201.0], [42.1, 201.0], [42.2, 201.0], [42.3, 201.0], [42.4, 201.0], [42.5, 202.0], [42.6, 202.0], [42.7, 203.0], [42.8, 203.0], [42.9, 203.0], [43.0, 203.0], [43.1, 205.0], [43.2, 205.0], [43.3, 205.0], [43.4, 205.0], [43.5, 207.0], [43.6, 207.0], [43.7, 207.0], [43.8, 207.0], [43.9, 207.0], [44.0, 207.0], [44.1, 208.0], [44.2, 208.0], [44.3, 209.0], [44.4, 209.0], [44.5, 209.0], [44.6, 209.0], [44.7, 210.0], [44.8, 210.0], [44.9, 210.0], [45.0, 210.0], [45.1, 210.0], [45.2, 210.0], [45.3, 210.0], [45.4, 210.0], [45.5, 210.0], [45.6, 210.0], [45.7, 211.0], [45.8, 211.0], [45.9, 211.0], [46.0, 211.0], [46.1, 211.0], [46.2, 211.0], [46.3, 211.0], [46.4, 211.0], [46.5, 211.0], [46.6, 211.0], [46.7, 212.0], [46.8, 212.0], [46.9, 212.0], [47.0, 212.0], [47.1, 213.0], [47.2, 213.0], [47.3, 213.0], [47.4, 213.0], [47.5, 213.0], [47.6, 213.0], [47.7, 214.0], [47.8, 214.0], [47.9, 214.0], [48.0, 214.0], [48.1, 215.0], [48.2, 215.0], [48.3, 215.0], [48.4, 215.0], [48.5, 215.0], [48.6, 215.0], [48.7, 216.0], [48.8, 216.0], [48.9, 217.0], [49.0, 217.0], [49.1, 217.0], [49.2, 217.0], [49.3, 217.0], [49.4, 217.0], [49.5, 217.0], [49.6, 217.0], [49.7, 217.0], [49.8, 217.0], [49.9, 218.0], [50.0, 218.0], [50.1, 218.0], [50.2, 218.0], [50.3, 218.0], [50.4, 218.0], [50.5, 218.0], [50.6, 218.0], [50.7, 219.0], [50.8, 219.0], [50.9, 219.0], [51.0, 219.0], [51.1, 219.0], [51.2, 219.0], [51.3, 219.0], [51.4, 219.0], [51.5, 219.0], [51.6, 219.0], [51.7, 220.0], [51.8, 220.0], [51.9, 220.0], [52.0, 220.0], [52.1, 220.0], [52.2, 220.0], [52.3, 221.0], [52.4, 221.0], [52.5, 221.0], [52.6, 221.0], [52.7, 221.0], [52.8, 221.0], [52.9, 222.0], [53.0, 222.0], [53.1, 222.0], [53.2, 222.0], [53.3, 223.0], [53.4, 223.0], [53.5, 223.0], [53.6, 223.0], [53.7, 223.0], [53.8, 223.0], [53.9, 224.0], [54.0, 224.0], [54.1, 224.0], [54.2, 224.0], [54.3, 225.0], [54.4, 225.0], [54.5, 225.0], [54.6, 225.0], [54.7, 225.0], [54.8, 225.0], [54.9, 226.0], [55.0, 226.0], [55.1, 227.0], [55.2, 227.0], [55.3, 228.0], [55.4, 228.0], [55.5, 228.0], [55.6, 228.0], [55.7, 228.0], [55.8, 228.0], [55.9, 231.0], [56.0, 231.0], [56.1, 232.0], [56.2, 232.0], [56.3, 232.0], [56.4, 232.0], [56.5, 233.0], [56.6, 233.0], [56.7, 233.0], [56.8, 233.0], [56.9, 234.0], [57.0, 234.0], [57.1, 234.0], [57.2, 234.0], [57.3, 234.0], [57.4, 234.0], [57.5, 235.0], [57.6, 235.0], [57.7, 235.0], [57.8, 235.0], [57.9, 235.0], [58.0, 235.0], [58.1, 235.0], [58.2, 235.0], [58.3, 236.0], [58.4, 236.0], [58.5, 236.0], [58.6, 236.0], [58.7, 236.0], [58.8, 236.0], [58.9, 237.0], [59.0, 237.0], [59.1, 237.0], [59.2, 237.0], [59.3, 238.0], [59.4, 238.0], [59.5, 238.0], [59.6, 238.0], [59.7, 239.0], [59.8, 239.0], [59.9, 239.0], [60.0, 239.0], [60.1, 239.0], [60.2, 239.0], [60.3, 240.0], [60.4, 240.0], [60.5, 240.0], [60.6, 240.0], [60.7, 240.0], [60.8, 240.0], [60.9, 242.0], [61.0, 242.0], [61.1, 242.0], [61.2, 242.0], [61.3, 243.0], [61.4, 243.0], [61.5, 243.0], [61.6, 243.0], [61.7, 244.0], [61.8, 244.0], [61.9, 244.0], [62.0, 244.0], [62.1, 244.0], [62.2, 244.0], [62.3, 245.0], [62.4, 245.0], [62.5, 245.0], [62.6, 245.0], [62.7, 245.0], [62.8, 245.0], [62.9, 245.0], [63.0, 245.0], [63.1, 245.0], [63.2, 245.0], [63.3, 246.0], [63.4, 246.0], [63.5, 246.0], [63.6, 246.0], [63.7, 247.0], [63.8, 247.0], [63.9, 247.0], [64.0, 247.0], [64.1, 248.0], [64.2, 248.0], [64.3, 248.0], [64.4, 248.0], [64.5, 250.0], [64.6, 250.0], [64.7, 250.0], [64.8, 250.0], [64.9, 251.0], [65.0, 251.0], [65.1, 252.0], [65.2, 252.0], [65.3, 253.0], [65.4, 253.0], [65.5, 254.0], [65.6, 254.0], [65.7, 254.0], [65.8, 254.0], [65.9, 255.0], [66.0, 255.0], [66.1, 256.0], [66.2, 256.0], [66.3, 256.0], [66.4, 256.0], [66.5, 257.0], [66.6, 257.0], [66.7, 258.0], [66.8, 258.0], [66.9, 261.0], [67.0, 261.0], [67.1, 263.0], [67.2, 263.0], [67.3, 263.0], [67.4, 263.0], [67.5, 264.0], [67.6, 264.0], [67.7, 264.0], [67.8, 264.0], [67.9, 265.0], [68.0, 265.0], [68.1, 269.0], [68.2, 269.0], [68.3, 269.0], [68.4, 269.0], [68.5, 270.0], [68.6, 270.0], [68.7, 270.0], [68.8, 270.0], [68.9, 270.0], [69.0, 270.0], [69.1, 271.0], [69.2, 271.0], [69.3, 272.0], [69.4, 272.0], [69.5, 274.0], [69.6, 274.0], [69.7, 277.0], [69.8, 277.0], [69.9, 277.0], [70.0, 277.0], [70.1, 277.0], [70.2, 277.0], [70.3, 278.0], [70.4, 278.0], [70.5, 278.0], [70.6, 278.0], [70.7, 279.0], [70.8, 279.0], [70.9, 280.0], [71.0, 280.0], [71.1, 281.0], [71.2, 281.0], [71.3, 282.0], [71.4, 282.0], [71.5, 283.0], [71.6, 283.0], [71.7, 284.0], [71.8, 284.0], [71.9, 284.0], [72.0, 284.0], [72.1, 284.0], [72.2, 284.0], [72.3, 284.0], [72.4, 284.0], [72.5, 285.0], [72.6, 285.0], [72.7, 286.0], [72.8, 286.0], [72.9, 286.0], [73.0, 286.0], [73.1, 287.0], [73.2, 287.0], [73.3, 287.0], [73.4, 287.0], [73.5, 287.0], [73.6, 287.0], [73.7, 288.0], [73.8, 288.0], [73.9, 290.0], [74.0, 290.0], [74.1, 290.0], [74.2, 290.0], [74.3, 290.0], [74.4, 290.0], [74.5, 291.0], [74.6, 291.0], [74.7, 291.0], [74.8, 291.0], [74.9, 292.0], [75.0, 292.0], [75.1, 292.0], [75.2, 292.0], [75.3, 292.0], [75.4, 292.0], [75.5, 296.0], [75.6, 296.0], [75.7, 297.0], [75.8, 297.0], [75.9, 304.0], [76.0, 304.0], [76.1, 305.0], [76.2, 305.0], [76.3, 306.0], [76.4, 306.0], [76.5, 307.0], [76.6, 307.0], [76.7, 308.0], [76.8, 308.0], [76.9, 309.0], [77.0, 309.0], [77.1, 310.0], [77.2, 310.0], [77.3, 311.0], [77.4, 311.0], [77.5, 312.0], [77.6, 312.0], [77.7, 314.0], [77.8, 314.0], [77.9, 316.0], [78.0, 316.0], [78.1, 316.0], [78.2, 316.0], [78.3, 323.0], [78.4, 323.0], [78.5, 324.0], [78.6, 324.0], [78.7, 325.0], [78.8, 325.0], [78.9, 327.0], [79.0, 327.0], [79.1, 338.0], [79.2, 338.0], [79.3, 339.0], [79.4, 339.0], [79.5, 339.0], [79.6, 339.0], [79.7, 340.0], [79.8, 340.0], [79.9, 349.0], [80.0, 349.0], [80.1, 350.0], [80.2, 350.0], [80.3, 353.0], [80.4, 353.0], [80.5, 356.0], [80.6, 356.0], [80.7, 357.0], [80.8, 357.0], [80.9, 358.0], [81.0, 358.0], [81.1, 361.0], [81.2, 361.0], [81.3, 362.0], [81.4, 362.0], [81.5, 363.0], [81.6, 363.0], [81.7, 363.0], [81.8, 363.0], [81.9, 364.0], [82.0, 364.0], [82.1, 364.0], [82.2, 364.0], [82.3, 365.0], [82.4, 365.0], [82.5, 367.0], [82.6, 367.0], [82.7, 370.0], [82.8, 370.0], [82.9, 371.0], [83.0, 371.0], [83.1, 372.0], [83.2, 372.0], [83.3, 372.0], [83.4, 372.0], [83.5, 374.0], [83.6, 374.0], [83.7, 376.0], [83.8, 376.0], [83.9, 377.0], [84.0, 377.0], [84.1, 381.0], [84.2, 381.0], [84.3, 383.0], [84.4, 383.0], [84.5, 385.0], [84.6, 385.0], [84.7, 388.0], [84.8, 388.0], [84.9, 389.0], [85.0, 389.0], [85.1, 391.0], [85.2, 391.0], [85.3, 394.0], [85.4, 394.0], [85.5, 396.0], [85.6, 396.0], [85.7, 403.0], [85.8, 403.0], [85.9, 403.0], [86.0, 403.0], [86.1, 405.0], [86.2, 405.0], [86.3, 405.0], [86.4, 405.0], [86.5, 406.0], [86.6, 406.0], [86.7, 408.0], [86.8, 408.0], [86.9, 412.0], [87.0, 412.0], [87.1, 413.0], [87.2, 413.0], [87.3, 413.0], [87.4, 413.0], [87.5, 414.0], [87.6, 414.0], [87.7, 416.0], [87.8, 416.0], [87.9, 417.0], [88.0, 417.0], [88.1, 417.0], [88.2, 417.0], [88.3, 421.0], [88.4, 421.0], [88.5, 422.0], [88.6, 422.0], [88.7, 423.0], [88.8, 423.0], [88.9, 426.0], [89.0, 426.0], [89.1, 426.0], [89.2, 426.0], [89.3, 427.0], [89.4, 427.0], [89.5, 431.0], [89.6, 431.0], [89.7, 434.0], [89.8, 434.0], [89.9, 434.0], [90.0, 434.0], [90.1, 435.0], [90.2, 435.0], [90.3, 436.0], [90.4, 436.0], [90.5, 436.0], [90.6, 436.0], [90.7, 437.0], [90.8, 437.0], [90.9, 439.0], [91.0, 439.0], [91.1, 439.0], [91.2, 439.0], [91.3, 441.0], [91.4, 441.0], [91.5, 442.0], [91.6, 442.0], [91.7, 444.0], [91.8, 444.0], [91.9, 445.0], [92.0, 445.0], [92.1, 445.0], [92.2, 445.0], [92.3, 447.0], [92.4, 447.0], [92.5, 449.0], [92.6, 449.0], [92.7, 451.0], [92.8, 451.0], [92.9, 451.0], [93.0, 451.0], [93.1, 452.0], [93.2, 452.0], [93.3, 452.0], [93.4, 452.0], [93.5, 453.0], [93.6, 453.0], [93.7, 457.0], [93.8, 457.0], [93.9, 457.0], [94.0, 457.0], [94.1, 457.0], [94.2, 457.0], [94.3, 458.0], [94.4, 458.0], [94.5, 461.0], [94.6, 461.0], [94.7, 462.0], [94.8, 462.0], [94.9, 465.0], [95.0, 465.0], [95.1, 467.0], [95.2, 467.0], [95.3, 469.0], [95.4, 469.0], [95.5, 471.0], [95.6, 471.0], [95.7, 471.0], [95.8, 471.0], [95.9, 471.0], [96.0, 471.0], [96.1, 471.0], [96.2, 471.0], [96.3, 473.0], [96.4, 473.0], [96.5, 475.0], [96.6, 475.0], [96.7, 475.0], [96.8, 475.0], [96.9, 477.0], [97.0, 477.0], [97.1, 477.0], [97.2, 477.0], [97.3, 477.0], [97.4, 477.0], [97.5, 479.0], [97.6, 479.0], [97.7, 479.0], [97.8, 479.0], [97.9, 481.0], [98.0, 481.0], [98.1, 484.0], [98.2, 484.0], [98.3, 490.0], [98.4, 490.0], [98.5, 491.0], [98.6, 491.0], [98.7, 493.0], [98.8, 493.0], [98.9, 496.0], [99.0, 496.0], [99.1, 496.0], [99.2, 496.0], [99.3, 504.0], [99.4, 504.0], [99.5, 514.0], [99.6, 514.0], [99.7, 690.0], [99.8, 690.0], [99.9, 724.0], [100.0, 724.0]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 248.0, "series": [{"data": [[600.0, 11.0], [700.0, 10.0], [800.0, 49.0], [900.0, 48.0], [1000.0, 11.0], [1100.0, 31.0], [1200.0, 8.0], [1300.0, 13.0], [1400.0, 33.0], [1500.0, 13.0], [1600.0, 13.0], [1700.0, 27.0], [1800.0, 20.0], [1900.0, 8.0], [2000.0, 19.0], [2100.0, 8.0], [2200.0, 30.0], [2300.0, 8.0], [2400.0, 4.0], [2500.0, 15.0], [2600.0, 30.0], [2700.0, 8.0], [2800.0, 1.0], [2900.0, 1.0], [3000.0, 11.0], [3100.0, 13.0], [3200.0, 9.0], [3300.0, 9.0], [3400.0, 16.0], [3500.0, 1.0], [3600.0, 1.0], [3700.0, 4.0], [3800.0, 5.0], [3900.0, 3.0], [4000.0, 1.0], [500.0, 8.0]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[0.0, 18.0], [600.0, 38.0], [700.0, 15.0], [200.0, 54.0], [800.0, 41.0], [900.0, 16.0], [1000.0, 11.0], [1100.0, 9.0], [300.0, 9.0], [1200.0, 8.0], [1300.0, 9.0], [1400.0, 3.0], [1500.0, 1.0], [100.0, 248.0], [400.0, 10.0], [1600.0, 1.0], [500.0, 9.0]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[0.0, 5.0], [300.0, 49.0], [600.0, 1.0], [700.0, 1.0], [100.0, 203.0], [200.0, 171.0], [400.0, 68.0], [500.0, 2.0]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 279.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 835.0, "series": [{"data": [[0.0, 835.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 386.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 279.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 77.32180851063822, "minX": 1.69851822E12, "maxY": 174.05693950177937, "series": [{"data": [[1.69851828E12, 77.32180851063822], [1.69851822E12, 174.05693950177937]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851828E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 92.5, "minX": 1.0, "maxY": 4003.0, "series": [{"data": [[35.0, 3976.0], [34.0, 4003.0], [37.0, 3901.0], [36.0, 3921.0], [42.0, 3879.0], [45.0, 3757.6666666666665], [44.0, 3830.75], [47.0, 3644.0], [52.0, 3512.0], [55.0, 3484.0], [54.0, 3478.75], [56.0, 3479.0], [58.0, 3445.0], [61.0, 3423.0], [63.0, 3408.0], [62.0, 3430.3333333333335], [67.0, 3391.0], [65.0, 3395.0], [70.0, 3316.0], [69.0, 3348.0], [72.0, 3321.5], [77.0, 1888.5], [76.0, 3274.75], [81.0, 568.0], [82.0, 1230.25], [83.0, 1246.25], [80.0, 3217.5], [84.0, 601.0], [87.0, 3125.0], [86.0, 3121.5], [91.0, 674.0], [92.0, 1496.0], [93.0, 1298.75], [94.0, 1486.3333333333335], [99.0, 3064.0], [96.0, 3096.1666666666665], [100.0, 742.0], [101.0, 1531.3333333333335], [102.0, 783.0], [103.0, 1344.5], [104.0, 1913.25], [107.0, 2967.0], [106.0, 3029.3333333333335], [108.0, 1871.0], [109.0, 806.5], [111.0, 816.0], [110.0, 2702.0], [113.0, 1566.2], [114.0, 799.0], [115.0, 2322.2], [119.0, 829.5], [118.0, 2719.0], [116.0, 2720.0], [120.0, 1754.5], [121.0, 2062.6666666666665], [123.0, 847.0], [124.0, 832.3333333333334], [125.0, 2384.833333333333], [126.0, 828.0], [127.0, 826.0], [130.0, 1309.5], [131.0, 1755.3333333333335], [133.0, 2215.25], [134.0, 841.5], [135.0, 2686.0], [128.0, 2702.0], [137.0, 853.0], [138.0, 1583.0], [139.0, 852.75], [140.0, 1915.8], [141.0, 859.0], [142.0, 1443.0], [143.0, 1439.0], [136.0, 2672.0], [144.0, 867.0], [145.0, 883.5], [147.0, 1243.2], [146.0, 904.0], [148.0, 1774.5], [150.0, 1355.875], [151.0, 1060.4117647058824], [149.0, 940.25], [152.0, 1290.2], [156.0, 1539.3333333333333], [155.0, 1030.3333333333333], [159.0, 1577.1666666666667], [158.0, 2582.0], [162.0, 1186.5], [161.0, 1426.0714285714287], [160.0, 1381.909090909091], [163.0, 1440.6], [164.0, 1190.5], [166.0, 1226.5], [165.0, 1219.0], [167.0, 2387.0], [168.0, 1836.0], [173.0, 1296.0], [175.0, 1651.3333333333333], [174.0, 1328.5], [172.0, 2391.0], [171.0, 2392.0], [170.0, 2402.5], [176.0, 1803.5], [177.0, 1808.0], [180.0, 1398.75], [183.0, 1653.0], [181.0, 1935.8], [182.0, 1686.6666666666667], [178.0, 2303.0], [184.0, 1559.7142857142858], [185.0, 1439.0], [188.0, 1550.4285714285713], [189.0, 1646.3999999999999], [191.0, 2237.0], [187.0, 2248.4], [186.0, 2243.0], [192.0, 1875.5], [195.0, 1906.8333333333335], [199.0, 1617.3333333333333], [198.0, 1714.5], [197.0, 1627.0], [194.0, 2244.5], [193.0, 2254.0], [201.0, 1631.6666666666667], [202.0, 2056.5], [200.0, 1616.0], [204.0, 2005.0], [207.0, 1706.5], [206.0, 2136.0], [205.0, 2163.0], [203.0, 2173.5], [211.0, 1792.4444444444443], [213.0, 1932.4], [209.0, 1747.5], [208.0, 1743.3333333333333], [212.0, 1754.4], [210.0, 1885.9999999999998], [215.0, 2056.0], [214.0, 2062.0], [217.0, 1848.0], [218.0, 1845.2], [220.0, 1930.8], [219.0, 1925.142857142857], [223.0, 1896.0], [222.0, 1961.0], [221.0, 2011.0], [224.0, 1963.75], [230.0, 2008.3333333333333], [229.0, 2000.5], [227.0, 1990.0]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[151.4119999999999, 1828.856000000001]], "isOverall": false, "label": "Express Js Http Call-Aggregated", "isController": false}, {"data": [[3.0, 979.0], [5.0, 1278.5], [6.0, 1312.5], [16.0, 1368.0], [24.0, 1449.0], [26.0, 584.25], [27.0, 377.0], [30.0, 772.3333333333333], [31.0, 1584.0], [33.0, 310.0], [35.0, 291.0], [34.0, 801.25], [36.0, 290.0], [41.0, 324.0], [42.0, 424.0], [45.0, 376.5], [44.0, 776.8], [51.0, 1118.0], [50.0, 231.0], [52.0, 493.66666666666663], [55.0, 143.0], [54.0, 160.0], [56.0, 152.0], [59.0, 158.5], [58.0, 1319.5], [61.0, 692.0], [63.0, 182.0], [62.0, 213.0], [67.0, 631.0], [72.0, 198.5], [77.0, 243.0], [76.0, 728.25], [83.0, 175.0], [86.0, 103.5], [87.0, 589.5], [85.0, 794.0], [84.0, 190.0], [91.0, 103.0], [90.0, 145.0], [94.0, 1073.0], [93.0, 776.2], [98.0, 232.0], [96.0, 180.5], [101.0, 279.5], [102.0, 112.0], [106.0, 688.0], [104.0, 437.5], [111.0, 115.0], [110.0, 114.0], [109.0, 899.0], [108.0, 651.0], [113.0, 118.2], [112.0, 116.0], [119.0, 468.5], [116.0, 1025.5], [120.0, 92.5], [121.0, 109.0], [125.0, 429.33333333333337], [130.0, 131.0], [132.0, 341.5], [133.0, 425.0], [134.0, 591.0], [135.0, 150.0], [131.0, 956.5], [129.0, 374.3333333333333], [128.0, 109.5], [138.0, 253.5], [139.0, 343.75], [140.0, 527.8333333333333], [141.0, 289.3333333333333], [143.0, 115.66666666666667], [137.0, 589.0], [136.0, 1061.0], [144.0, 625.25], [145.0, 651.5], [146.0, 252.5], [147.0, 288.3], [148.0, 532.1111111111111], [149.0, 384.0], [150.0, 378.6206896551725], [151.0, 227.92857142857142], [152.0, 226.0], [153.0, 102.0], [155.0, 155.5], [156.0, 531.75], [159.0, 137.25], [158.0, 551.3333333333334], [162.0, 257.29999999999995], [161.0, 253.1818181818182], [160.0, 316.4285714285714], [163.0, 314.8888888888889], [165.0, 474.0], [164.0, 120.0], [167.0, 181.5], [169.0, 808.0], [174.0, 209.66666666666666], [175.0, 295.8], [173.0, 957.0], [171.0, 198.0], [170.0, 214.0], [168.0, 548.5], [176.0, 467.25], [178.0, 237.0], [177.0, 118.0], [183.0, 320.42857142857144], [182.0, 393.66666666666663], [181.0, 244.33333333333331], [184.0, 356.6], [185.0, 482.5], [189.0, 223.7142857142857], [187.0, 603.6666666666666], [188.0, 357.3333333333333], [190.0, 364.83333333333337], [191.0, 106.0], [186.0, 103.0], [192.0, 106.0], [194.0, 867.0], [195.0, 167.33333333333334], [199.0, 515.8333333333334], [198.0, 148.75], [197.0, 184.0], [193.0, 141.5], [200.0, 784.0], [201.0, 285.0], [202.0, 197.0], [204.0, 378.3333333333333], [207.0, 819.0], [206.0, 602.6666666666666], [205.0, 200.0], [203.0, 243.0], [211.0, 300.7777777777777], [212.0, 144.33333333333334], [213.0, 315.0], [210.0, 152.66666666666666], [208.0, 649.25], [209.0, 418.6], [214.0, 805.0], [215.0, 158.5], [217.0, 173.5], [218.0, 437.6], [219.0, 261.4285714285714], [220.0, 274.3333333333333], [223.0, 139.0], [222.0, 146.0], [224.0, 100.0], [231.0, 556.0], [230.0, 207.33333333333334], [229.0, 778.0], [227.0, 161.5], [233.0, 571.0]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[149.21599999999998, 394.4799999999997]], "isOverall": false, "label": "Gin Gonic Http Call-Aggregated", "isController": false}, {"data": [[2.0, 100.0], [3.0, 125.0], [4.0, 143.0], [5.0, 138.0], [6.0, 132.0], [7.0, 219.0], [8.0, 134.0], [9.0, 208.0], [10.0, 133.0], [11.0, 130.0], [12.0, 116.0], [13.0, 111.0], [14.0, 109.0], [15.0, 153.0], [16.0, 112.0], [17.0, 129.0], [18.0, 128.0], [19.0, 123.0], [20.0, 195.0], [21.0, 291.0], [23.0, 272.5], [24.0, 283.0], [26.0, 304.5], [27.0, 316.0], [29.0, 396.0], [30.0, 412.0], [31.0, 431.0], [33.0, 381.0], [32.0, 364.0], [35.0, 290.0], [34.0, 307.0], [37.0, 408.0], [36.0, 292.0], [39.0, 405.0], [38.0, 434.0], [41.0, 435.0], [40.0, 385.0], [43.0, 471.0], [42.0, 477.0], [45.0, 416.0], [44.0, 496.0], [47.0, 265.0], [46.0, 362.0], [49.0, 280.0], [51.0, 231.0], [50.0, 290.0], [52.0, 237.0], [55.0, 144.0], [54.0, 167.0], [56.0, 140.0], [59.0, 156.0], [58.0, 166.0], [61.0, 142.5], [63.0, 205.0], [62.0, 213.0], [67.0, 223.0], [65.0, 217.0], [64.0, 219.0], [70.0, 264.0], [69.0, 214.5], [73.0, 219.0], [72.0, 239.5], [79.0, 219.0], [78.0, 220.0], [77.0, 254.0], [76.0, 253.33333333333334], [83.0, 186.0], [82.0, 196.0], [81.0, 195.0], [80.0, 218.0], [87.0, 106.0], [86.0, 133.0], [85.0, 172.5], [91.0, 201.0], [90.0, 155.0], [94.0, 209.0], [93.0, 232.0], [92.0, 195.0], [99.0, 457.0], [98.0, 243.5], [96.0, 238.0], [103.0, 453.0], [102.0, 457.0], [101.0, 471.0], [104.0, 313.5], [106.0, 436.5], [108.0, 291.6666666666667], [110.0, 120.0], [109.0, 309.0], [115.0, 129.0], [114.0, 117.0], [113.0, 118.0], [112.0, 123.5], [119.0, 112.0], [118.0, 130.5], [116.0, 120.0], [120.0, 155.5], [121.0, 101.0], [125.0, 193.0], [127.0, 117.0], [126.0, 132.0], [124.0, 141.66666666666666], [128.0, 158.0], [130.0, 113.0], [131.0, 160.0], [135.0, 160.5], [133.0, 147.0], [132.0, 158.0], [129.0, 118.0], [138.0, 119.5], [140.0, 145.0], [141.0, 128.66666666666666], [139.0, 116.0], [143.0, 149.0], [142.0, 179.0], [137.0, 151.0], [136.0, 159.0], [145.0, 120.0], [146.0, 170.25], [147.0, 159.0], [148.0, 160.5], [150.0, 217.33333333333331], [151.0, 250.8947368421053], [149.0, 204.0], [144.0, 163.0], [152.0, 276.50000000000006], [153.0, 339.0], [156.0, 319.0], [155.0, 216.25], [159.0, 370.5], [158.0, 269.0], [157.0, 270.0], [154.0, 164.0], [160.0, 424.7], [162.0, 439.33333333333337], [161.0, 441.5333333333333], [163.0, 380.83333333333337], [164.0, 383.55555555555554], [166.0, 342.3333333333333], [165.0, 320.5], [167.0, 184.5], [174.0, 340.5], [175.0, 366.2], [173.0, 250.0], [172.0, 193.0], [171.0, 198.0], [170.0, 208.0], [168.0, 191.0], [176.0, 321.6666666666667], [178.0, 296.5], [177.0, 354.4], [181.0, 251.6], [183.0, 329.4], [182.0, 359.7142857142857], [184.0, 264.5], [186.0, 238.5], [185.0, 227.33333333333334], [189.0, 205.09090909090912], [188.0, 172.16666666666669], [191.0, 182.25], [190.0, 147.25], [187.0, 101.0], [192.0, 147.5], [195.0, 198.5], [199.0, 187.14285714285714], [198.0, 222.5], [197.0, 200.5], [194.0, 142.0], [193.0, 148.0], [200.0, 222.0], [201.0, 223.25], [202.0, 235.5], [206.0, 197.5], [205.0, 217.0], [204.0, 199.0], [203.0, 246.0], [213.0, 216.0], [211.0, 180.625], [210.0, 225.09999999999997], [208.0, 181.66666666666666], [212.0, 196.42857142857144], [214.0, 211.0], [215.0, 174.0], [209.0, 163.0], [219.0, 208.71428571428572], [220.0, 184.75], [218.0, 201.66666666666666], [223.0, 181.83333333333331], [221.0, 152.33333333333334], [222.0, 103.0], [224.0, 224.0], [231.0, 214.0], [230.0, 218.0], [229.0, 213.0], [228.0, 214.0], [227.0, 218.0], [226.0, 170.0], [225.0, 171.0], [233.0, 248.66666666666666], [1.0, 106.0]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}, {"data": [[148.80200000000002, 245.0680000000001]], "isOverall": false, "label": "Spring Boot Http Call-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 233.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 846.0, "minX": 1.69851822E12, "maxY": 341587.43333333335, "series": [{"data": [[1.69851828E12, 113620.9], [1.69851822E12, 341587.43333333335]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69851828E12, 846.0], [1.69851822E12, 2529.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851828E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 227.12857142857146, "minX": 1.69851822E12, "maxY": 3167.8, "series": [{"data": [[1.69851828E12, 3167.8], [1.69851822E12, 1472.9341772151904]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[1.69851828E12, 568.381679389313], [1.69851822E12, 332.742547425474]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[1.69851828E12, 227.12857142857146], [1.69851822E12, 252.04444444444468]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851828E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 226.9285714285714, "minX": 1.69851822E12, "maxY": 3167.714285714286, "series": [{"data": [[1.69851828E12, 3167.714285714286], [1.69851822E12, 1472.7949367088609]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[1.69851828E12, 568.259541984733], [1.69851822E12, 332.4850948509485]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[1.69851828E12, 226.9285714285714], [1.69851822E12, 251.7472222222223]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851828E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.9770992366412214, "minX": 1.69851822E12, "maxY": 4.982278481012653, "series": [{"data": [[1.69851828E12, 1.1619047619047624], [1.69851822E12, 4.982278481012653]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[1.69851828E12, 0.9770992366412214], [1.69851822E12, 1.192411924119241]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[1.69851828E12, 1.1071428571428579], [1.69851822E12, 1.2138888888888884]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851828E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 88.0, "minX": 1.69851822E12, "maxY": 4003.0, "series": [{"data": [[1.69851828E12, 4003.0], [1.69851822E12, 2636.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69851828E12, 3323.5], [1.69851822E12, 1853.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69851828E12, 3911.810000000001], [1.69851822E12, 2578.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69851828E12, 3479.3], [1.69851822E12, 2243.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69851828E12, 88.0], [1.69851822E12, 93.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69851828E12, 363.0], [1.69851822E12, 403.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851828E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 140.5, "minX": 8.0, "maxY": 686.5, "series": [{"data": [[133.0, 264.0], [8.0, 140.5], [148.0, 436.5], [170.0, 233.0], [87.0, 388.0], [179.0, 245.0], [198.0, 446.0], [214.0, 236.5], [108.0, 686.5], [255.0, 406.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 255.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 140.5, "minX": 8.0, "maxY": 686.5, "series": [{"data": [[133.0, 264.0], [8.0, 140.5], [148.0, 436.5], [170.0, 232.5], [87.0, 388.0], [179.0, 245.0], [198.0, 446.0], [214.0, 236.5], [108.0, 686.5], [255.0, 405.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 255.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 3.933333333333333, "minX": 1.69851822E12, "maxY": 21.066666666666666, "series": [{"data": [[1.69851828E12, 3.933333333333333], [1.69851822E12, 21.066666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851828E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 6.266666666666667, "minX": 1.69851822E12, "maxY": 18.733333333333334, "series": [{"data": [[1.69851828E12, 6.266666666666667], [1.69851822E12, 18.733333333333334]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851828E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.75, "minX": 1.69851822E12, "maxY": 6.583333333333333, "series": [{"data": [[1.69851828E12, 2.183333333333333], [1.69851822E12, 6.15]], "isOverall": false, "label": "Gin Gonic Http Call-success", "isController": false}, {"data": [[1.69851828E12, 2.3333333333333335], [1.69851822E12, 6.0]], "isOverall": false, "label": "Spring Boot Http Call-success", "isController": false}, {"data": [[1.69851828E12, 1.75], [1.69851822E12, 6.583333333333333]], "isOverall": false, "label": "Express Js Http Call-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851828E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 6.266666666666667, "minX": 1.69851822E12, "maxY": 18.733333333333334, "series": [{"data": [[1.69851828E12, 6.266666666666667], [1.69851822E12, 18.733333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851828E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}


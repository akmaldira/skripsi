/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 88.0, "minX": 0.0, "maxY": 4256.0, "series": [{"data": [[0.0, 522.0], [0.1, 580.0], [0.2, 580.0], [0.3, 580.0], [0.4, 652.0], [0.5, 655.0], [0.6, 668.0], [0.7, 675.0], [0.8, 739.0], [0.9, 743.0], [1.0, 761.0], [1.1, 767.0], [1.2, 805.0], [1.3, 823.0], [1.4, 823.0], [1.5, 846.0], [1.6, 855.0], [1.7, 899.0], [1.8, 949.0], [1.9, 952.0], [2.0, 964.0], [2.1, 976.0], [2.2, 978.0], [2.3, 999.0], [2.4, 1028.0], [2.5, 1032.0], [2.6, 1035.0], [2.7, 1036.0], [2.8, 1037.0], [2.9, 1086.0], [3.0, 1087.0], [3.1, 1087.0], [3.2, 1092.0], [3.3, 1163.0], [3.4, 1165.0], [3.5, 1176.0], [3.6, 1177.0], [3.7, 1231.0], [3.8, 1242.0], [3.9, 1243.0], [4.0, 1294.0], [4.1, 1304.0], [4.2, 1304.0], [4.3, 1354.0], [4.4, 1357.0], [4.5, 1363.0], [4.6, 1372.0], [4.7, 1411.0], [4.8, 1415.0], [4.9, 1429.0], [5.0, 1430.0], [5.1, 1430.0], [5.2, 1456.0], [5.3, 1457.0], [5.4, 1469.0], [5.5, 1475.0], [5.6, 1477.0], [5.7, 1481.0], [5.8, 1486.0], [5.9, 1490.0], [6.0, 1491.0], [6.1, 1493.0], [6.2, 1493.0], [6.3, 1498.0], [6.4, 1499.0], [6.5, 1500.0], [6.6, 1500.0], [6.7, 1502.0], [6.8, 1505.0], [6.9, 1505.0], [7.0, 1509.0], [7.1, 1516.0], [7.2, 1522.0], [7.3, 1536.0], [7.4, 1540.0], [7.5, 1548.0], [7.6, 1550.0], [7.7, 1553.0], [7.8, 1558.0], [7.9, 1561.0], [8.0, 1572.0], [8.1, 1588.0], [8.2, 1589.0], [8.3, 1589.0], [8.4, 1594.0], [8.5, 1601.0], [8.6, 1604.0], [8.7, 1609.0], [8.8, 1613.0], [8.9, 1616.0], [9.0, 1619.0], [9.1, 1624.0], [9.2, 1625.0], [9.3, 1627.0], [9.4, 1628.0], [9.5, 1630.0], [9.6, 1636.0], [9.7, 1636.0], [9.8, 1639.0], [9.9, 1641.0], [10.0, 1642.0], [10.1, 1645.0], [10.2, 1647.0], [10.3, 1648.0], [10.4, 1649.0], [10.5, 1652.0], [10.6, 1655.0], [10.7, 1660.0], [10.8, 1660.0], [10.9, 1667.0], [11.0, 1668.0], [11.1, 1669.0], [11.2, 1675.0], [11.3, 1702.0], [11.4, 1710.0], [11.5, 1726.0], [11.6, 1743.0], [11.7, 1781.0], [11.8, 1789.0], [11.9, 1809.0], [12.0, 1821.0], [12.1, 1823.0], [12.2, 1829.0], [12.3, 1856.0], [12.4, 1858.0], [12.5, 1868.0], [12.6, 1875.0], [12.7, 1909.0], [12.8, 1922.0], [12.9, 1954.0], [13.0, 1955.0], [13.1, 1955.0], [13.2, 1957.0], [13.3, 1969.0], [13.4, 1970.0], [13.5, 1975.0], [13.6, 1983.0], [13.7, 1999.0], [13.8, 2010.0], [13.9, 2030.0], [14.0, 2031.0], [14.1, 2057.0], [14.2, 2058.0], [14.3, 2064.0], [14.4, 2075.0], [14.5, 2082.0], [14.6, 2091.0], [14.7, 2092.0], [14.8, 2102.0], [14.9, 2127.0], [15.0, 2182.0], [15.1, 2191.0], [15.2, 2197.0], [15.3, 2267.0], [15.4, 2272.0], [15.5, 2289.0], [15.6, 2291.0], [15.7, 2295.0], [15.8, 2297.0], [15.9, 2327.0], [16.0, 2341.0], [16.1, 2346.0], [16.2, 2348.0], [16.3, 2417.0], [16.4, 2420.0], [16.5, 2428.0], [16.6, 2437.0], [16.7, 2440.0], [16.8, 2444.0], [16.9, 2446.0], [17.0, 2477.0], [17.1, 2480.0], [17.2, 2501.0], [17.3, 2506.0], [17.4, 2511.0], [17.5, 2512.0], [17.6, 2513.0], [17.7, 2515.0], [17.8, 2526.0], [17.9, 2536.0], [18.0, 2541.0], [18.1, 2541.0], [18.2, 2541.0], [18.3, 2544.0], [18.4, 2547.0], [18.5, 2551.0], [18.6, 2551.0], [18.7, 2552.0], [18.8, 2555.0], [18.9, 2558.0], [19.0, 2559.0], [19.1, 2559.0], [19.2, 2561.0], [19.3, 2562.0], [19.4, 2562.0], [19.5, 2565.0], [19.6, 2566.0], [19.7, 2567.0], [19.8, 2567.0], [19.9, 2567.0], [20.0, 2575.0], [20.1, 2582.0], [20.2, 2587.0], [20.3, 2604.0], [20.4, 2606.0], [20.5, 2608.0], [20.6, 2608.0], [20.7, 2610.0], [20.8, 2610.0], [20.9, 2611.0], [21.0, 2611.0], [21.1, 2625.0], [21.2, 2630.0], [21.3, 2630.0], [21.4, 2631.0], [21.5, 2632.0], [21.6, 2637.0], [21.7, 2639.0], [21.8, 2640.0], [21.9, 2640.0], [22.0, 2642.0], [22.1, 2642.0], [22.2, 2646.0], [22.3, 2646.0], [22.4, 2650.0], [22.5, 2651.0], [22.6, 2652.0], [22.7, 2652.0], [22.8, 2653.0], [22.9, 2654.0], [23.0, 2655.0], [23.1, 2657.0], [23.2, 2665.0], [23.3, 2665.0], [23.4, 2666.0], [23.5, 2674.0], [23.6, 2674.0], [23.7, 2683.0], [23.8, 2690.0], [23.9, 2690.0], [24.0, 2715.0], [24.1, 2719.0], [24.2, 2728.0], [24.3, 2734.0], [24.4, 2735.0], [24.5, 2737.0], [24.6, 2739.0], [24.7, 2739.0], [24.8, 2742.0], [24.9, 2742.0], [25.0, 2744.0], [25.1, 2748.0], [25.2, 2749.0], [25.3, 2750.0], [25.4, 2762.0], [25.5, 2762.0], [25.6, 2765.0], [25.7, 2773.0], [25.8, 2773.0], [25.9, 2773.0], [26.0, 2774.0], [26.1, 2777.0], [26.2, 2778.0], [26.3, 2778.0], [26.4, 2778.0], [26.5, 2782.0], [26.6, 2783.0], [26.7, 2784.0], [26.8, 2785.0], [26.9, 2791.0], [27.0, 2793.0], [27.1, 2793.0], [27.2, 2794.0], [27.3, 2794.0], [27.4, 2800.0], [27.5, 2804.0], [27.6, 2807.0], [27.7, 2807.0], [27.8, 2807.0], [27.9, 2809.0], [28.0, 2811.0], [28.1, 2811.0], [28.2, 2816.0], [28.3, 2816.0], [28.4, 2817.0], [28.5, 2819.0], [28.6, 2820.0], [28.7, 2821.0], [28.8, 2822.0], [28.9, 2824.0], [29.0, 2827.0], [29.1, 2830.0], [29.2, 2837.0], [29.3, 2838.0], [29.4, 2842.0], [29.5, 2851.0], [29.6, 2851.0], [29.7, 2854.0], [29.8, 2855.0], [29.9, 2856.0], [30.0, 2857.0], [30.1, 2858.0], [30.2, 2858.0], [30.3, 2862.0], [30.4, 2864.0], [30.5, 2864.0], [30.6, 2865.0], [30.7, 2865.0], [30.8, 2866.0], [30.9, 2866.0], [31.0, 2866.0], [31.1, 2868.0], [31.2, 2870.0], [31.3, 2871.0], [31.4, 2872.0], [31.5, 2873.0], [31.6, 2874.0], [31.7, 2875.0], [31.8, 2875.0], [31.9, 2876.0], [32.0, 2877.0], [32.1, 2878.0], [32.2, 2879.0], [32.3, 2880.0], [32.4, 2882.0], [32.5, 2883.0], [32.6, 2883.0], [32.7, 2883.0], [32.8, 2883.0], [32.9, 2884.0], [33.0, 2885.0], [33.1, 2885.0], [33.2, 2886.0], [33.3, 2886.0], [33.4, 2889.0], [33.5, 2891.0], [33.6, 2891.0], [33.7, 2895.0], [33.8, 2896.0], [33.9, 2900.0], [34.0, 2903.0], [34.1, 2904.0], [34.2, 2907.0], [34.3, 2910.0], [34.4, 2918.0], [34.5, 2919.0], [34.6, 2926.0], [34.7, 2929.0], [34.8, 2930.0], [34.9, 2935.0], [35.0, 2937.0], [35.1, 2943.0], [35.2, 2944.0], [35.3, 2948.0], [35.4, 2948.0], [35.5, 2951.0], [35.6, 2953.0], [35.7, 2955.0], [35.8, 2964.0], [35.9, 2974.0], [36.0, 2975.0], [36.1, 2981.0], [36.2, 2983.0], [36.3, 2988.0], [36.4, 2988.0], [36.5, 2991.0], [36.6, 3001.0], [36.7, 3003.0], [36.8, 3004.0], [36.9, 3008.0], [37.0, 3012.0], [37.1, 3014.0], [37.2, 3021.0], [37.3, 3022.0], [37.4, 3024.0], [37.5, 3027.0], [37.6, 3029.0], [37.7, 3030.0], [37.8, 3030.0], [37.9, 3032.0], [38.0, 3032.0], [38.1, 3033.0], [38.2, 3037.0], [38.3, 3037.0], [38.4, 3039.0], [38.5, 3039.0], [38.6, 3040.0], [38.7, 3041.0], [38.8, 3042.0], [38.9, 3043.0], [39.0, 3044.0], [39.1, 3047.0], [39.2, 3047.0], [39.3, 3049.0], [39.4, 3049.0], [39.5, 3052.0], [39.6, 3052.0], [39.7, 3056.0], [39.8, 3056.0], [39.9, 3057.0], [40.0, 3058.0], [40.1, 3065.0], [40.2, 3065.0], [40.3, 3069.0], [40.4, 3071.0], [40.5, 3075.0], [40.6, 3076.0], [40.7, 3077.0], [40.8, 3080.0], [40.9, 3081.0], [41.0, 3082.0], [41.1, 3092.0], [41.2, 3093.0], [41.3, 3101.0], [41.4, 3103.0], [41.5, 3106.0], [41.6, 3142.0], [41.7, 3145.0], [41.8, 3145.0], [41.9, 3152.0], [42.0, 3153.0], [42.1, 3153.0], [42.2, 3157.0], [42.3, 3159.0], [42.4, 3163.0], [42.5, 3164.0], [42.6, 3169.0], [42.7, 3169.0], [42.8, 3172.0], [42.9, 3175.0], [43.0, 3175.0], [43.1, 3177.0], [43.2, 3177.0], [43.3, 3178.0], [43.4, 3178.0], [43.5, 3185.0], [43.6, 3187.0], [43.7, 3188.0], [43.8, 3188.0], [43.9, 3190.0], [44.0, 3192.0], [44.1, 3192.0], [44.2, 3193.0], [44.3, 3194.0], [44.4, 3195.0], [44.5, 3196.0], [44.6, 3196.0], [44.7, 3205.0], [44.8, 3206.0], [44.9, 3207.0], [45.0, 3207.0], [45.1, 3209.0], [45.2, 3212.0], [45.3, 3214.0], [45.4, 3215.0], [45.5, 3217.0], [45.6, 3219.0], [45.7, 3221.0], [45.8, 3221.0], [45.9, 3221.0], [46.0, 3222.0], [46.1, 3229.0], [46.2, 3229.0], [46.3, 3230.0], [46.4, 3232.0], [46.5, 3233.0], [46.6, 3234.0], [46.7, 3235.0], [46.8, 3236.0], [46.9, 3237.0], [47.0, 3238.0], [47.1, 3241.0], [47.2, 3243.0], [47.3, 3244.0], [47.4, 3244.0], [47.5, 3248.0], [47.6, 3249.0], [47.7, 3250.0], [47.8, 3250.0], [47.9, 3251.0], [48.0, 3255.0], [48.1, 3255.0], [48.2, 3256.0], [48.3, 3260.0], [48.4, 3260.0], [48.5, 3264.0], [48.6, 3266.0], [48.7, 3266.0], [48.8, 3267.0], [48.9, 3268.0], [49.0, 3270.0], [49.1, 3271.0], [49.2, 3273.0], [49.3, 3273.0], [49.4, 3274.0], [49.5, 3275.0], [49.6, 3277.0], [49.7, 3278.0], [49.8, 3281.0], [49.9, 3284.0], [50.0, 3287.0], [50.1, 3288.0], [50.2, 3292.0], [50.3, 3302.0], [50.4, 3303.0], [50.5, 3304.0], [50.6, 3305.0], [50.7, 3306.0], [50.8, 3307.0], [50.9, 3308.0], [51.0, 3308.0], [51.1, 3309.0], [51.2, 3311.0], [51.3, 3312.0], [51.4, 3312.0], [51.5, 3312.0], [51.6, 3313.0], [51.7, 3314.0], [51.8, 3314.0], [51.9, 3315.0], [52.0, 3316.0], [52.1, 3318.0], [52.2, 3318.0], [52.3, 3320.0], [52.4, 3321.0], [52.5, 3322.0], [52.6, 3322.0], [52.7, 3324.0], [52.8, 3325.0], [52.9, 3326.0], [53.0, 3326.0], [53.1, 3327.0], [53.2, 3327.0], [53.3, 3329.0], [53.4, 3330.0], [53.5, 3331.0], [53.6, 3331.0], [53.7, 3332.0], [53.8, 3333.0], [53.9, 3334.0], [54.0, 3334.0], [54.1, 3335.0], [54.2, 3336.0], [54.3, 3337.0], [54.4, 3340.0], [54.5, 3342.0], [54.6, 3342.0], [54.7, 3343.0], [54.8, 3353.0], [54.9, 3354.0], [55.0, 3355.0], [55.1, 3363.0], [55.2, 3368.0], [55.3, 3371.0], [55.4, 3371.0], [55.5, 3373.0], [55.6, 3376.0], [55.7, 3377.0], [55.8, 3377.0], [55.9, 3378.0], [56.0, 3381.0], [56.1, 3384.0], [56.2, 3387.0], [56.3, 3388.0], [56.4, 3390.0], [56.5, 3397.0], [56.6, 3400.0], [56.7, 3404.0], [56.8, 3408.0], [56.9, 3417.0], [57.0, 3418.0], [57.1, 3420.0], [57.2, 3436.0], [57.3, 3440.0], [57.4, 3440.0], [57.5, 3442.0], [57.6, 3446.0], [57.7, 3449.0], [57.8, 3456.0], [57.9, 3457.0], [58.0, 3463.0], [58.1, 3469.0], [58.2, 3471.0], [58.3, 3472.0], [58.4, 3472.0], [58.5, 3479.0], [58.6, 3483.0], [58.7, 3486.0], [58.8, 3488.0], [58.9, 3490.0], [59.0, 3493.0], [59.1, 3495.0], [59.2, 3501.0], [59.3, 3502.0], [59.4, 3502.0], [59.5, 3503.0], [59.6, 3503.0], [59.7, 3505.0], [59.8, 3506.0], [59.9, 3507.0], [60.0, 3507.0], [60.1, 3508.0], [60.2, 3508.0], [60.3, 3508.0], [60.4, 3509.0], [60.5, 3510.0], [60.6, 3511.0], [60.7, 3514.0], [60.8, 3514.0], [60.9, 3514.0], [61.0, 3515.0], [61.1, 3516.0], [61.2, 3516.0], [61.3, 3516.0], [61.4, 3517.0], [61.5, 3517.0], [61.6, 3517.0], [61.7, 3518.0], [61.8, 3519.0], [61.9, 3520.0], [62.0, 3522.0], [62.1, 3523.0], [62.2, 3523.0], [62.3, 3524.0], [62.4, 3525.0], [62.5, 3525.0], [62.6, 3527.0], [62.7, 3533.0], [62.8, 3540.0], [62.9, 3542.0], [63.0, 3545.0], [63.1, 3548.0], [63.2, 3551.0], [63.3, 3554.0], [63.4, 3555.0], [63.5, 3561.0], [63.6, 3565.0], [63.7, 3572.0], [63.8, 3573.0], [63.9, 3576.0], [64.0, 3577.0], [64.1, 3578.0], [64.2, 3580.0], [64.3, 3581.0], [64.4, 3582.0], [64.5, 3582.0], [64.6, 3583.0], [64.7, 3584.0], [64.8, 3586.0], [64.9, 3586.0], [65.0, 3586.0], [65.1, 3594.0], [65.2, 3594.0], [65.3, 3601.0], [65.4, 3604.0], [65.5, 3606.0], [65.6, 3607.0], [65.7, 3608.0], [65.8, 3610.0], [65.9, 3612.0], [66.0, 3613.0], [66.1, 3613.0], [66.2, 3615.0], [66.3, 3616.0], [66.4, 3617.0], [66.5, 3617.0], [66.6, 3621.0], [66.7, 3623.0], [66.8, 3624.0], [66.9, 3627.0], [67.0, 3629.0], [67.1, 3629.0], [67.2, 3633.0], [67.3, 3633.0], [67.4, 3639.0], [67.5, 3640.0], [67.6, 3642.0], [67.7, 3642.0], [67.8, 3643.0], [67.9, 3646.0], [68.0, 3650.0], [68.1, 3652.0], [68.2, 3652.0], [68.3, 3653.0], [68.4, 3654.0], [68.5, 3656.0], [68.6, 3658.0], [68.7, 3658.0], [68.8, 3660.0], [68.9, 3660.0], [69.0, 3663.0], [69.1, 3666.0], [69.2, 3667.0], [69.3, 3669.0], [69.4, 3671.0], [69.5, 3671.0], [69.6, 3672.0], [69.7, 3674.0], [69.8, 3674.0], [69.9, 3674.0], [70.0, 3675.0], [70.1, 3676.0], [70.2, 3678.0], [70.3, 3679.0], [70.4, 3680.0], [70.5, 3681.0], [70.6, 3683.0], [70.7, 3683.0], [70.8, 3683.0], [70.9, 3684.0], [71.0, 3684.0], [71.1, 3685.0], [71.2, 3690.0], [71.3, 3691.0], [71.4, 3693.0], [71.5, 3695.0], [71.6, 3697.0], [71.7, 3698.0], [71.8, 3699.0], [71.9, 3699.0], [72.0, 3700.0], [72.1, 3700.0], [72.2, 3700.0], [72.3, 3702.0], [72.4, 3703.0], [72.5, 3703.0], [72.6, 3705.0], [72.7, 3705.0], [72.8, 3705.0], [72.9, 3706.0], [73.0, 3706.0], [73.1, 3709.0], [73.2, 3709.0], [73.3, 3709.0], [73.4, 3710.0], [73.5, 3710.0], [73.6, 3710.0], [73.7, 3711.0], [73.8, 3711.0], [73.9, 3712.0], [74.0, 3713.0], [74.1, 3713.0], [74.2, 3714.0], [74.3, 3715.0], [74.4, 3716.0], [74.5, 3717.0], [74.6, 3717.0], [74.7, 3718.0], [74.8, 3718.0], [74.9, 3718.0], [75.0, 3718.0], [75.1, 3719.0], [75.2, 3720.0], [75.3, 3720.0], [75.4, 3720.0], [75.5, 3721.0], [75.6, 3721.0], [75.7, 3721.0], [75.8, 3722.0], [75.9, 3723.0], [76.0, 3724.0], [76.1, 3725.0], [76.2, 3727.0], [76.3, 3728.0], [76.4, 3730.0], [76.5, 3733.0], [76.6, 3734.0], [76.7, 3744.0], [76.8, 3745.0], [76.9, 3746.0], [77.0, 3746.0], [77.1, 3748.0], [77.2, 3750.0], [77.3, 3750.0], [77.4, 3750.0], [77.5, 3750.0], [77.6, 3751.0], [77.7, 3752.0], [77.8, 3753.0], [77.9, 3753.0], [78.0, 3755.0], [78.1, 3756.0], [78.2, 3757.0], [78.3, 3758.0], [78.4, 3758.0], [78.5, 3759.0], [78.6, 3760.0], [78.7, 3760.0], [78.8, 3760.0], [78.9, 3761.0], [79.0, 3763.0], [79.1, 3764.0], [79.2, 3764.0], [79.3, 3765.0], [79.4, 3765.0], [79.5, 3765.0], [79.6, 3767.0], [79.7, 3767.0], [79.8, 3768.0], [79.9, 3768.0], [80.0, 3769.0], [80.1, 3771.0], [80.2, 3773.0], [80.3, 3774.0], [80.4, 3776.0], [80.5, 3778.0], [80.6, 3783.0], [80.7, 3784.0], [80.8, 3784.0], [80.9, 3785.0], [81.0, 3786.0], [81.1, 3790.0], [81.2, 3790.0], [81.3, 3792.0], [81.4, 3801.0], [81.5, 3803.0], [81.6, 3805.0], [81.7, 3805.0], [81.8, 3806.0], [81.9, 3810.0], [82.0, 3812.0], [82.1, 3813.0], [82.2, 3813.0], [82.3, 3816.0], [82.4, 3816.0], [82.5, 3817.0], [82.6, 3817.0], [82.7, 3818.0], [82.8, 3819.0], [82.9, 3820.0], [83.0, 3821.0], [83.1, 3821.0], [83.2, 3822.0], [83.3, 3822.0], [83.4, 3824.0], [83.5, 3824.0], [83.6, 3825.0], [83.7, 3825.0], [83.8, 3825.0], [83.9, 3825.0], [84.0, 3825.0], [84.1, 3825.0], [84.2, 3825.0], [84.3, 3826.0], [84.4, 3827.0], [84.5, 3828.0], [84.6, 3828.0], [84.7, 3829.0], [84.8, 3829.0], [84.9, 3830.0], [85.0, 3830.0], [85.1, 3830.0], [85.2, 3830.0], [85.3, 3830.0], [85.4, 3831.0], [85.5, 3831.0], [85.6, 3831.0], [85.7, 3832.0], [85.8, 3832.0], [85.9, 3832.0], [86.0, 3832.0], [86.1, 3832.0], [86.2, 3833.0], [86.3, 3833.0], [86.4, 3833.0], [86.5, 3834.0], [86.6, 3834.0], [86.7, 3836.0], [86.8, 3836.0], [86.9, 3836.0], [87.0, 3836.0], [87.1, 3837.0], [87.2, 3837.0], [87.3, 3837.0], [87.4, 3837.0], [87.5, 3837.0], [87.6, 3838.0], [87.7, 3838.0], [87.8, 3838.0], [87.9, 3838.0], [88.0, 3838.0], [88.1, 3838.0], [88.2, 3839.0], [88.3, 3840.0], [88.4, 3841.0], [88.5, 3841.0], [88.6, 3841.0], [88.7, 3841.0], [88.8, 3842.0], [88.9, 3842.0], [89.0, 3843.0], [89.1, 3843.0], [89.2, 3844.0], [89.3, 3844.0], [89.4, 3846.0], [89.5, 3846.0], [89.6, 3846.0], [89.7, 3847.0], [89.8, 3847.0], [89.9, 3849.0], [90.0, 3850.0], [90.1, 3850.0], [90.2, 3850.0], [90.3, 3851.0], [90.4, 3853.0], [90.5, 3853.0], [90.6, 3854.0], [90.7, 3856.0], [90.8, 3858.0], [90.9, 3862.0], [91.0, 3865.0], [91.1, 3866.0], [91.2, 3871.0], [91.3, 3871.0], [91.4, 3878.0], [91.5, 3879.0], [91.6, 3890.0], [91.7, 3893.0], [91.8, 3894.0], [91.9, 3915.0], [92.0, 3932.0], [92.1, 3943.0], [92.2, 3951.0], [92.3, 3953.0], [92.4, 3955.0], [92.5, 3956.0], [92.6, 3959.0], [92.7, 3962.0], [92.8, 3966.0], [92.9, 3966.0], [93.0, 3968.0], [93.1, 3968.0], [93.2, 3972.0], [93.3, 3972.0], [93.4, 3972.0], [93.5, 3973.0], [93.6, 3976.0], [93.7, 3977.0], [93.8, 3978.0], [93.9, 3978.0], [94.0, 3981.0], [94.1, 3981.0], [94.2, 3982.0], [94.3, 3982.0], [94.4, 3984.0], [94.5, 3986.0], [94.6, 3997.0], [94.7, 3998.0], [94.8, 3999.0], [94.9, 4001.0], [95.0, 4001.0], [95.1, 4001.0], [95.2, 4001.0], [95.3, 4003.0], [95.4, 4004.0], [95.5, 4005.0], [95.6, 4006.0], [95.7, 4007.0], [95.8, 4008.0], [95.9, 4011.0], [96.0, 4012.0], [96.1, 4014.0], [96.2, 4018.0], [96.3, 4020.0], [96.4, 4022.0], [96.5, 4022.0], [96.6, 4024.0], [96.7, 4025.0], [96.8, 4026.0], [96.9, 4029.0], [97.0, 4031.0], [97.1, 4032.0], [97.2, 4033.0], [97.3, 4035.0], [97.4, 4036.0], [97.5, 4036.0], [97.6, 4037.0], [97.7, 4043.0], [97.8, 4047.0], [97.9, 4049.0], [98.0, 4058.0], [98.1, 4081.0], [98.2, 4082.0], [98.3, 4122.0], [98.4, 4132.0], [98.5, 4138.0], [98.6, 4146.0], [98.7, 4149.0], [98.8, 4159.0], [98.9, 4161.0], [99.0, 4163.0], [99.1, 4218.0], [99.2, 4221.0], [99.3, 4229.0], [99.4, 4236.0], [99.5, 4240.0], [99.6, 4244.0], [99.7, 4253.0], [99.8, 4254.0], [99.9, 4256.0]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[0.0, 88.0], [0.1, 90.0], [0.2, 91.0], [0.3, 91.0], [0.4, 92.0], [0.5, 93.0], [0.6, 93.0], [0.7, 93.0], [0.8, 93.0], [0.9, 93.0], [1.0, 93.0], [1.1, 94.0], [1.2, 94.0], [1.3, 94.0], [1.4, 94.0], [1.5, 94.0], [1.6, 94.0], [1.7, 94.0], [1.8, 95.0], [1.9, 95.0], [2.0, 95.0], [2.1, 95.0], [2.2, 95.0], [2.3, 95.0], [2.4, 95.0], [2.5, 95.0], [2.6, 95.0], [2.7, 95.0], [2.8, 95.0], [2.9, 95.0], [3.0, 95.0], [3.1, 95.0], [3.2, 95.0], [3.3, 96.0], [3.4, 96.0], [3.5, 96.0], [3.6, 96.0], [3.7, 96.0], [3.8, 96.0], [3.9, 96.0], [4.0, 96.0], [4.1, 96.0], [4.2, 96.0], [4.3, 96.0], [4.4, 96.0], [4.5, 96.0], [4.6, 96.0], [4.7, 96.0], [4.8, 96.0], [4.9, 97.0], [5.0, 97.0], [5.1, 97.0], [5.2, 97.0], [5.3, 97.0], [5.4, 97.0], [5.5, 97.0], [5.6, 97.0], [5.7, 97.0], [5.8, 97.0], [5.9, 97.0], [6.0, 97.0], [6.1, 97.0], [6.2, 97.0], [6.3, 97.0], [6.4, 97.0], [6.5, 98.0], [6.6, 98.0], [6.7, 98.0], [6.8, 98.0], [6.9, 98.0], [7.0, 98.0], [7.1, 98.0], [7.2, 98.0], [7.3, 98.0], [7.4, 98.0], [7.5, 98.0], [7.6, 98.0], [7.7, 98.0], [7.8, 98.0], [7.9, 99.0], [8.0, 99.0], [8.1, 99.0], [8.2, 99.0], [8.3, 99.0], [8.4, 99.0], [8.5, 99.0], [8.6, 99.0], [8.7, 99.0], [8.8, 99.0], [8.9, 99.0], [9.0, 99.0], [9.1, 99.0], [9.2, 99.0], [9.3, 99.0], [9.4, 100.0], [9.5, 100.0], [9.6, 100.0], [9.7, 100.0], [9.8, 100.0], [9.9, 100.0], [10.0, 100.0], [10.1, 100.0], [10.2, 100.0], [10.3, 100.0], [10.4, 100.0], [10.5, 100.0], [10.6, 100.0], [10.7, 100.0], [10.8, 100.0], [10.9, 100.0], [11.0, 100.0], [11.1, 100.0], [11.2, 100.0], [11.3, 100.0], [11.4, 100.0], [11.5, 100.0], [11.6, 100.0], [11.7, 100.0], [11.8, 101.0], [11.9, 101.0], [12.0, 101.0], [12.1, 101.0], [12.2, 101.0], [12.3, 101.0], [12.4, 101.0], [12.5, 101.0], [12.6, 101.0], [12.7, 101.0], [12.8, 101.0], [12.9, 101.0], [13.0, 101.0], [13.1, 101.0], [13.2, 101.0], [13.3, 101.0], [13.4, 101.0], [13.5, 101.0], [13.6, 101.0], [13.7, 101.0], [13.8, 101.0], [13.9, 102.0], [14.0, 102.0], [14.1, 102.0], [14.2, 102.0], [14.3, 102.0], [14.4, 102.0], [14.5, 102.0], [14.6, 102.0], [14.7, 102.0], [14.8, 102.0], [14.9, 102.0], [15.0, 102.0], [15.1, 102.0], [15.2, 102.0], [15.3, 102.0], [15.4, 102.0], [15.5, 102.0], [15.6, 102.0], [15.7, 102.0], [15.8, 102.0], [15.9, 102.0], [16.0, 102.0], [16.1, 102.0], [16.2, 102.0], [16.3, 102.0], [16.4, 103.0], [16.5, 103.0], [16.6, 103.0], [16.7, 103.0], [16.8, 103.0], [16.9, 103.0], [17.0, 103.0], [17.1, 103.0], [17.2, 103.0], [17.3, 103.0], [17.4, 103.0], [17.5, 103.0], [17.6, 103.0], [17.7, 103.0], [17.8, 103.0], [17.9, 103.0], [18.0, 103.0], [18.1, 103.0], [18.2, 103.0], [18.3, 103.0], [18.4, 103.0], [18.5, 104.0], [18.6, 104.0], [18.7, 104.0], [18.8, 104.0], [18.9, 104.0], [19.0, 104.0], [19.1, 104.0], [19.2, 104.0], [19.3, 104.0], [19.4, 104.0], [19.5, 104.0], [19.6, 104.0], [19.7, 104.0], [19.8, 104.0], [19.9, 104.0], [20.0, 104.0], [20.1, 104.0], [20.2, 104.0], [20.3, 104.0], [20.4, 104.0], [20.5, 104.0], [20.6, 104.0], [20.7, 104.0], [20.8, 104.0], [20.9, 104.0], [21.0, 104.0], [21.1, 104.0], [21.2, 104.0], [21.3, 105.0], [21.4, 105.0], [21.5, 105.0], [21.6, 105.0], [21.7, 105.0], [21.8, 105.0], [21.9, 105.0], [22.0, 105.0], [22.1, 105.0], [22.2, 105.0], [22.3, 105.0], [22.4, 105.0], [22.5, 105.0], [22.6, 105.0], [22.7, 105.0], [22.8, 105.0], [22.9, 105.0], [23.0, 105.0], [23.1, 105.0], [23.2, 105.0], [23.3, 105.0], [23.4, 105.0], [23.5, 105.0], [23.6, 105.0], [23.7, 106.0], [23.8, 106.0], [23.9, 106.0], [24.0, 106.0], [24.1, 106.0], [24.2, 106.0], [24.3, 106.0], [24.4, 106.0], [24.5, 106.0], [24.6, 106.0], [24.7, 106.0], [24.8, 106.0], [24.9, 106.0], [25.0, 106.0], [25.1, 106.0], [25.2, 106.0], [25.3, 106.0], [25.4, 106.0], [25.5, 106.0], [25.6, 106.0], [25.7, 106.0], [25.8, 106.0], [25.9, 107.0], [26.0, 107.0], [26.1, 107.0], [26.2, 107.0], [26.3, 107.0], [26.4, 107.0], [26.5, 107.0], [26.6, 107.0], [26.7, 107.0], [26.8, 107.0], [26.9, 107.0], [27.0, 107.0], [27.1, 107.0], [27.2, 107.0], [27.3, 107.0], [27.4, 107.0], [27.5, 107.0], [27.6, 107.0], [27.7, 108.0], [27.8, 108.0], [27.9, 108.0], [28.0, 108.0], [28.1, 108.0], [28.2, 108.0], [28.3, 108.0], [28.4, 108.0], [28.5, 108.0], [28.6, 108.0], [28.7, 108.0], [28.8, 108.0], [28.9, 108.0], [29.0, 108.0], [29.1, 108.0], [29.2, 108.0], [29.3, 108.0], [29.4, 108.0], [29.5, 108.0], [29.6, 109.0], [29.7, 109.0], [29.8, 109.0], [29.9, 109.0], [30.0, 109.0], [30.1, 109.0], [30.2, 109.0], [30.3, 109.0], [30.4, 109.0], [30.5, 109.0], [30.6, 109.0], [30.7, 109.0], [30.8, 109.0], [30.9, 109.0], [31.0, 109.0], [31.1, 109.0], [31.2, 109.0], [31.3, 109.0], [31.4, 109.0], [31.5, 109.0], [31.6, 109.0], [31.7, 109.0], [31.8, 109.0], [31.9, 109.0], [32.0, 110.0], [32.1, 110.0], [32.2, 110.0], [32.3, 110.0], [32.4, 110.0], [32.5, 110.0], [32.6, 110.0], [32.7, 110.0], [32.8, 110.0], [32.9, 110.0], [33.0, 110.0], [33.1, 110.0], [33.2, 110.0], [33.3, 110.0], [33.4, 110.0], [33.5, 110.0], [33.6, 110.0], [33.7, 110.0], [33.8, 110.0], [33.9, 110.0], [34.0, 111.0], [34.1, 111.0], [34.2, 111.0], [34.3, 111.0], [34.4, 111.0], [34.5, 111.0], [34.6, 111.0], [34.7, 111.0], [34.8, 111.0], [34.9, 111.0], [35.0, 111.0], [35.1, 111.0], [35.2, 111.0], [35.3, 111.0], [35.4, 111.0], [35.5, 111.0], [35.6, 111.0], [35.7, 111.0], [35.8, 111.0], [35.9, 111.0], [36.0, 111.0], [36.1, 111.0], [36.2, 112.0], [36.3, 112.0], [36.4, 112.0], [36.5, 112.0], [36.6, 112.0], [36.7, 112.0], [36.8, 112.0], [36.9, 112.0], [37.0, 112.0], [37.1, 112.0], [37.2, 112.0], [37.3, 112.0], [37.4, 112.0], [37.5, 112.0], [37.6, 113.0], [37.7, 113.0], [37.8, 113.0], [37.9, 113.0], [38.0, 113.0], [38.1, 113.0], [38.2, 113.0], [38.3, 113.0], [38.4, 113.0], [38.5, 113.0], [38.6, 113.0], [38.7, 113.0], [38.8, 113.0], [38.9, 113.0], [39.0, 113.0], [39.1, 113.0], [39.2, 113.0], [39.3, 113.0], [39.4, 114.0], [39.5, 114.0], [39.6, 114.0], [39.7, 114.0], [39.8, 114.0], [39.9, 114.0], [40.0, 114.0], [40.1, 114.0], [40.2, 115.0], [40.3, 115.0], [40.4, 115.0], [40.5, 115.0], [40.6, 115.0], [40.7, 115.0], [40.8, 115.0], [40.9, 115.0], [41.0, 115.0], [41.1, 115.0], [41.2, 115.0], [41.3, 115.0], [41.4, 115.0], [41.5, 115.0], [41.6, 115.0], [41.7, 115.0], [41.8, 115.0], [41.9, 115.0], [42.0, 115.0], [42.1, 115.0], [42.2, 116.0], [42.3, 116.0], [42.4, 116.0], [42.5, 116.0], [42.6, 116.0], [42.7, 116.0], [42.8, 116.0], [42.9, 116.0], [43.0, 116.0], [43.1, 116.0], [43.2, 117.0], [43.3, 117.0], [43.4, 117.0], [43.5, 117.0], [43.6, 117.0], [43.7, 117.0], [43.8, 117.0], [43.9, 117.0], [44.0, 117.0], [44.1, 117.0], [44.2, 117.0], [44.3, 117.0], [44.4, 117.0], [44.5, 117.0], [44.6, 118.0], [44.7, 118.0], [44.8, 118.0], [44.9, 118.0], [45.0, 118.0], [45.1, 118.0], [45.2, 118.0], [45.3, 118.0], [45.4, 118.0], [45.5, 118.0], [45.6, 118.0], [45.7, 119.0], [45.8, 119.0], [45.9, 119.0], [46.0, 119.0], [46.1, 119.0], [46.2, 119.0], [46.3, 119.0], [46.4, 119.0], [46.5, 119.0], [46.6, 119.0], [46.7, 119.0], [46.8, 119.0], [46.9, 120.0], [47.0, 120.0], [47.1, 120.0], [47.2, 120.0], [47.3, 120.0], [47.4, 120.0], [47.5, 120.0], [47.6, 120.0], [47.7, 120.0], [47.8, 120.0], [47.9, 120.0], [48.0, 121.0], [48.1, 121.0], [48.2, 121.0], [48.3, 121.0], [48.4, 121.0], [48.5, 121.0], [48.6, 121.0], [48.7, 121.0], [48.8, 121.0], [48.9, 121.0], [49.0, 121.0], [49.1, 121.0], [49.2, 122.0], [49.3, 122.0], [49.4, 122.0], [49.5, 122.0], [49.6, 122.0], [49.7, 122.0], [49.8, 122.0], [49.9, 122.0], [50.0, 122.0], [50.1, 122.0], [50.2, 122.0], [50.3, 122.0], [50.4, 123.0], [50.5, 123.0], [50.6, 123.0], [50.7, 123.0], [50.8, 123.0], [50.9, 123.0], [51.0, 124.0], [51.1, 124.0], [51.2, 124.0], [51.3, 124.0], [51.4, 124.0], [51.5, 124.0], [51.6, 124.0], [51.7, 124.0], [51.8, 124.0], [51.9, 124.0], [52.0, 124.0], [52.1, 124.0], [52.2, 125.0], [52.3, 125.0], [52.4, 125.0], [52.5, 125.0], [52.6, 125.0], [52.7, 125.0], [52.8, 125.0], [52.9, 125.0], [53.0, 125.0], [53.1, 125.0], [53.2, 125.0], [53.3, 125.0], [53.4, 125.0], [53.5, 125.0], [53.6, 126.0], [53.7, 126.0], [53.8, 126.0], [53.9, 126.0], [54.0, 126.0], [54.1, 126.0], [54.2, 126.0], [54.3, 126.0], [54.4, 126.0], [54.5, 126.0], [54.6, 126.0], [54.7, 127.0], [54.8, 127.0], [54.9, 127.0], [55.0, 127.0], [55.1, 127.0], [55.2, 127.0], [55.3, 127.0], [55.4, 127.0], [55.5, 128.0], [55.6, 128.0], [55.7, 128.0], [55.8, 128.0], [55.9, 128.0], [56.0, 129.0], [56.1, 129.0], [56.2, 129.0], [56.3, 129.0], [56.4, 129.0], [56.5, 129.0], [56.6, 129.0], [56.7, 129.0], [56.8, 129.0], [56.9, 130.0], [57.0, 130.0], [57.1, 130.0], [57.2, 130.0], [57.3, 130.0], [57.4, 130.0], [57.5, 130.0], [57.6, 130.0], [57.7, 131.0], [57.8, 131.0], [57.9, 131.0], [58.0, 131.0], [58.1, 131.0], [58.2, 131.0], [58.3, 131.0], [58.4, 132.0], [58.5, 132.0], [58.6, 132.0], [58.7, 132.0], [58.8, 132.0], [58.9, 133.0], [59.0, 133.0], [59.1, 133.0], [59.2, 133.0], [59.3, 133.0], [59.4, 133.0], [59.5, 134.0], [59.6, 134.0], [59.7, 134.0], [59.8, 134.0], [59.9, 134.0], [60.0, 134.0], [60.1, 134.0], [60.2, 134.0], [60.3, 135.0], [60.4, 135.0], [60.5, 136.0], [60.6, 136.0], [60.7, 136.0], [60.8, 136.0], [60.9, 136.0], [61.0, 136.0], [61.1, 136.0], [61.2, 136.0], [61.3, 137.0], [61.4, 137.0], [61.5, 138.0], [61.6, 138.0], [61.7, 138.0], [61.8, 138.0], [61.9, 139.0], [62.0, 139.0], [62.1, 139.0], [62.2, 139.0], [62.3, 139.0], [62.4, 140.0], [62.5, 140.0], [62.6, 140.0], [62.7, 141.0], [62.8, 141.0], [62.9, 141.0], [63.0, 141.0], [63.1, 141.0], [63.2, 141.0], [63.3, 142.0], [63.4, 142.0], [63.5, 142.0], [63.6, 142.0], [63.7, 143.0], [63.8, 143.0], [63.9, 144.0], [64.0, 144.0], [64.1, 145.0], [64.2, 145.0], [64.3, 146.0], [64.4, 146.0], [64.5, 147.0], [64.6, 147.0], [64.7, 147.0], [64.8, 148.0], [64.9, 148.0], [65.0, 148.0], [65.1, 148.0], [65.2, 149.0], [65.3, 149.0], [65.4, 149.0], [65.5, 149.0], [65.6, 150.0], [65.7, 150.0], [65.8, 150.0], [65.9, 151.0], [66.0, 151.0], [66.1, 151.0], [66.2, 151.0], [66.3, 152.0], [66.4, 152.0], [66.5, 153.0], [66.6, 156.0], [66.7, 156.0], [66.8, 157.0], [66.9, 157.0], [67.0, 159.0], [67.1, 159.0], [67.2, 160.0], [67.3, 160.0], [67.4, 161.0], [67.5, 161.0], [67.6, 161.0], [67.7, 162.0], [67.8, 162.0], [67.9, 162.0], [68.0, 162.0], [68.1, 163.0], [68.2, 163.0], [68.3, 163.0], [68.4, 164.0], [68.5, 164.0], [68.6, 165.0], [68.7, 165.0], [68.8, 166.0], [68.9, 167.0], [69.0, 169.0], [69.1, 169.0], [69.2, 170.0], [69.3, 170.0], [69.4, 170.0], [69.5, 171.0], [69.6, 171.0], [69.7, 177.0], [69.8, 177.0], [69.9, 177.0], [70.0, 178.0], [70.1, 179.0], [70.2, 182.0], [70.3, 184.0], [70.4, 186.0], [70.5, 186.0], [70.6, 186.0], [70.7, 187.0], [70.8, 187.0], [70.9, 188.0], [71.0, 188.0], [71.1, 188.0], [71.2, 191.0], [71.3, 192.0], [71.4, 192.0], [71.5, 192.0], [71.6, 193.0], [71.7, 195.0], [71.8, 197.0], [71.9, 197.0], [72.0, 198.0], [72.1, 201.0], [72.2, 202.0], [72.3, 202.0], [72.4, 203.0], [72.5, 203.0], [72.6, 204.0], [72.7, 205.0], [72.8, 205.0], [72.9, 208.0], [73.0, 210.0], [73.1, 213.0], [73.2, 213.0], [73.3, 216.0], [73.4, 216.0], [73.5, 218.0], [73.6, 218.0], [73.7, 224.0], [73.8, 227.0], [73.9, 228.0], [74.0, 228.0], [74.1, 228.0], [74.2, 229.0], [74.3, 230.0], [74.4, 238.0], [74.5, 242.0], [74.6, 243.0], [74.7, 244.0], [74.8, 245.0], [74.9, 246.0], [75.0, 274.0], [75.1, 276.0], [75.2, 282.0], [75.3, 287.0], [75.4, 298.0], [75.5, 320.0], [75.6, 336.0], [75.7, 340.0], [75.8, 343.0], [75.9, 403.0], [76.0, 536.0], [76.1, 547.0], [76.2, 555.0], [76.3, 560.0], [76.4, 562.0], [76.5, 567.0], [76.6, 569.0], [76.7, 569.0], [76.8, 571.0], [76.9, 571.0], [77.0, 572.0], [77.1, 573.0], [77.2, 578.0], [77.3, 581.0], [77.4, 583.0], [77.5, 586.0], [77.6, 588.0], [77.7, 589.0], [77.8, 593.0], [77.9, 593.0], [78.0, 594.0], [78.1, 595.0], [78.2, 596.0], [78.3, 597.0], [78.4, 598.0], [78.5, 598.0], [78.6, 598.0], [78.7, 600.0], [78.8, 601.0], [78.9, 601.0], [79.0, 602.0], [79.1, 603.0], [79.2, 604.0], [79.3, 605.0], [79.4, 605.0], [79.5, 606.0], [79.6, 606.0], [79.7, 607.0], [79.8, 607.0], [79.9, 610.0], [80.0, 610.0], [80.1, 611.0], [80.2, 611.0], [80.3, 611.0], [80.4, 613.0], [80.5, 614.0], [80.6, 615.0], [80.7, 616.0], [80.8, 616.0], [80.9, 616.0], [81.0, 617.0], [81.1, 619.0], [81.2, 619.0], [81.3, 620.0], [81.4, 622.0], [81.5, 623.0], [81.6, 623.0], [81.7, 624.0], [81.8, 625.0], [81.9, 626.0], [82.0, 626.0], [82.1, 628.0], [82.2, 630.0], [82.3, 631.0], [82.4, 633.0], [82.5, 633.0], [82.6, 634.0], [82.7, 635.0], [82.8, 635.0], [82.9, 636.0], [83.0, 636.0], [83.1, 638.0], [83.2, 638.0], [83.3, 638.0], [83.4, 638.0], [83.5, 640.0], [83.6, 641.0], [83.7, 641.0], [83.8, 642.0], [83.9, 642.0], [84.0, 643.0], [84.1, 643.0], [84.2, 643.0], [84.3, 644.0], [84.4, 644.0], [84.5, 644.0], [84.6, 648.0], [84.7, 649.0], [84.8, 649.0], [84.9, 650.0], [85.0, 650.0], [85.1, 650.0], [85.2, 650.0], [85.3, 651.0], [85.4, 652.0], [85.5, 652.0], [85.6, 652.0], [85.7, 653.0], [85.8, 654.0], [85.9, 654.0], [86.0, 654.0], [86.1, 654.0], [86.2, 654.0], [86.3, 654.0], [86.4, 656.0], [86.5, 656.0], [86.6, 656.0], [86.7, 658.0], [86.8, 658.0], [86.9, 659.0], [87.0, 659.0], [87.1, 661.0], [87.2, 662.0], [87.3, 662.0], [87.4, 662.0], [87.5, 664.0], [87.6, 664.0], [87.7, 666.0], [87.8, 668.0], [87.9, 668.0], [88.0, 670.0], [88.1, 675.0], [88.2, 677.0], [88.3, 677.0], [88.4, 677.0], [88.5, 678.0], [88.6, 678.0], [88.7, 678.0], [88.8, 679.0], [88.9, 681.0], [89.0, 682.0], [89.1, 682.0], [89.2, 682.0], [89.3, 683.0], [89.4, 684.0], [89.5, 685.0], [89.6, 685.0], [89.7, 688.0], [89.8, 688.0], [89.9, 689.0], [90.0, 689.0], [90.1, 689.0], [90.2, 689.0], [90.3, 689.0], [90.4, 690.0], [90.5, 690.0], [90.6, 691.0], [90.7, 691.0], [90.8, 692.0], [90.9, 693.0], [91.0, 694.0], [91.1, 697.0], [91.2, 698.0], [91.3, 698.0], [91.4, 698.0], [91.5, 700.0], [91.6, 701.0], [91.7, 701.0], [91.8, 702.0], [91.9, 702.0], [92.0, 703.0], [92.1, 704.0], [92.2, 704.0], [92.3, 705.0], [92.4, 705.0], [92.5, 705.0], [92.6, 706.0], [92.7, 710.0], [92.8, 711.0], [92.9, 711.0], [93.0, 713.0], [93.1, 713.0], [93.2, 715.0], [93.3, 715.0], [93.4, 715.0], [93.5, 716.0], [93.6, 719.0], [93.7, 722.0], [93.8, 723.0], [93.9, 724.0], [94.0, 725.0], [94.1, 726.0], [94.2, 727.0], [94.3, 727.0], [94.4, 728.0], [94.5, 729.0], [94.6, 729.0], [94.7, 730.0], [94.8, 733.0], [94.9, 734.0], [95.0, 736.0], [95.1, 739.0], [95.2, 739.0], [95.3, 742.0], [95.4, 743.0], [95.5, 749.0], [95.6, 749.0], [95.7, 749.0], [95.8, 750.0], [95.9, 751.0], [96.0, 751.0], [96.1, 756.0], [96.2, 758.0], [96.3, 760.0], [96.4, 761.0], [96.5, 766.0], [96.6, 772.0], [96.7, 791.0], [96.8, 794.0], [96.9, 805.0], [97.0, 818.0], [97.1, 844.0], [97.2, 847.0], [97.3, 853.0], [97.4, 856.0], [97.5, 860.0], [97.6, 881.0], [97.7, 885.0], [97.8, 886.0], [97.9, 898.0], [98.0, 916.0], [98.1, 946.0], [98.2, 958.0], [98.3, 958.0], [98.4, 977.0], [98.5, 981.0], [98.6, 1024.0], [98.7, 1039.0], [98.8, 1044.0], [98.9, 1092.0], [99.0, 1100.0], [99.1, 1105.0], [99.2, 1116.0], [99.3, 1128.0], [99.4, 1209.0], [99.5, 1223.0], [99.6, 1279.0], [99.7, 1297.0], [99.8, 1338.0], [99.9, 1359.0]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[0.0, 92.0], [0.1, 92.0], [0.2, 92.0], [0.3, 94.0], [0.4, 95.0], [0.5, 95.0], [0.6, 95.0], [0.7, 96.0], [0.8, 96.0], [0.9, 96.0], [1.0, 96.0], [1.1, 96.0], [1.2, 96.0], [1.3, 97.0], [1.4, 97.0], [1.5, 97.0], [1.6, 97.0], [1.7, 97.0], [1.8, 97.0], [1.9, 98.0], [2.0, 98.0], [2.1, 99.0], [2.2, 99.0], [2.3, 99.0], [2.4, 99.0], [2.5, 100.0], [2.6, 100.0], [2.7, 100.0], [2.8, 100.0], [2.9, 100.0], [3.0, 100.0], [3.1, 100.0], [3.2, 101.0], [3.3, 101.0], [3.4, 101.0], [3.5, 101.0], [3.6, 101.0], [3.7, 102.0], [3.8, 102.0], [3.9, 102.0], [4.0, 102.0], [4.1, 102.0], [4.2, 102.0], [4.3, 102.0], [4.4, 102.0], [4.5, 102.0], [4.6, 102.0], [4.7, 102.0], [4.8, 102.0], [4.9, 103.0], [5.0, 103.0], [5.1, 103.0], [5.2, 103.0], [5.3, 103.0], [5.4, 103.0], [5.5, 103.0], [5.6, 103.0], [5.7, 103.0], [5.8, 103.0], [5.9, 103.0], [6.0, 103.0], [6.1, 103.0], [6.2, 103.0], [6.3, 104.0], [6.4, 104.0], [6.5, 104.0], [6.6, 104.0], [6.7, 104.0], [6.8, 104.0], [6.9, 104.0], [7.0, 104.0], [7.1, 105.0], [7.2, 105.0], [7.3, 105.0], [7.4, 105.0], [7.5, 105.0], [7.6, 105.0], [7.7, 105.0], [7.8, 105.0], [7.9, 105.0], [8.0, 106.0], [8.1, 106.0], [8.2, 106.0], [8.3, 106.0], [8.4, 106.0], [8.5, 106.0], [8.6, 106.0], [8.7, 106.0], [8.8, 107.0], [8.9, 107.0], [9.0, 107.0], [9.1, 107.0], [9.2, 107.0], [9.3, 107.0], [9.4, 107.0], [9.5, 107.0], [9.6, 107.0], [9.7, 107.0], [9.8, 107.0], [9.9, 107.0], [10.0, 107.0], [10.1, 107.0], [10.2, 107.0], [10.3, 108.0], [10.4, 108.0], [10.5, 108.0], [10.6, 108.0], [10.7, 108.0], [10.8, 109.0], [10.9, 109.0], [11.0, 109.0], [11.1, 109.0], [11.2, 109.0], [11.3, 109.0], [11.4, 109.0], [11.5, 109.0], [11.6, 109.0], [11.7, 109.0], [11.8, 110.0], [11.9, 110.0], [12.0, 110.0], [12.1, 110.0], [12.2, 110.0], [12.3, 110.0], [12.4, 110.0], [12.5, 110.0], [12.6, 110.0], [12.7, 110.0], [12.8, 110.0], [12.9, 111.0], [13.0, 111.0], [13.1, 111.0], [13.2, 111.0], [13.3, 111.0], [13.4, 111.0], [13.5, 111.0], [13.6, 111.0], [13.7, 111.0], [13.8, 111.0], [13.9, 111.0], [14.0, 111.0], [14.1, 111.0], [14.2, 111.0], [14.3, 111.0], [14.4, 112.0], [14.5, 112.0], [14.6, 112.0], [14.7, 112.0], [14.8, 112.0], [14.9, 112.0], [15.0, 112.0], [15.1, 113.0], [15.2, 113.0], [15.3, 113.0], [15.4, 113.0], [15.5, 113.0], [15.6, 113.0], [15.7, 113.0], [15.8, 113.0], [15.9, 114.0], [16.0, 114.0], [16.1, 114.0], [16.2, 114.0], [16.3, 114.0], [16.4, 114.0], [16.5, 114.0], [16.6, 114.0], [16.7, 114.0], [16.8, 114.0], [16.9, 114.0], [17.0, 115.0], [17.1, 115.0], [17.2, 115.0], [17.3, 115.0], [17.4, 116.0], [17.5, 116.0], [17.6, 116.0], [17.7, 116.0], [17.8, 116.0], [17.9, 116.0], [18.0, 116.0], [18.1, 117.0], [18.2, 117.0], [18.3, 117.0], [18.4, 117.0], [18.5, 117.0], [18.6, 117.0], [18.7, 117.0], [18.8, 117.0], [18.9, 117.0], [19.0, 117.0], [19.1, 118.0], [19.2, 118.0], [19.3, 118.0], [19.4, 118.0], [19.5, 118.0], [19.6, 118.0], [19.7, 118.0], [19.8, 119.0], [19.9, 119.0], [20.0, 119.0], [20.1, 119.0], [20.2, 119.0], [20.3, 119.0], [20.4, 119.0], [20.5, 120.0], [20.6, 120.0], [20.7, 120.0], [20.8, 120.0], [20.9, 120.0], [21.0, 120.0], [21.1, 120.0], [21.2, 121.0], [21.3, 121.0], [21.4, 121.0], [21.5, 121.0], [21.6, 122.0], [21.7, 122.0], [21.8, 122.0], [21.9, 122.0], [22.0, 123.0], [22.1, 123.0], [22.2, 123.0], [22.3, 123.0], [22.4, 123.0], [22.5, 123.0], [22.6, 124.0], [22.7, 124.0], [22.8, 124.0], [22.9, 124.0], [23.0, 124.0], [23.1, 124.0], [23.2, 124.0], [23.3, 124.0], [23.4, 124.0], [23.5, 124.0], [23.6, 125.0], [23.7, 125.0], [23.8, 125.0], [23.9, 125.0], [24.0, 125.0], [24.1, 125.0], [24.2, 125.0], [24.3, 125.0], [24.4, 125.0], [24.5, 125.0], [24.6, 125.0], [24.7, 126.0], [24.8, 126.0], [24.9, 126.0], [25.0, 126.0], [25.1, 126.0], [25.2, 126.0], [25.3, 127.0], [25.4, 127.0], [25.5, 127.0], [25.6, 127.0], [25.7, 128.0], [25.8, 128.0], [25.9, 128.0], [26.0, 128.0], [26.1, 128.0], [26.2, 128.0], [26.3, 128.0], [26.4, 129.0], [26.5, 129.0], [26.6, 129.0], [26.7, 129.0], [26.8, 129.0], [26.9, 130.0], [27.0, 130.0], [27.1, 130.0], [27.2, 130.0], [27.3, 130.0], [27.4, 130.0], [27.5, 131.0], [27.6, 131.0], [27.7, 131.0], [27.8, 131.0], [27.9, 131.0], [28.0, 131.0], [28.1, 131.0], [28.2, 131.0], [28.3, 131.0], [28.4, 131.0], [28.5, 131.0], [28.6, 132.0], [28.7, 132.0], [28.8, 132.0], [28.9, 133.0], [29.0, 133.0], [29.1, 133.0], [29.2, 133.0], [29.3, 133.0], [29.4, 133.0], [29.5, 134.0], [29.6, 134.0], [29.7, 134.0], [29.8, 134.0], [29.9, 134.0], [30.0, 134.0], [30.1, 135.0], [30.2, 135.0], [30.3, 135.0], [30.4, 135.0], [30.5, 135.0], [30.6, 135.0], [30.7, 135.0], [30.8, 135.0], [30.9, 135.0], [31.0, 136.0], [31.1, 136.0], [31.2, 136.0], [31.3, 136.0], [31.4, 136.0], [31.5, 136.0], [31.6, 137.0], [31.7, 137.0], [31.8, 137.0], [31.9, 137.0], [32.0, 138.0], [32.1, 138.0], [32.2, 138.0], [32.3, 138.0], [32.4, 138.0], [32.5, 138.0], [32.6, 139.0], [32.7, 139.0], [32.8, 139.0], [32.9, 139.0], [33.0, 140.0], [33.1, 140.0], [33.2, 141.0], [33.3, 141.0], [33.4, 141.0], [33.5, 141.0], [33.6, 141.0], [33.7, 142.0], [33.8, 142.0], [33.9, 142.0], [34.0, 142.0], [34.1, 142.0], [34.2, 143.0], [34.3, 143.0], [34.4, 143.0], [34.5, 143.0], [34.6, 143.0], [34.7, 143.0], [34.8, 143.0], [34.9, 143.0], [35.0, 143.0], [35.1, 143.0], [35.2, 144.0], [35.3, 144.0], [35.4, 144.0], [35.5, 144.0], [35.6, 144.0], [35.7, 145.0], [35.8, 145.0], [35.9, 145.0], [36.0, 145.0], [36.1, 146.0], [36.2, 146.0], [36.3, 146.0], [36.4, 146.0], [36.5, 147.0], [36.6, 147.0], [36.7, 147.0], [36.8, 147.0], [36.9, 147.0], [37.0, 147.0], [37.1, 147.0], [37.2, 148.0], [37.3, 148.0], [37.4, 148.0], [37.5, 148.0], [37.6, 148.0], [37.7, 148.0], [37.8, 148.0], [37.9, 149.0], [38.0, 150.0], [38.1, 150.0], [38.2, 150.0], [38.3, 150.0], [38.4, 150.0], [38.5, 150.0], [38.6, 150.0], [38.7, 151.0], [38.8, 151.0], [38.9, 151.0], [39.0, 152.0], [39.1, 152.0], [39.2, 152.0], [39.3, 152.0], [39.4, 152.0], [39.5, 152.0], [39.6, 152.0], [39.7, 152.0], [39.8, 152.0], [39.9, 152.0], [40.0, 152.0], [40.1, 152.0], [40.2, 153.0], [40.3, 153.0], [40.4, 153.0], [40.5, 153.0], [40.6, 153.0], [40.7, 153.0], [40.8, 154.0], [40.9, 154.0], [41.0, 154.0], [41.1, 155.0], [41.2, 155.0], [41.3, 155.0], [41.4, 155.0], [41.5, 155.0], [41.6, 155.0], [41.7, 155.0], [41.8, 156.0], [41.9, 156.0], [42.0, 156.0], [42.1, 156.0], [42.2, 156.0], [42.3, 156.0], [42.4, 156.0], [42.5, 156.0], [42.6, 157.0], [42.7, 157.0], [42.8, 157.0], [42.9, 157.0], [43.0, 157.0], [43.1, 157.0], [43.2, 158.0], [43.3, 158.0], [43.4, 158.0], [43.5, 158.0], [43.6, 159.0], [43.7, 159.0], [43.8, 159.0], [43.9, 159.0], [44.0, 159.0], [44.1, 160.0], [44.2, 160.0], [44.3, 160.0], [44.4, 160.0], [44.5, 161.0], [44.6, 162.0], [44.7, 162.0], [44.8, 162.0], [44.9, 162.0], [45.0, 162.0], [45.1, 162.0], [45.2, 162.0], [45.3, 162.0], [45.4, 163.0], [45.5, 163.0], [45.6, 163.0], [45.7, 163.0], [45.8, 163.0], [45.9, 163.0], [46.0, 163.0], [46.1, 164.0], [46.2, 164.0], [46.3, 164.0], [46.4, 165.0], [46.5, 165.0], [46.6, 165.0], [46.7, 165.0], [46.8, 165.0], [46.9, 165.0], [47.0, 165.0], [47.1, 166.0], [47.2, 166.0], [47.3, 166.0], [47.4, 166.0], [47.5, 166.0], [47.6, 166.0], [47.7, 166.0], [47.8, 166.0], [47.9, 167.0], [48.0, 167.0], [48.1, 167.0], [48.2, 167.0], [48.3, 167.0], [48.4, 168.0], [48.5, 168.0], [48.6, 168.0], [48.7, 168.0], [48.8, 168.0], [48.9, 169.0], [49.0, 169.0], [49.1, 169.0], [49.2, 169.0], [49.3, 169.0], [49.4, 169.0], [49.5, 169.0], [49.6, 170.0], [49.7, 170.0], [49.8, 170.0], [49.9, 171.0], [50.0, 171.0], [50.1, 171.0], [50.2, 171.0], [50.3, 171.0], [50.4, 171.0], [50.5, 172.0], [50.6, 172.0], [50.7, 172.0], [50.8, 172.0], [50.9, 172.0], [51.0, 172.0], [51.1, 172.0], [51.2, 172.0], [51.3, 172.0], [51.4, 172.0], [51.5, 173.0], [51.6, 173.0], [51.7, 173.0], [51.8, 173.0], [51.9, 173.0], [52.0, 173.0], [52.1, 173.0], [52.2, 174.0], [52.3, 174.0], [52.4, 175.0], [52.5, 175.0], [52.6, 175.0], [52.7, 175.0], [52.8, 175.0], [52.9, 176.0], [53.0, 176.0], [53.1, 176.0], [53.2, 176.0], [53.3, 176.0], [53.4, 176.0], [53.5, 176.0], [53.6, 177.0], [53.7, 177.0], [53.8, 177.0], [53.9, 177.0], [54.0, 177.0], [54.1, 178.0], [54.2, 178.0], [54.3, 178.0], [54.4, 178.0], [54.5, 178.0], [54.6, 178.0], [54.7, 178.0], [54.8, 178.0], [54.9, 179.0], [55.0, 179.0], [55.1, 179.0], [55.2, 179.0], [55.3, 179.0], [55.4, 179.0], [55.5, 179.0], [55.6, 179.0], [55.7, 180.0], [55.8, 180.0], [55.9, 180.0], [56.0, 180.0], [56.1, 181.0], [56.2, 181.0], [56.3, 181.0], [56.4, 181.0], [56.5, 181.0], [56.6, 182.0], [56.7, 182.0], [56.8, 182.0], [56.9, 182.0], [57.0, 182.0], [57.1, 183.0], [57.2, 183.0], [57.3, 183.0], [57.4, 184.0], [57.5, 184.0], [57.6, 184.0], [57.7, 184.0], [57.8, 184.0], [57.9, 185.0], [58.0, 185.0], [58.1, 185.0], [58.2, 185.0], [58.3, 185.0], [58.4, 185.0], [58.5, 186.0], [58.6, 186.0], [58.7, 186.0], [58.8, 186.0], [58.9, 186.0], [59.0, 186.0], [59.1, 186.0], [59.2, 186.0], [59.3, 186.0], [59.4, 186.0], [59.5, 186.0], [59.6, 186.0], [59.7, 187.0], [59.8, 187.0], [59.9, 187.0], [60.0, 187.0], [60.1, 187.0], [60.2, 188.0], [60.3, 188.0], [60.4, 188.0], [60.5, 188.0], [60.6, 188.0], [60.7, 188.0], [60.8, 188.0], [60.9, 189.0], [61.0, 189.0], [61.1, 189.0], [61.2, 189.0], [61.3, 189.0], [61.4, 190.0], [61.5, 190.0], [61.6, 191.0], [61.7, 191.0], [61.8, 191.0], [61.9, 191.0], [62.0, 191.0], [62.1, 192.0], [62.2, 192.0], [62.3, 192.0], [62.4, 192.0], [62.5, 192.0], [62.6, 192.0], [62.7, 192.0], [62.8, 192.0], [62.9, 193.0], [63.0, 193.0], [63.1, 193.0], [63.2, 193.0], [63.3, 193.0], [63.4, 193.0], [63.5, 193.0], [63.6, 193.0], [63.7, 194.0], [63.8, 194.0], [63.9, 194.0], [64.0, 194.0], [64.1, 195.0], [64.2, 195.0], [64.3, 195.0], [64.4, 195.0], [64.5, 195.0], [64.6, 195.0], [64.7, 195.0], [64.8, 196.0], [64.9, 196.0], [65.0, 196.0], [65.1, 196.0], [65.2, 196.0], [65.3, 196.0], [65.4, 197.0], [65.5, 197.0], [65.6, 197.0], [65.7, 197.0], [65.8, 197.0], [65.9, 197.0], [66.0, 198.0], [66.1, 198.0], [66.2, 198.0], [66.3, 198.0], [66.4, 199.0], [66.5, 199.0], [66.6, 200.0], [66.7, 200.0], [66.8, 201.0], [66.9, 201.0], [67.0, 201.0], [67.1, 201.0], [67.2, 202.0], [67.3, 202.0], [67.4, 202.0], [67.5, 202.0], [67.6, 202.0], [67.7, 203.0], [67.8, 203.0], [67.9, 203.0], [68.0, 203.0], [68.1, 204.0], [68.2, 204.0], [68.3, 204.0], [68.4, 204.0], [68.5, 204.0], [68.6, 205.0], [68.7, 205.0], [68.8, 205.0], [68.9, 205.0], [69.0, 206.0], [69.1, 206.0], [69.2, 207.0], [69.3, 207.0], [69.4, 208.0], [69.5, 208.0], [69.6, 208.0], [69.7, 208.0], [69.8, 208.0], [69.9, 208.0], [70.0, 210.0], [70.1, 210.0], [70.2, 210.0], [70.3, 210.0], [70.4, 210.0], [70.5, 210.0], [70.6, 210.0], [70.7, 210.0], [70.8, 210.0], [70.9, 211.0], [71.0, 211.0], [71.1, 211.0], [71.2, 211.0], [71.3, 211.0], [71.4, 211.0], [71.5, 212.0], [71.6, 212.0], [71.7, 212.0], [71.8, 212.0], [71.9, 212.0], [72.0, 213.0], [72.1, 213.0], [72.2, 214.0], [72.3, 214.0], [72.4, 214.0], [72.5, 214.0], [72.6, 215.0], [72.7, 215.0], [72.8, 215.0], [72.9, 215.0], [73.0, 216.0], [73.1, 216.0], [73.2, 216.0], [73.3, 216.0], [73.4, 216.0], [73.5, 217.0], [73.6, 217.0], [73.7, 217.0], [73.8, 217.0], [73.9, 217.0], [74.0, 218.0], [74.1, 218.0], [74.2, 219.0], [74.3, 219.0], [74.4, 219.0], [74.5, 219.0], [74.6, 220.0], [74.7, 220.0], [74.8, 220.0], [74.9, 220.0], [75.0, 221.0], [75.1, 221.0], [75.2, 221.0], [75.3, 221.0], [75.4, 222.0], [75.5, 222.0], [75.6, 222.0], [75.7, 223.0], [75.8, 223.0], [75.9, 223.0], [76.0, 224.0], [76.1, 225.0], [76.2, 225.0], [76.3, 225.0], [76.4, 225.0], [76.5, 225.0], [76.6, 225.0], [76.7, 226.0], [76.8, 226.0], [76.9, 227.0], [77.0, 228.0], [77.1, 228.0], [77.2, 228.0], [77.3, 228.0], [77.4, 228.0], [77.5, 228.0], [77.6, 229.0], [77.7, 229.0], [77.8, 229.0], [77.9, 230.0], [78.0, 230.0], [78.1, 230.0], [78.2, 230.0], [78.3, 230.0], [78.4, 230.0], [78.5, 231.0], [78.6, 231.0], [78.7, 231.0], [78.8, 231.0], [78.9, 231.0], [79.0, 231.0], [79.1, 231.0], [79.2, 231.0], [79.3, 232.0], [79.4, 232.0], [79.5, 232.0], [79.6, 232.0], [79.7, 233.0], [79.8, 233.0], [79.9, 233.0], [80.0, 234.0], [80.1, 234.0], [80.2, 234.0], [80.3, 234.0], [80.4, 234.0], [80.5, 234.0], [80.6, 234.0], [80.7, 234.0], [80.8, 235.0], [80.9, 235.0], [81.0, 236.0], [81.1, 236.0], [81.2, 236.0], [81.3, 236.0], [81.4, 236.0], [81.5, 236.0], [81.6, 237.0], [81.7, 238.0], [81.8, 238.0], [81.9, 238.0], [82.0, 238.0], [82.1, 238.0], [82.2, 238.0], [82.3, 238.0], [82.4, 239.0], [82.5, 241.0], [82.6, 241.0], [82.7, 241.0], [82.8, 242.0], [82.9, 242.0], [83.0, 242.0], [83.1, 243.0], [83.2, 243.0], [83.3, 243.0], [83.4, 243.0], [83.5, 243.0], [83.6, 244.0], [83.7, 244.0], [83.8, 244.0], [83.9, 244.0], [84.0, 244.0], [84.1, 244.0], [84.2, 245.0], [84.3, 245.0], [84.4, 245.0], [84.5, 245.0], [84.6, 245.0], [84.7, 245.0], [84.8, 245.0], [84.9, 246.0], [85.0, 246.0], [85.1, 246.0], [85.2, 246.0], [85.3, 247.0], [85.4, 247.0], [85.5, 247.0], [85.6, 247.0], [85.7, 247.0], [85.8, 247.0], [85.9, 248.0], [86.0, 248.0], [86.1, 248.0], [86.2, 249.0], [86.3, 249.0], [86.4, 249.0], [86.5, 249.0], [86.6, 250.0], [86.7, 250.0], [86.8, 250.0], [86.9, 250.0], [87.0, 250.0], [87.1, 250.0], [87.2, 250.0], [87.3, 250.0], [87.4, 250.0], [87.5, 251.0], [87.6, 251.0], [87.7, 251.0], [87.8, 251.0], [87.9, 251.0], [88.0, 252.0], [88.1, 252.0], [88.2, 252.0], [88.3, 253.0], [88.4, 253.0], [88.5, 253.0], [88.6, 253.0], [88.7, 254.0], [88.8, 254.0], [88.9, 254.0], [89.0, 254.0], [89.1, 254.0], [89.2, 256.0], [89.3, 256.0], [89.4, 256.0], [89.5, 257.0], [89.6, 257.0], [89.7, 258.0], [89.8, 258.0], [89.9, 259.0], [90.0, 259.0], [90.1, 259.0], [90.2, 260.0], [90.3, 260.0], [90.4, 260.0], [90.5, 260.0], [90.6, 261.0], [90.7, 261.0], [90.8, 261.0], [90.9, 261.0], [91.0, 262.0], [91.1, 262.0], [91.2, 262.0], [91.3, 263.0], [91.4, 263.0], [91.5, 264.0], [91.6, 264.0], [91.7, 264.0], [91.8, 265.0], [91.9, 265.0], [92.0, 265.0], [92.1, 266.0], [92.2, 266.0], [92.3, 266.0], [92.4, 266.0], [92.5, 266.0], [92.6, 266.0], [92.7, 267.0], [92.8, 267.0], [92.9, 267.0], [93.0, 267.0], [93.1, 268.0], [93.2, 268.0], [93.3, 269.0], [93.4, 269.0], [93.5, 270.0], [93.6, 271.0], [93.7, 272.0], [93.8, 272.0], [93.9, 272.0], [94.0, 272.0], [94.1, 273.0], [94.2, 273.0], [94.3, 274.0], [94.4, 274.0], [94.5, 274.0], [94.6, 275.0], [94.7, 275.0], [94.8, 275.0], [94.9, 275.0], [95.0, 276.0], [95.1, 276.0], [95.2, 277.0], [95.3, 277.0], [95.4, 279.0], [95.5, 280.0], [95.6, 280.0], [95.7, 280.0], [95.8, 280.0], [95.9, 282.0], [96.0, 283.0], [96.1, 285.0], [96.2, 287.0], [96.3, 287.0], [96.4, 288.0], [96.5, 288.0], [96.6, 289.0], [96.7, 290.0], [96.8, 290.0], [96.9, 292.0], [97.0, 293.0], [97.1, 295.0], [97.2, 296.0], [97.3, 296.0], [97.4, 298.0], [97.5, 302.0], [97.6, 303.0], [97.7, 306.0], [97.8, 306.0], [97.9, 307.0], [98.0, 309.0], [98.1, 313.0], [98.2, 314.0], [98.3, 314.0], [98.4, 315.0], [98.5, 317.0], [98.6, 323.0], [98.7, 328.0], [98.8, 337.0], [98.9, 343.0], [99.0, 350.0], [99.1, 356.0], [99.2, 366.0], [99.3, 368.0], [99.4, 371.0], [99.5, 372.0], [99.6, 376.0], [99.7, 387.0], [99.8, 417.0], [99.9, 423.0]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 642.0, "series": [{"data": [[600.0, 4.0], [700.0, 4.0], [800.0, 5.0], [900.0, 6.0], [1000.0, 9.0], [1100.0, 4.0], [1200.0, 4.0], [1300.0, 7.0], [1400.0, 18.0], [1500.0, 20.0], [1600.0, 28.0], [1700.0, 6.0], [1800.0, 8.0], [1900.0, 11.0], [2000.0, 10.0], [2100.0, 5.0], [2200.0, 6.0], [2300.0, 4.0], [2400.0, 9.0], [2500.0, 30.0], [2600.0, 37.0], [2800.0, 65.0], [2700.0, 34.0], [2900.0, 27.0], [3000.0, 47.0], [3100.0, 34.0], [3200.0, 56.0], [3300.0, 63.0], [3400.0, 26.0], [3500.0, 61.0], [3600.0, 67.0], [3700.0, 94.0], [3800.0, 106.0], [3900.0, 30.0], [4000.0, 34.0], [4100.0, 8.0], [4200.0, 9.0], [500.0, 4.0]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[0.0, 94.0], [600.0, 128.0], [700.0, 54.0], [200.0, 34.0], [800.0, 11.0], [900.0, 6.0], [1000.0, 4.0], [1100.0, 4.0], [300.0, 4.0], [1200.0, 4.0], [1300.0, 2.0], [400.0, 1.0], [100.0, 627.0], [500.0, 27.0]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[0.0, 24.0], [300.0, 23.0], [100.0, 642.0], [200.0, 309.0], [400.0, 2.0]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 307.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1760.0, "series": [{"data": [[0.0, 1760.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 307.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 933.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 244.82518926359234, "minX": 1.69851906E12, "maxY": 289.17776341305756, "series": [{"data": [[1.69851906E12, 289.17776341305756], [1.69851912E12, 244.82518926359234]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851912E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 92.0, "minX": 1.0, "maxY": 4253.0, "series": [{"data": [[34.0, 4253.0], [38.0, 4244.0], [40.0, 4236.0], [43.0, 4216.75], [42.0, 4238.0], [45.0, 4155.0], [44.0, 4152.5], [46.0, 4138.0], [49.0, 4132.0], [48.0, 4122.0], [51.0, 4082.0], [53.0, 4081.0], [55.0, 4038.0], [54.0, 4053.5], [56.0, 4041.5], [58.0, 4029.0], [61.0, 4023.0], [63.0, 4031.0], [67.0, 4022.0], [65.0, 4030.0], [64.0, 4027.3333333333335], [69.0, 4020.0], [68.0, 4005.0], [74.0, 4003.0], [73.0, 4018.5], [79.0, 2037.142857142857], [77.0, 4003.3333333333335], [76.0, 4003.5], [83.0, 3986.0], [82.0, 4011.0], [86.0, 2318.0], [87.0, 3972.0], [85.0, 3990.0], [84.0, 4001.0], [88.0, 2322.0], [91.0, 3972.0], [95.0, 2677.0], [97.0, 1834.6666666666667], [98.0, 3961.0], [96.0, 3973.0], [103.0, 823.0], [100.0, 3968.0], [104.0, 805.0], [106.0, 2907.0], [107.0, 2411.5], [105.0, 3957.25], [111.0, 3932.0], [108.0, 3966.0], [114.0, 941.0], [115.0, 3892.0], [113.0, 3878.0], [112.0, 3881.0], [118.0, 3871.0], [116.0, 3869.0], [121.0, 1036.0], [122.0, 3138.5], [123.0, 2893.6666666666665], [120.0, 3865.0], [124.0, 978.0], [126.0, 3853.0], [125.0, 3866.0], [128.0, 1974.3333333333335], [130.0, 2444.5], [131.0, 1032.0], [135.0, 3845.5], [133.0, 3841.5], [132.0, 3845.0], [136.0, 1086.0], [137.0, 1087.0], [138.0, 2466.5], [139.0, 1092.0], [143.0, 3836.5], [142.0, 3846.5], [141.0, 3841.0], [140.0, 3850.0], [147.0, 1176.0], [146.0, 1168.3333333333333], [151.0, 3838.0], [148.0, 3840.0], [145.0, 3844.0], [144.0, 3842.0], [152.0, 2278.6], [155.0, 1299.0], [157.0, 2990.3333333333335], [159.0, 1363.0], [158.0, 3838.0], [154.0, 3841.5], [153.0, 3841.0], [160.0, 1437.5], [162.0, 2609.5], [166.0, 1418.6666666666667], [165.0, 1429.5], [167.0, 2551.4], [163.0, 3834.6666666666665], [161.0, 3837.0], [168.0, 2372.0], [170.0, 2070.0], [172.0, 2266.3333333333335], [173.0, 2898.8], [174.0, 1489.6666666666667], [169.0, 3832.0], [176.0, 1491.0], [178.0, 2674.0], [179.0, 1890.1666666666665], [181.0, 1505.0], [183.0, 3828.5], [180.0, 3837.0], [177.0, 3822.5], [184.0, 2693.5], [185.0, 1548.0], [186.0, 2685.25], [187.0, 2323.1666666666665], [189.0, 2043.2], [190.0, 1602.6666666666667], [188.0, 2339.6666666666665], [191.0, 1624.5], [192.0, 2362.3333333333335], [193.0, 2074.6], [194.0, 2005.1666666666667], [195.0, 1660.2], [197.0, 2962.2], [199.0, 3828.0], [196.0, 3819.0], [201.0, 2764.0], [203.0, 1718.0], [205.0, 2773.0], [207.0, 1789.0], [206.0, 3819.2], [204.0, 3816.0], [208.0, 1781.0], [212.0, 1809.0], [214.0, 2835.5], [215.0, 2373.5], [209.0, 3827.5], [216.0, 3537.0000000000005], [217.0, 1868.0], [222.0, 1922.0], [221.0, 1909.0], [220.0, 3798.0], [219.0, 3821.0], [224.0, 1954.6666666666667], [225.0, 3173.3333333333335], [226.0, 3189.166666666667], [227.0, 1972.0], [231.0, 1999.0], [230.0, 3784.0], [228.0, 3808.5], [232.0, 2010.0], [233.0, 2061.0], [235.0, 2906.5], [234.0, 2057.0], [237.0, 2915.5], [239.0, 2083.0], [238.0, 3776.0], [236.0, 3767.25], [242.0, 2127.0], [243.0, 2938.0], [247.0, 3765.0], [246.0, 3765.5], [241.0, 3767.0], [240.0, 3764.0], [249.0, 2980.5], [250.0, 2710.6666666666665], [255.0, 3750.5], [254.0, 3745.0], [251.0, 3750.0], [259.0, 2654.0], [256.0, 3270.0], [258.0, 2267.0], [257.0, 3752.0], [261.0, 3026.0], [260.0, 3760.0], [263.0, 2806.3333333333335], [264.0, 3043.5], [265.0, 3285.3333333333335], [267.0, 3760.0], [266.0, 3743.0], [271.0, 3760.0], [270.0, 3757.0], [275.0, 3093.5], [273.0, 2686.6], [274.0, 3232.2], [276.0, 3089.0], [278.0, 2804.5], [279.0, 2519.0], [272.0, 3718.0], [280.0, 3122.5], [287.0, 2560.0], [285.0, 2584.4], [284.0, 3226.4285714285716], [286.0, 2849.0], [281.0, 2910.0], [282.0, 3113.0], [288.0, 2561.666666666667], [289.0, 3022.8], [291.0, 3716.5], [300.0, 2867.5], [301.0, 2687.1666666666665], [302.0, 2683.0], [303.0, 3712.0], [296.0, 3717.0], [294.0, 3249.428571428571], [295.0, 2594.0], [293.0, 2607.5], [292.0, 2617.5], [297.0, 2617.0], [299.0, 2761.0], [298.0, 2831.5], [305.0, 2728.0], [304.0, 3514.8], [307.0, 2745.1666666666665], [306.0, 3705.0], [316.0, 2868.0], [317.0, 2858.0], [318.0, 2867.25], [319.0, 3034.0], [308.0, 2933.0], [309.0, 2770.0], [310.0, 2932.416666666667], [312.0, 2802.7272727272725], [311.0, 2801.125], [313.0, 3268.666666666667], [315.0, 2829.4], [314.0, 3135.4444444444443], [320.0, 3197.0], [323.0, 3538.6], [322.0, 3691.0], [332.0, 3165.333333333333], [333.0, 3435.6666666666665], [335.0, 2940.6666666666665], [334.0, 3313.75], [324.0, 3157.6666666666665], [325.0, 2872.5], [326.0, 2881.3333333333335], [327.0, 3285.0], [328.0, 3115.571428571429], [329.0, 2887.0], [330.0, 2894.5], [331.0, 2914.5], [337.0, 2948.0], [336.0, 2955.0], [338.0, 3177.1428571428573], [339.0, 3215.6666666666665], [341.0, 3001.5], [342.0, 3240.0833333333335], [343.0, 3036.8571428571427], [344.0, 3135.142857142857], [350.0, 3093.0], [351.0, 3156.0], [348.0, 3373.0], [349.0, 3384.5], [345.0, 3141.571428571429], [346.0, 3076.3333333333335], [347.0, 3096.5], [353.0, 3234.8571428571427], [352.0, 3519.285714285714], [354.0, 3183.0], [355.0, 3223.230769230769], [356.0, 3203.9166666666665], [357.0, 3235.625], [358.0, 3267.9333333333334], [359.0, 3299.272727272727], [360.0, 3306.625], [366.0, 3431.4], [367.0, 3397.0], [364.0, 3372.3], [365.0, 3423.0], [361.0, 3341.5], [362.0, 3363.461538461538], [363.0, 3338.03448275862], [368.0, 3383.3333333333335], [371.0, 3583.2], [381.0, 3608.25], [383.0, 3512.75], [382.0, 3619.0], [372.0, 3483.5], [373.0, 3494.0], [374.0, 3454.428571428571], [375.0, 3539.25], [377.0, 3487.0], [378.0, 3488.2], [379.0, 3480.0], [385.0, 3507.1666666666665], [384.0, 3543.6666666666665], [386.0, 3506.0], [387.0, 3508.0], [388.0, 3557.25], [389.0, 3513.5], [390.0, 3514.6666666666665], [391.0, 3588.75], [392.0, 3564.2], [396.0, 3553.0], [398.0, 3536.5], [397.0, 3574.0], [399.0, 3545.0], [393.0, 3515.0], [394.0, 3536.285714285714], [395.0, 3539.3333333333335], [400.0, 3569.0], [401.0, 3574.6]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[269.5590000000001, 3084.815999999996]], "isOverall": false, "label": "Express Js Http Call-Aggregated", "isController": false}, {"data": [[4.0, 620.25], [12.0, 885.0], [15.0, 916.0], [23.0, 946.0], [25.0, 556.0], [28.0, 152.0], [30.0, 125.0], [33.0, 95.0], [32.0, 101.0], [35.0, 452.0], [34.0, 186.0], [39.0, 186.0], [38.0, 188.0], [43.0, 492.0], [42.0, 257.5], [45.0, 207.0], [44.0, 436.8], [46.0, 189.0], [49.0, 192.0], [51.0, 157.0], [50.0, 167.0], [53.0, 129.0], [55.0, 361.5], [54.0, 301.6666666666667], [56.0, 101.0], [59.0, 100.0], [58.0, 575.5], [61.0, 104.5], [63.0, 112.0], [67.0, 433.5], [65.0, 97.0], [64.0, 348.0], [70.0, 118.0], [69.0, 106.0], [68.0, 106.0], [75.0, 104.0], [73.0, 121.66666666666667], [72.0, 126.0], [79.0, 113.0], [77.0, 317.6666666666667], [76.0, 108.0], [83.0, 142.0], [82.0, 120.0], [81.0, 121.0], [87.0, 105.0], [86.0, 378.0], [85.0, 129.0], [84.0, 147.0], [89.0, 97.66666666666667], [88.0, 101.0], [95.0, 132.33333333333334], [98.0, 100.5], [99.0, 109.0], [96.0, 125.0], [102.0, 178.0], [107.0, 98.0], [106.0, 664.0], [105.0, 177.33333333333334], [111.0, 162.0], [108.0, 213.0], [114.0, 98.0], [115.0, 386.0], [112.0, 246.75], [119.0, 97.0], [123.0, 104.0], [122.0, 213.0], [120.0, 106.0], [125.0, 106.0], [129.0, 547.0], [130.0, 403.0], [131.0, 340.5], [135.0, 318.0], [133.0, 218.5], [132.0, 408.33333333333337], [128.0, 102.5], [137.0, 333.0], [138.0, 197.2], [143.0, 266.0], [142.0, 225.25], [141.0, 109.0], [140.0, 96.0], [147.0, 282.33333333333337], [146.0, 234.0], [151.0, 100.0], [149.0, 95.5], [144.0, 95.0], [156.0, 335.5], [155.0, 677.0], [159.0, 715.0], [158.0, 96.0], [157.0, 345.75], [154.0, 424.3333333333333], [153.0, 100.0], [152.0, 96.0], [161.0, 301.6666666666667], [160.0, 407.0], [162.0, 458.33333333333337], [166.0, 695.5], [165.0, 103.33333333333333], [167.0, 99.33333333333333], [163.0, 94.33333333333333], [168.0, 339.0], [170.0, 98.33333333333333], [173.0, 103.2], [176.0, 102.0], [179.0, 346.75], [180.0, 351.0], [181.0, 110.0], [183.0, 98.5], [177.0, 97.0], [185.0, 123.5], [186.0, 108.33333333333333], [187.0, 237.5], [188.0, 141.0], [190.0, 114.0], [191.0, 322.4], [189.0, 111.25], [194.0, 393.25], [193.0, 216.2], [192.0, 292.0], [195.0, 642.0], [196.0, 104.83333333333333], [197.0, 416.7142857142857], [199.0, 396.5], [198.0, 102.5], [201.0, 133.0], [207.0, 166.5], [206.0, 99.0], [202.0, 385.0], [200.0, 588.0], [209.0, 224.0], [208.0, 401.0], [212.0, 309.75], [215.0, 405.8], [214.0, 404.5], [210.0, 379.5], [216.0, 171.75], [220.0, 94.0], [219.0, 605.0], [217.0, 106.0], [224.0, 245.0], [225.0, 306.6666666666667], [226.0, 308.8], [227.0, 227.0], [230.0, 127.33333333333333], [228.0, 124.0], [233.0, 142.0], [235.0, 166.75], [236.0, 423.83333333333337], [237.0, 146.8], [238.0, 197.0], [239.0, 550.5], [242.0, 598.0], [243.0, 1044.0], [246.0, 368.16666666666663], [245.0, 119.0], [244.0, 117.0], [240.0, 103.0], [249.0, 230.0], [255.0, 668.0], [253.0, 100.0], [251.0, 100.0], [250.0, 95.5], [256.0, 437.0], [258.0, 298.0], [257.0, 96.0], [260.0, 631.0], [262.0, 339.5], [261.0, 511.3333333333333], [263.0, 1209.0], [265.0, 186.5], [267.0, 195.0], [266.0, 138.0], [269.0, 152.5], [264.0, 124.66666666666667], [285.0, 137.5], [273.0, 783.0], [274.0, 141.25], [284.0, 109.8], [275.0, 109.0], [276.0, 174.0], [278.0, 729.5], [279.0, 233.6], [280.0, 1232.0], [281.0, 221.8], [283.0, 479.66666666666663], [286.0, 107.66666666666667], [287.0, 112.0], [288.0, 242.8571428571429], [289.0, 608.25], [300.0, 225.10000000000002], [301.0, 247.75], [302.0, 473.3333333333333], [303.0, 105.66666666666667], [296.0, 115.0], [295.0, 144.5], [292.0, 417.33333333333337], [293.0, 128.66666666666666], [294.0, 313.5], [297.0, 494.0], [298.0, 118.0], [299.0, 310.0], [305.0, 145.5], [306.0, 411.5], [304.0, 111.75], [307.0, 272.77777777777777], [308.0, 438.0], [309.0, 454.5], [310.0, 206.85714285714286], [311.0, 213.14285714285714], [312.0, 175.50000000000003], [316.0, 140.5], [317.0, 107.66666666666667], [319.0, 368.5], [313.0, 184.77777777777777], [315.0, 107.5], [314.0, 114.0], [321.0, 109.0], [320.0, 101.0], [323.0, 241.75], [322.0, 103.0], [328.0, 108.66666666666667], [335.0, 389.3333333333333], [333.0, 417.14285714285717], [334.0, 298.6666666666667], [332.0, 248.75], [325.0, 358.5], [324.0, 407.4], [326.0, 320.2], [327.0, 107.0], [329.0, 104.0], [330.0, 247.0], [331.0, 305.8333333333333], [337.0, 301.0], [336.0, 391.5], [338.0, 380.16666666666663], [339.0, 310.5], [341.0, 394.5], [342.0, 168.66666666666666], [343.0, 218.36363636363635], [344.0, 269.41666666666663], [351.0, 279.25], [349.0, 104.5], [345.0, 290.4], [346.0, 229.83333333333331], [347.0, 246.6], [353.0, 257.6], [352.0, 213.0], [354.0, 227.6], [355.0, 209.66666666666669], [356.0, 288.7], [357.0, 214.5], [358.0, 215.00000000000003], [359.0, 297.66666666666663], [360.0, 176.22222222222223], [367.0, 373.5], [366.0, 343.5], [364.0, 213.45454545454547], [365.0, 220.41666666666666], [361.0, 197.91666666666666], [362.0, 231.75000000000006], [363.0, 130.64], [375.0, 130.75], [372.0, 124.5], [374.0, 253.5], [373.0, 188.5], [378.0, 260.8], [377.0, 161.0], [376.0, 724.3333333333334], [379.0, 160.0], [382.0, 254.25], [381.0, 409.25], [371.0, 100.0], [370.0, 715.0], [383.0, 679.0], [385.0, 138.33333333333334], [384.0, 118.5], [386.0, 313.66666666666663], [387.0, 136.0], [396.0, 499.33333333333337], [398.0, 380.0], [397.0, 97.0], [399.0, 112.0], [388.0, 126.75], [389.0, 730.0], [390.0, 430.0], [391.0, 113.0], [392.0, 335.4], [393.0, 253.0], [394.0, 312.125], [395.0, 107.0], [400.0, 324.36363636363643], [401.0, 339.5714285714286]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[268.5410000000002, 264.3310000000002]], "isOverall": false, "label": "Gin Gonic Http Call-Aggregated", "isController": false}, {"data": [[2.0, 97.0], [3.0, 96.0], [4.0, 92.0], [5.0, 92.0], [6.0, 92.0], [7.0, 180.0], [8.0, 187.0], [9.0, 171.0], [10.0, 182.0], [11.0, 168.0], [12.0, 202.0], [13.0, 245.0], [14.0, 247.0], [15.0, 217.0], [16.0, 223.0], [17.0, 216.0], [18.0, 234.0], [19.0, 231.0], [20.0, 243.0], [21.0, 242.0], [22.0, 207.0], [23.0, 228.0], [24.0, 314.0], [25.0, 317.0], [26.0, 350.0], [27.0, 306.0], [28.0, 303.0], [29.0, 337.0], [30.0, 315.0], [31.0, 285.0], [33.0, 268.0], [32.0, 309.0], [35.0, 371.0], [34.0, 288.0], [36.0, 323.0], [39.0, 387.0], [38.0, 389.5], [41.0, 367.0], [43.0, 244.0], [42.0, 372.0], [45.0, 241.0], [44.0, 272.0], [47.0, 195.0], [46.0, 238.0], [49.0, 201.0], [48.0, 197.0], [51.0, 156.0], [50.0, 168.0], [53.0, 170.5], [55.0, 113.0], [54.0, 151.0], [57.0, 120.0], [56.0, 104.0], [59.0, 127.0], [58.0, 112.0], [61.0, 109.0], [63.0, 122.0], [67.0, 109.0], [66.0, 102.0], [65.0, 97.0], [64.0, 114.0], [71.0, 159.0], [70.0, 126.0], [69.0, 107.0], [68.0, 110.0], [75.0, 110.0], [74.0, 117.0], [73.0, 116.0], [72.0, 134.0], [79.0, 101.0], [78.0, 109.0], [77.0, 103.0], [76.0, 109.0], [83.0, 152.0], [82.0, 166.0], [81.0, 125.0], [80.0, 115.0], [87.0, 122.0], [86.0, 103.0], [85.0, 123.0], [84.0, 111.0], [91.0, 140.0], [90.0, 156.0], [89.0, 135.0], [88.0, 114.0], [95.0, 209.0], [93.0, 143.0], [92.0, 152.0], [99.0, 194.0], [98.0, 210.0], [97.0, 217.0], [96.0, 166.0], [103.0, 236.0], [102.0, 196.0], [101.0, 208.0], [100.0, 229.0], [107.0, 193.0], [106.0, 267.0], [105.0, 210.0], [108.0, 233.66666666666666], [111.0, 210.0], [110.0, 212.0], [109.0, 241.0], [114.0, 186.0], [115.0, 173.0], [113.0, 159.0], [112.0, 168.0], [119.0, 159.0], [118.0, 143.0], [117.0, 141.0], [116.0, 145.0], [123.0, 125.0], [122.0, 138.0], [121.0, 150.0], [120.0, 159.0], [124.0, 144.0], [127.0, 143.0], [126.0, 124.0], [125.0, 122.0], [132.0, 112.5], [135.0, 110.0], [134.0, 103.0], [133.0, 107.0], [131.0, 124.0], [130.0, 148.0], [129.0, 136.0], [128.0, 142.0], [139.0, 108.0], [143.0, 117.0], [142.0, 134.0], [141.0, 139.0], [140.0, 135.5], [138.0, 124.0], [137.0, 117.0], [136.0, 118.0], [147.0, 116.5], [146.0, 139.33333333333334], [151.0, 125.0], [150.0, 110.0], [149.0, 100.0], [148.0, 103.0], [145.0, 108.0], [144.0, 103.0], [153.0, 175.5], [152.0, 163.0], [156.0, 174.33333333333331], [157.0, 146.5], [155.0, 178.0], [159.0, 165.0], [158.0, 113.0], [154.0, 102.0], [160.0, 116.0], [161.0, 128.5], [167.0, 147.25], [166.0, 117.5], [165.0, 116.33333333333333], [164.0, 124.0], [163.0, 140.0], [162.0, 149.0], [168.0, 125.0], [170.0, 116.75], [174.0, 133.0], [173.0, 137.5], [175.0, 198.0], [172.0, 160.0], [171.0, 157.0], [169.0, 164.0], [176.0, 135.33333333333334], [179.0, 126.33333333333333], [181.0, 117.25], [183.0, 177.0], [182.0, 172.0], [180.0, 178.0], [178.0, 174.0], [177.0, 189.0], [186.0, 147.0], [188.0, 155.0], [187.0, 148.0], [190.0, 128.0], [191.0, 130.8], [189.0, 129.5], [185.0, 211.0], [184.0, 178.0], [193.0, 132.75], [192.0, 133.33333333333334], [194.0, 120.0], [195.0, 104.25], [197.0, 120.2], [199.0, 132.5], [198.0, 152.0], [196.0, 192.0], [201.0, 143.5], [203.0, 172.0], [207.0, 186.0], [206.0, 210.0], [205.0, 211.0], [204.0, 210.0], [202.0, 172.0], [200.0, 153.0], [209.0, 202.66666666666666], [208.0, 196.66666666666666], [212.0, 217.5], [215.0, 231.66666666666666], [214.0, 162.0], [213.0, 183.0], [211.0, 179.0], [210.0, 187.0], [216.0, 237.66666666666666], [220.0, 249.5], [222.0, 194.0], [221.0, 150.0], [219.0, 172.0], [218.0, 152.0], [217.0, 128.0], [225.0, 261.0], [226.0, 194.5], [227.0, 208.33333333333334], [231.0, 150.0], [230.0, 157.0], [229.0, 157.0], [228.0, 155.0], [224.0, 160.5], [233.0, 156.0], [235.0, 143.0], [236.0, 187.0], [237.0, 155.5], [239.0, 160.33333333333334], [238.0, 154.0], [234.0, 151.0], [232.0, 138.0], [243.0, 158.5], [246.0, 187.66666666666666], [245.0, 162.5], [247.0, 155.0], [244.0, 192.0], [242.0, 147.0], [241.0, 131.0], [240.0, 133.0], [255.0, 220.0], [254.0, 223.0], [253.0, 225.0], [252.0, 150.0], [251.0, 139.0], [250.0, 153.0], [249.0, 155.0], [248.0, 158.0], [259.0, 255.5], [256.0, 245.66666666666666], [258.0, 258.5], [257.0, 210.0], [261.0, 291.0], [260.0, 206.0], [262.0, 276.0], [263.0, 275.5], [267.0, 251.0], [266.0, 217.5], [269.0, 227.33333333333334], [268.0, 243.0], [271.0, 257.0], [265.0, 227.0], [264.0, 230.0], [270.0, 230.0], [285.0, 144.2], [274.0, 225.0], [276.0, 236.25], [275.0, 191.66666666666666], [284.0, 179.33333333333334], [273.0, 243.5], [279.0, 250.0], [272.0, 225.0], [278.0, 197.75], [280.0, 189.66666666666666], [282.0, 157.75], [281.0, 280.0], [283.0, 188.5], [286.0, 192.5], [287.0, 173.5], [289.0, 174.0], [288.0, 128.28571428571428], [290.0, 200.5], [291.0, 280.0], [300.0, 125.5], [301.0, 112.6], [302.0, 177.2], [303.0, 277.0], [296.0, 272.0], [295.0, 162.0], [293.0, 229.5], [294.0, 189.66666666666666], [292.0, 243.33333333333331], [297.0, 150.0], [299.0, 142.4], [298.0, 173.0], [305.0, 199.5], [306.0, 174.5], [308.0, 170.4], [307.0, 156.5], [309.0, 202.5], [310.0, 186.5], [312.0, 192.79999999999998], [316.0, 207.33333333333331], [317.0, 188.0], [319.0, 176.25], [318.0, 204.33333333333334], [311.0, 189.5], [304.0, 290.0], [313.0, 209.72727272727275], [315.0, 174.2], [314.0, 158.83333333333334], [332.0, 187.5], [320.0, 168.0], [321.0, 155.33333333333334], [323.0, 252.0], [322.0, 246.0], [325.0, 158.33333333333334], [324.0, 251.0], [326.0, 134.8], [327.0, 233.0], [329.0, 146.25], [330.0, 141.2], [328.0, 151.66666666666666], [335.0, 171.6], [333.0, 160.0], [334.0, 208.5], [331.0, 151.25], [337.0, 195.8], [336.0, 131.33333333333334], [339.0, 196.55555555555554], [338.0, 280.0], [349.0, 276.0], [348.0, 275.0], [351.0, 269.0], [350.0, 275.0], [340.0, 188.0], [341.0, 275.5], [342.0, 205.14285714285714], [343.0, 226.0], [344.0, 225.43749999999997], [345.0, 222.25], [346.0, 221.54545454545453], [347.0, 233.33333333333334], [353.0, 258.4], [352.0, 260.25], [354.0, 253.66666666666669], [355.0, 227.2], [356.0, 197.37500000000003], [357.0, 170.27272727272728], [358.0, 145.06249999999997], [359.0, 145.36363636363637], [360.0, 148.0], [366.0, 185.44444444444446], [367.0, 214.66666666666666], [364.0, 182.26666666666668], [365.0, 186.75], [361.0, 153.57142857142858], [362.0, 158.66666666666666], [363.0, 170.85185185185185], [368.0, 184.28571428571428], [373.0, 215.2], [372.0, 201.0], [374.0, 184.83333333333334], [375.0, 204.0], [378.0, 146.0], [379.0, 224.66666666666666], [383.0, 150.5], [377.0, 251.0], [376.0, 236.0], [382.0, 218.0], [381.0, 217.0], [380.0, 221.0], [371.0, 214.0], [370.0, 213.0], [369.0, 211.0], [385.0, 158.0], [384.0, 127.75], [386.0, 156.33333333333334], [387.0, 178.0], [396.0, 141.5], [399.0, 137.33333333333334], [392.0, 188.0], [398.0, 126.33333333333333], [397.0, 144.5], [389.0, 127.66666666666667], [388.0, 155.0], [391.0, 151.5], [390.0, 196.0], [393.0, 114.8], [394.0, 112.83333333333334], [395.0, 125.75], [400.0, 152.0], [401.0, 129.625], [402.0, 145.0], [1.0, 99.0]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}, {"data": [[264.989, 177.93199999999987]], "isOverall": false, "label": "Spring Boot Http Call-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 402.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3269.25, "minX": 1.69851906E12, "maxY": 469897.88333333336, "series": [{"data": [[1.69851906E12, 469897.88333333336], [1.69851912E12, 440518.7833333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69851906E12, 3480.75], [1.69851912E12, 3269.25]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851912E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 167.7200000000002, "minX": 1.69851906E12, "maxY": 3730.255319148933, "series": [{"data": [[1.69851906E12, 2512.445283018868], [1.69851912E12, 3730.255319148933]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[1.69851906E12, 287.127659574468], [1.69851912E12, 239.9296066252589]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[1.69851906E12, 167.7200000000002], [1.69851912E12, 188.14400000000003]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851912E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 167.52799999999996, "minX": 1.69851906E12, "maxY": 3730.1829787234037, "series": [{"data": [[1.69851906E12, 2512.3150943396245], [1.69851912E12, 3730.1829787234037]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[1.69851906E12, 286.95551257253396], [1.69851912E12, 239.78674948240166]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[1.69851906E12, 167.52799999999996], [1.69851912E12, 187.98600000000005]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851912E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 1.0638297872340419, "minX": 1.69851906E12, "maxY": 3.7358490566037728, "series": [{"data": [[1.69851906E12, 3.7358490566037728], [1.69851912E12, 1.2319148936170206]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[1.69851906E12, 1.0638297872340419], [1.69851912E12, 1.2173913043478257]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[1.69851906E12, 1.1739999999999993], [1.69851912E12, 1.2740000000000014]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851912E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 88.0, "minX": 1.69851906E12, "maxY": 4256.0, "series": [{"data": [[1.69851906E12, 3336.0], [1.69851912E12, 4256.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69851906E12, 3029.2], [1.69851912E12, 3831.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69851906E12, 3312.52], [1.69851912E12, 4141.68]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69851906E12, 3214.6], [1.69851912E12, 3963.2]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69851906E12, 93.0], [1.69851912E12, 88.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69851906E12, 219.0], [1.69851912E12, 231.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851912E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 160.0, "minX": 8.0, "maxY": 581.0, "series": [{"data": [[8.0, 341.0], [151.0, 246.0], [149.0, 296.0], [163.0, 238.0], [181.0, 181.0], [218.0, 192.5], [229.0, 196.0], [244.0, 238.0], [243.0, 160.0], [249.0, 177.0], [262.0, 249.0], [71.0, 581.0], [273.0, 245.0], [286.0, 175.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 286.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 160.0, "minX": 8.0, "maxY": 581.0, "series": [{"data": [[8.0, 341.0], [151.0, 246.0], [149.0, 296.0], [163.0, 238.0], [181.0, 181.0], [218.0, 192.5], [229.0, 196.0], [244.0, 238.0], [243.0, 160.0], [249.0, 177.0], [262.0, 249.0], [71.0, 581.0], [273.0, 245.0], [286.0, 175.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 286.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 18.166666666666668, "minX": 1.69851906E12, "maxY": 31.833333333333332, "series": [{"data": [[1.69851906E12, 31.833333333333332], [1.69851912E12, 18.166666666666668]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851912E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 24.216666666666665, "minX": 1.69851906E12, "maxY": 25.783333333333335, "series": [{"data": [[1.69851906E12, 25.783333333333335], [1.69851912E12, 24.216666666666665]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851912E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 7.833333333333333, "minX": 1.69851906E12, "maxY": 8.833333333333334, "series": [{"data": [[1.69851906E12, 8.616666666666667], [1.69851912E12, 8.05]], "isOverall": false, "label": "Gin Gonic Http Call-success", "isController": false}, {"data": [[1.69851906E12, 8.333333333333334], [1.69851912E12, 8.333333333333334]], "isOverall": false, "label": "Spring Boot Http Call-success", "isController": false}, {"data": [[1.69851906E12, 8.833333333333334], [1.69851912E12, 7.833333333333333]], "isOverall": false, "label": "Express Js Http Call-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851912E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 24.216666666666665, "minX": 1.69851906E12, "maxY": 25.783333333333335, "series": [{"data": [[1.69851906E12, 25.783333333333335], [1.69851912E12, 24.216666666666665]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851912E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}


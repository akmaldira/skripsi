/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 750.0, "minX": 0.0, "maxY": 497933.0, "series": [{"data": [[0.0, 4857.0], [0.1, 4857.0], [0.2, 4919.0], [0.3, 4919.0], [0.4, 5849.0], [0.5, 5849.0], [0.6, 5849.0], [0.7, 5907.0], [0.8, 7034.0], [0.9, 7034.0], [1.0, 7756.0], [1.1, 7756.0], [1.2, 8330.0], [1.3, 8330.0], [1.4, 8653.0], [1.5, 8653.0], [1.6, 9183.0], [1.7, 9183.0], [1.8, 9541.0], [1.9, 9541.0], [2.0, 9642.0], [2.1, 9642.0], [2.2, 9851.0], [2.3, 9851.0], [2.4, 10525.0], [2.5, 10525.0], [2.6, 14937.0], [2.7, 14937.0], [2.8, 14937.0], [2.9, 15242.0], [3.0, 15242.0], [3.1, 15559.0], [3.2, 15559.0], [3.3, 16313.0], [3.4, 16313.0], [3.5, 16343.0], [3.6, 16343.0], [3.7, 18267.0], [3.8, 18267.0], [3.9, 19508.0], [4.0, 19508.0], [4.1, 21056.0], [4.2, 21056.0], [4.3, 27031.0], [4.4, 27031.0], [4.5, 27190.0], [4.6, 27190.0], [4.7, 27201.0], [4.8, 27201.0], [4.9, 27407.0], [5.0, 27407.0], [5.1, 27890.0], [5.2, 27890.0], [5.3, 28931.0], [5.4, 28931.0], [5.5, 29077.0], [5.6, 29077.0], [5.7, 31300.0], [5.8, 31300.0], [5.9, 32203.0], [6.0, 32203.0], [6.1, 33748.0], [6.2, 33748.0], [6.3, 34725.0], [6.4, 34725.0], [6.5, 36859.0], [6.6, 36859.0], [6.7, 38728.0], [6.8, 38728.0], [6.9, 38824.0], [7.0, 38824.0], [7.1, 39301.0], [7.2, 39301.0], [7.3, 39392.0], [7.4, 39392.0], [7.5, 42286.0], [7.6, 42286.0], [7.7, 42554.0], [7.8, 42554.0], [7.9, 44589.0], [8.0, 44589.0], [8.1, 46976.0], [8.2, 46976.0], [8.3, 48361.0], [8.4, 48361.0], [8.5, 48420.0], [8.6, 48420.0], [8.7, 49658.0], [8.8, 51799.0], [8.9, 51799.0], [9.0, 52775.0], [9.1, 52775.0], [9.2, 53104.0], [9.3, 53104.0], [9.4, 53510.0], [9.5, 53510.0], [9.6, 56388.0], [9.7, 56388.0], [9.8, 56507.0], [9.9, 56507.0], [10.0, 56833.0], [10.1, 56833.0], [10.2, 57086.0], [10.3, 57086.0], [10.4, 57986.0], [10.5, 57986.0], [10.6, 59447.0], [10.7, 59447.0], [10.8, 59840.0], [10.9, 59840.0], [11.0, 60430.0], [11.1, 60430.0], [11.2, 61494.0], [11.3, 61494.0], [11.4, 61732.0], [11.5, 61732.0], [11.6, 63784.0], [11.7, 63784.0], [11.8, 65343.0], [11.9, 65343.0], [12.0, 66317.0], [12.1, 66317.0], [12.2, 68666.0], [12.3, 68666.0], [12.4, 68791.0], [12.5, 68791.0], [12.6, 69131.0], [12.7, 69131.0], [12.8, 71445.0], [12.9, 71445.0], [13.0, 71789.0], [13.1, 71789.0], [13.2, 72576.0], [13.3, 72576.0], [13.4, 72904.0], [13.5, 72904.0], [13.6, 75630.0], [13.7, 75630.0], [13.8, 76847.0], [13.9, 76847.0], [14.0, 77803.0], [14.1, 77803.0], [14.2, 77914.0], [14.3, 77914.0], [14.4, 80319.0], [14.5, 80319.0], [14.6, 82456.0], [14.7, 82456.0], [14.8, 82671.0], [14.9, 82671.0], [15.0, 82834.0], [15.1, 82834.0], [15.2, 83039.0], [15.3, 83039.0], [15.4, 88456.0], [15.5, 88456.0], [15.6, 89082.0], [15.7, 89082.0], [15.8, 89257.0], [15.9, 89257.0], [16.0, 89428.0], [16.1, 89428.0], [16.2, 92961.0], [16.3, 92961.0], [16.4, 93551.0], [16.5, 93551.0], [16.6, 94543.0], [16.7, 94543.0], [16.8, 96214.0], [16.9, 96214.0], [17.0, 96652.0], [17.1, 96652.0], [17.2, 96996.0], [17.3, 96996.0], [17.4, 97218.0], [17.5, 97218.0], [17.6, 100353.0], [17.7, 100353.0], [17.8, 102109.0], [17.9, 102109.0], [18.0, 102272.0], [18.1, 102272.0], [18.2, 102746.0], [18.3, 102746.0], [18.4, 104339.0], [18.5, 104339.0], [18.6, 104482.0], [18.7, 104482.0], [18.8, 105769.0], [18.9, 105769.0], [19.0, 107086.0], [19.1, 107086.0], [19.2, 114175.0], [19.3, 114175.0], [19.4, 114954.0], [19.5, 114954.0], [19.6, 115059.0], [19.7, 115059.0], [19.8, 115362.0], [19.9, 115362.0], [20.0, 118700.0], [20.1, 118700.0], [20.2, 118801.0], [20.3, 118801.0], [20.4, 118995.0], [20.5, 118995.0], [20.6, 120471.0], [20.7, 120471.0], [20.8, 120512.0], [20.9, 120512.0], [21.0, 121069.0], [21.1, 121069.0], [21.2, 124860.0], [21.3, 124860.0], [21.4, 126304.0], [21.5, 126304.0], [21.6, 126849.0], [21.7, 126849.0], [21.8, 126903.0], [21.9, 126903.0], [22.0, 128472.0], [22.1, 128472.0], [22.2, 128497.0], [22.3, 128497.0], [22.4, 128708.0], [22.5, 128708.0], [22.6, 130809.0], [22.7, 130809.0], [22.8, 131851.0], [22.9, 131851.0], [23.0, 133975.0], [23.1, 133975.0], [23.2, 134103.0], [23.3, 134103.0], [23.4, 134618.0], [23.5, 134618.0], [23.6, 134996.0], [23.7, 134996.0], [23.8, 135080.0], [23.9, 135080.0], [24.0, 135747.0], [24.1, 135747.0], [24.2, 137728.0], [24.3, 137728.0], [24.4, 138345.0], [24.5, 138345.0], [24.6, 139649.0], [24.7, 139649.0], [24.8, 141161.0], [24.9, 141161.0], [25.0, 141172.0], [25.1, 141172.0], [25.2, 144028.0], [25.3, 144028.0], [25.4, 144219.0], [25.5, 144219.0], [25.6, 144604.0], [25.7, 144604.0], [25.8, 146207.0], [25.9, 146207.0], [26.0, 146399.0], [26.1, 146399.0], [26.2, 147292.0], [26.3, 147292.0], [26.4, 147487.0], [26.5, 147487.0], [26.6, 150302.0], [26.7, 150302.0], [26.8, 150585.0], [26.9, 150585.0], [27.0, 152597.0], [27.1, 152597.0], [27.2, 153090.0], [27.3, 153090.0], [27.4, 153302.0], [27.5, 153302.0], [27.6, 154020.0], [27.7, 154020.0], [27.8, 154228.0], [27.9, 154228.0], [28.0, 155435.0], [28.1, 155435.0], [28.2, 156273.0], [28.3, 156273.0], [28.4, 156843.0], [28.5, 156843.0], [28.6, 157564.0], [28.7, 157564.0], [28.8, 161992.0], [28.9, 161992.0], [29.0, 162015.0], [29.1, 162015.0], [29.2, 162381.0], [29.3, 162381.0], [29.4, 162709.0], [29.5, 162709.0], [29.6, 164576.0], [29.7, 164576.0], [29.8, 164801.0], [29.9, 164801.0], [30.0, 167048.0], [30.1, 167048.0], [30.2, 167899.0], [30.3, 167899.0], [30.4, 168091.0], [30.5, 168091.0], [30.6, 168373.0], [30.7, 168373.0], [30.8, 168497.0], [30.9, 168497.0], [31.0, 171322.0], [31.1, 171322.0], [31.2, 172852.0], [31.3, 172852.0], [31.4, 173278.0], [31.5, 173278.0], [31.6, 173537.0], [31.7, 173537.0], [31.8, 175950.0], [31.9, 175950.0], [32.0, 176757.0], [32.1, 176757.0], [32.2, 176774.0], [32.3, 176774.0], [32.4, 178241.0], [32.5, 178241.0], [32.6, 179532.0], [32.7, 179532.0], [32.8, 179952.0], [32.9, 179952.0], [33.0, 181015.0], [33.1, 181015.0], [33.2, 184978.0], [33.3, 184978.0], [33.4, 185011.0], [33.5, 185011.0], [33.6, 186703.0], [33.7, 186703.0], [33.8, 187050.0], [33.9, 187050.0], [34.0, 187507.0], [34.1, 187507.0], [34.2, 188015.0], [34.3, 188015.0], [34.4, 188621.0], [34.5, 188621.0], [34.6, 189919.0], [34.7, 189919.0], [34.8, 191919.0], [34.9, 191919.0], [35.0, 193169.0], [35.1, 193169.0], [35.2, 194550.0], [35.3, 194550.0], [35.4, 195844.0], [35.5, 195844.0], [35.6, 195908.0], [35.7, 195908.0], [35.8, 196451.0], [35.9, 196451.0], [36.0, 197203.0], [36.1, 197203.0], [36.2, 197331.0], [36.3, 197331.0], [36.4, 199461.0], [36.5, 199461.0], [36.6, 200120.0], [36.7, 200120.0], [36.8, 200621.0], [36.9, 200621.0], [37.0, 203289.0], [37.1, 203289.0], [37.2, 203640.0], [37.3, 203640.0], [37.4, 204844.0], [37.5, 204844.0], [37.6, 205091.0], [37.7, 205091.0], [37.8, 207870.0], [37.9, 207870.0], [38.0, 208038.0], [38.1, 208038.0], [38.2, 208437.0], [38.3, 208437.0], [38.4, 208437.0], [38.5, 209126.0], [38.6, 209126.0], [38.7, 210187.0], [38.8, 210187.0], [38.9, 211680.0], [39.0, 211680.0], [39.1, 212724.0], [39.2, 212724.0], [39.3, 213716.0], [39.4, 213716.0], [39.5, 215196.0], [39.6, 215196.0], [39.7, 215379.0], [39.8, 215379.0], [39.9, 216113.0], [40.0, 216113.0], [40.1, 216824.0], [40.2, 216824.0], [40.3, 218046.0], [40.4, 218046.0], [40.5, 218129.0], [40.6, 218129.0], [40.7, 219399.0], [40.8, 219399.0], [40.9, 221758.0], [41.0, 221758.0], [41.1, 224372.0], [41.2, 224372.0], [41.3, 224406.0], [41.4, 224406.0], [41.5, 224557.0], [41.6, 224557.0], [41.7, 224606.0], [41.8, 224606.0], [41.9, 225679.0], [42.0, 225679.0], [42.1, 226110.0], [42.2, 226110.0], [42.3, 226186.0], [42.4, 226186.0], [42.5, 232773.0], [42.6, 232773.0], [42.7, 233154.0], [42.8, 233154.0], [42.9, 233877.0], [43.0, 233877.0], [43.1, 235827.0], [43.2, 235827.0], [43.3, 236292.0], [43.4, 236292.0], [43.5, 237837.0], [43.6, 237837.0], [43.7, 238511.0], [43.8, 238511.0], [43.9, 238638.0], [44.0, 238638.0], [44.1, 238903.0], [44.2, 238903.0], [44.3, 242433.0], [44.4, 242433.0], [44.5, 242505.0], [44.6, 242505.0], [44.7, 242639.0], [44.8, 242639.0], [44.9, 243152.0], [45.0, 243152.0], [45.1, 243964.0], [45.2, 243964.0], [45.3, 243989.0], [45.4, 243989.0], [45.5, 247147.0], [45.6, 247147.0], [45.7, 247696.0], [45.8, 247696.0], [45.9, 248554.0], [46.0, 248554.0], [46.1, 248763.0], [46.2, 248763.0], [46.3, 248920.0], [46.4, 248920.0], [46.5, 249704.0], [46.6, 249704.0], [46.7, 251136.0], [46.8, 251136.0], [46.9, 251627.0], [47.0, 251627.0], [47.1, 252947.0], [47.2, 252947.0], [47.3, 253761.0], [47.4, 253761.0], [47.5, 255692.0], [47.6, 255692.0], [47.7, 255923.0], [47.8, 255923.0], [47.9, 257151.0], [48.0, 257151.0], [48.1, 257446.0], [48.2, 257446.0], [48.3, 257886.0], [48.4, 257886.0], [48.5, 258099.0], [48.6, 258099.0], [48.7, 258217.0], [48.8, 258217.0], [48.9, 259879.0], [49.0, 259879.0], [49.1, 264263.0], [49.2, 264263.0], [49.3, 264581.0], [49.4, 264581.0], [49.5, 265785.0], [49.6, 265785.0], [49.7, 266136.0], [49.8, 266136.0], [49.9, 266279.0], [50.0, 266279.0], [50.1, 266288.0], [50.2, 266288.0], [50.3, 266969.0], [50.4, 266969.0], [50.5, 267131.0], [50.6, 267131.0], [50.7, 267665.0], [50.8, 267665.0], [50.9, 271448.0], [51.0, 271448.0], [51.1, 272804.0], [51.2, 272804.0], [51.3, 273991.0], [51.4, 273991.0], [51.5, 274047.0], [51.6, 274047.0], [51.7, 274579.0], [51.8, 274579.0], [51.9, 274615.0], [52.0, 274615.0], [52.1, 275563.0], [52.2, 275563.0], [52.3, 275830.0], [52.4, 275830.0], [52.5, 276162.0], [52.6, 276162.0], [52.7, 277987.0], [52.8, 277987.0], [52.9, 281084.0], [53.0, 281084.0], [53.1, 282338.0], [53.2, 282338.0], [53.3, 282766.0], [53.4, 282766.0], [53.5, 283454.0], [53.6, 283454.0], [53.7, 283533.0], [53.8, 283533.0], [53.9, 285866.0], [54.0, 285866.0], [54.1, 286015.0], [54.2, 286015.0], [54.3, 286020.0], [54.4, 286020.0], [54.5, 286134.0], [54.6, 286134.0], [54.7, 289085.0], [54.8, 289085.0], [54.9, 289728.0], [55.0, 289728.0], [55.1, 290120.0], [55.2, 290120.0], [55.3, 290254.0], [55.4, 290254.0], [55.5, 291412.0], [55.6, 291412.0], [55.7, 293438.0], [55.8, 293438.0], [55.9, 294598.0], [56.0, 294598.0], [56.1, 295334.0], [56.2, 295334.0], [56.3, 295430.0], [56.4, 295430.0], [56.5, 295468.0], [56.6, 295468.0], [56.7, 296749.0], [56.8, 296749.0], [56.9, 298189.0], [57.0, 298189.0], [57.1, 299560.0], [57.2, 299560.0], [57.3, 299881.0], [57.4, 299881.0], [57.5, 301601.0], [57.6, 301601.0], [57.7, 301754.0], [57.8, 301754.0], [57.9, 301955.0], [58.0, 301955.0], [58.1, 304878.0], [58.2, 304878.0], [58.3, 304934.0], [58.4, 304934.0], [58.5, 306328.0], [58.6, 306328.0], [58.7, 306345.0], [58.8, 306345.0], [58.9, 308166.0], [59.0, 308166.0], [59.1, 308301.0], [59.2, 308301.0], [59.3, 308733.0], [59.4, 308733.0], [59.5, 309758.0], [59.6, 309758.0], [59.7, 311276.0], [59.8, 311276.0], [59.9, 311715.0], [60.0, 311715.0], [60.1, 311779.0], [60.2, 311779.0], [60.3, 314414.0], [60.4, 314414.0], [60.5, 315662.0], [60.6, 315662.0], [60.7, 316034.0], [60.8, 316034.0], [60.9, 316700.0], [61.0, 316700.0], [61.1, 316828.0], [61.2, 316828.0], [61.3, 317914.0], [61.4, 317914.0], [61.5, 319690.0], [61.6, 319690.0], [61.7, 319862.0], [61.8, 319862.0], [61.9, 320436.0], [62.0, 320436.0], [62.1, 320746.0], [62.2, 320746.0], [62.3, 321406.0], [62.4, 321406.0], [62.5, 322420.0], [62.6, 322420.0], [62.7, 322575.0], [62.8, 322575.0], [62.9, 324841.0], [63.0, 324841.0], [63.1, 326498.0], [63.2, 326498.0], [63.3, 326687.0], [63.4, 326687.0], [63.5, 327240.0], [63.6, 327240.0], [63.7, 328402.0], [63.8, 328402.0], [63.9, 328433.0], [64.0, 328433.0], [64.1, 329879.0], [64.2, 329879.0], [64.3, 331896.0], [64.4, 331896.0], [64.5, 332077.0], [64.6, 332077.0], [64.7, 332130.0], [64.8, 332130.0], [64.9, 332882.0], [65.0, 332882.0], [65.1, 333643.0], [65.2, 333643.0], [65.3, 335061.0], [65.4, 335061.0], [65.5, 338073.0], [65.6, 338073.0], [65.7, 338867.0], [65.8, 338867.0], [65.9, 339236.0], [66.0, 339236.0], [66.1, 339570.0], [66.2, 339570.0], [66.3, 339999.0], [66.4, 339999.0], [66.5, 340848.0], [66.6, 340848.0], [66.7, 341160.0], [66.8, 341160.0], [66.9, 342281.0], [67.0, 342281.0], [67.1, 344366.0], [67.2, 344366.0], [67.3, 344453.0], [67.4, 344453.0], [67.5, 345807.0], [67.6, 345807.0], [67.7, 347108.0], [67.8, 347108.0], [67.9, 348189.0], [68.0, 348189.0], [68.1, 349526.0], [68.2, 349526.0], [68.3, 349554.0], [68.4, 349554.0], [68.5, 350321.0], [68.6, 350321.0], [68.7, 350447.0], [68.8, 350447.0], [68.9, 350583.0], [69.0, 350583.0], [69.1, 351182.0], [69.2, 351182.0], [69.3, 355319.0], [69.4, 355319.0], [69.5, 355383.0], [69.6, 355383.0], [69.7, 355480.0], [69.8, 355480.0], [69.9, 356808.0], [70.0, 356808.0], [70.1, 356904.0], [70.2, 356904.0], [70.3, 356909.0], [70.4, 356909.0], [70.5, 357750.0], [70.6, 357750.0], [70.7, 358529.0], [70.8, 358529.0], [70.9, 359658.0], [71.0, 359658.0], [71.1, 361775.0], [71.2, 361775.0], [71.3, 362301.0], [71.4, 362301.0], [71.5, 362865.0], [71.6, 362865.0], [71.7, 363234.0], [71.8, 363234.0], [71.9, 365850.0], [72.0, 365850.0], [72.1, 366095.0], [72.2, 366095.0], [72.3, 366501.0], [72.4, 366501.0], [72.5, 367705.0], [72.6, 367705.0], [72.7, 367920.0], [72.8, 367920.0], [72.9, 369757.0], [73.0, 369757.0], [73.1, 370187.0], [73.2, 370187.0], [73.3, 371193.0], [73.4, 371193.0], [73.5, 373437.0], [73.6, 373437.0], [73.7, 373508.0], [73.8, 373508.0], [73.9, 373955.0], [74.0, 373955.0], [74.1, 374084.0], [74.2, 374084.0], [74.3, 375880.0], [74.4, 375880.0], [74.5, 375907.0], [74.6, 375907.0], [74.7, 378694.0], [74.8, 378694.0], [74.9, 378731.0], [75.0, 378731.0], [75.1, 379316.0], [75.2, 379316.0], [75.3, 380444.0], [75.4, 380444.0], [75.5, 380475.0], [75.6, 380475.0], [75.7, 381877.0], [75.8, 381877.0], [75.9, 382922.0], [76.0, 382922.0], [76.1, 384408.0], [76.2, 384408.0], [76.3, 384984.0], [76.4, 384984.0], [76.5, 385212.0], [76.6, 385212.0], [76.7, 385959.0], [76.8, 385959.0], [76.9, 386519.0], [77.0, 386519.0], [77.1, 387680.0], [77.2, 387680.0], [77.3, 388314.0], [77.4, 388314.0], [77.5, 390756.0], [77.6, 390756.0], [77.7, 392297.0], [77.8, 392297.0], [77.9, 392526.0], [78.0, 392526.0], [78.1, 392609.0], [78.2, 392609.0], [78.3, 393090.0], [78.4, 393090.0], [78.5, 393549.0], [78.6, 393549.0], [78.7, 396393.0], [78.8, 396393.0], [78.9, 398485.0], [79.0, 398485.0], [79.1, 399475.0], [79.2, 399475.0], [79.3, 399608.0], [79.4, 399608.0], [79.5, 400822.0], [79.6, 400822.0], [79.7, 401203.0], [79.8, 401203.0], [79.9, 401254.0], [80.0, 401254.0], [80.1, 403010.0], [80.2, 403010.0], [80.3, 404375.0], [80.4, 404375.0], [80.5, 405724.0], [80.6, 405724.0], [80.7, 406624.0], [80.8, 406624.0], [80.9, 406889.0], [81.0, 406889.0], [81.1, 407999.0], [81.2, 407999.0], [81.3, 408908.0], [81.4, 408908.0], [81.5, 411193.0], [81.6, 411193.0], [81.7, 412030.0], [81.8, 412030.0], [81.9, 413694.0], [82.0, 413694.0], [82.1, 414568.0], [82.2, 414568.0], [82.3, 414923.0], [82.4, 414923.0], [82.5, 415801.0], [82.6, 415801.0], [82.7, 416855.0], [82.8, 416855.0], [82.9, 417725.0], [83.0, 417725.0], [83.1, 417878.0], [83.2, 417878.0], [83.3, 418487.0], [83.4, 418487.0], [83.5, 419940.0], [83.6, 419940.0], [83.7, 420777.0], [83.8, 420777.0], [83.9, 421573.0], [84.0, 421573.0], [84.1, 424045.0], [84.2, 424045.0], [84.3, 424505.0], [84.4, 424505.0], [84.5, 424690.0], [84.6, 424690.0], [84.7, 424723.0], [84.8, 424723.0], [84.9, 426650.0], [85.0, 426650.0], [85.1, 428535.0], [85.2, 428535.0], [85.3, 429473.0], [85.4, 429473.0], [85.5, 431401.0], [85.6, 431401.0], [85.7, 431460.0], [85.8, 431460.0], [85.9, 431545.0], [86.0, 431545.0], [86.1, 431960.0], [86.2, 431960.0], [86.3, 432212.0], [86.4, 432212.0], [86.5, 433321.0], [86.6, 433321.0], [86.7, 434748.0], [86.8, 434748.0], [86.9, 438002.0], [87.0, 438002.0], [87.1, 438023.0], [87.2, 438023.0], [87.3, 438417.0], [87.4, 438417.0], [87.5, 438683.0], [87.6, 438683.0], [87.7, 438775.0], [87.8, 438775.0], [87.9, 440440.0], [88.0, 440440.0], [88.1, 440948.0], [88.2, 440948.0], [88.3, 441722.0], [88.4, 441722.0], [88.5, 441837.0], [88.6, 441837.0], [88.7, 443407.0], [88.8, 443407.0], [88.9, 445145.0], [89.0, 445145.0], [89.1, 446603.0], [89.2, 446603.0], [89.3, 447445.0], [89.4, 447445.0], [89.5, 448813.0], [89.6, 448813.0], [89.7, 449132.0], [89.8, 449132.0], [89.9, 449773.0], [90.0, 449773.0], [90.1, 450085.0], [90.2, 450085.0], [90.3, 451583.0], [90.4, 451583.0], [90.5, 452706.0], [90.6, 452706.0], [90.7, 453112.0], [90.8, 453112.0], [90.9, 453672.0], [91.0, 453672.0], [91.1, 456520.0], [91.2, 456520.0], [91.3, 456645.0], [91.4, 456645.0], [91.5, 456767.0], [91.6, 456767.0], [91.7, 457410.0], [91.8, 457410.0], [91.9, 459373.0], [92.0, 459373.0], [92.1, 459875.0], [92.2, 459875.0], [92.3, 460002.0], [92.4, 460002.0], [92.5, 460378.0], [92.6, 460378.0], [92.7, 461120.0], [92.8, 461120.0], [92.9, 464149.0], [93.0, 464149.0], [93.1, 464544.0], [93.2, 464544.0], [93.3, 465108.0], [93.4, 465108.0], [93.5, 465391.0], [93.6, 465391.0], [93.7, 465594.0], [93.8, 465594.0], [93.9, 466263.0], [94.0, 466263.0], [94.1, 466426.0], [94.2, 466426.0], [94.3, 466884.0], [94.4, 466884.0], [94.5, 470566.0], [94.6, 470566.0], [94.7, 471695.0], [94.8, 471695.0], [94.9, 471993.0], [95.0, 471993.0], [95.1, 473379.0], [95.2, 473379.0], [95.3, 473783.0], [95.4, 473783.0], [95.5, 474059.0], [95.6, 474059.0], [95.7, 474736.0], [95.8, 474736.0], [95.9, 475372.0], [96.0, 475372.0], [96.1, 476057.0], [96.2, 476057.0], [96.3, 478955.0], [96.4, 478955.0], [96.5, 480470.0], [96.6, 480470.0], [96.7, 480811.0], [96.8, 480811.0], [96.9, 481101.0], [97.0, 481101.0], [97.1, 482361.0], [97.2, 482361.0], [97.3, 482819.0], [97.4, 482819.0], [97.5, 484191.0], [97.6, 484191.0], [97.7, 484827.0], [97.8, 484827.0], [97.9, 488075.0], [98.0, 488075.0], [98.1, 488230.0], [98.2, 488230.0], [98.3, 489399.0], [98.4, 489399.0], [98.5, 489499.0], [98.6, 489499.0], [98.7, 490972.0], [98.8, 490972.0], [98.9, 491242.0], [99.0, 491242.0], [99.1, 492948.0], [99.2, 492948.0], [99.3, 493483.0], [99.4, 493483.0], [99.5, 494641.0], [99.6, 494641.0], [99.7, 495725.0], [99.8, 495725.0], [99.9, 497933.0], [100.0, 497933.0]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[0.0, 2070.0], [0.1, 2070.0], [0.2, 2376.0], [0.3, 2376.0], [0.4, 2381.0], [0.5, 2381.0], [0.6, 2381.0], [0.7, 2500.0], [0.8, 2524.0], [0.9, 2524.0], [1.0, 2533.0], [1.1, 2533.0], [1.2, 2600.0], [1.3, 2600.0], [1.4, 2625.0], [1.5, 2625.0], [1.6, 2724.0], [1.7, 2724.0], [1.8, 2769.0], [1.9, 2769.0], [2.0, 2795.0], [2.1, 2795.0], [2.2, 2933.0], [2.3, 2933.0], [2.4, 2936.0], [2.5, 2936.0], [2.6, 3095.0], [2.7, 3095.0], [2.8, 3095.0], [2.9, 3113.0], [3.0, 3113.0], [3.1, 3214.0], [3.2, 3214.0], [3.3, 3227.0], [3.4, 3227.0], [3.5, 3291.0], [3.6, 3291.0], [3.7, 3374.0], [3.8, 3374.0], [3.9, 3469.0], [4.0, 3469.0], [4.1, 3494.0], [4.2, 3494.0], [4.3, 3521.0], [4.4, 3521.0], [4.5, 3560.0], [4.6, 3560.0], [4.7, 3560.0], [4.8, 3560.0], [4.9, 3572.0], [5.0, 3572.0], [5.1, 3612.0], [5.2, 3612.0], [5.3, 3633.0], [5.4, 3633.0], [5.5, 3656.0], [5.6, 3656.0], [5.7, 3675.0], [5.8, 3675.0], [5.9, 3799.0], [6.0, 3799.0], [6.1, 3803.0], [6.2, 3803.0], [6.3, 3809.0], [6.4, 3809.0], [6.5, 3822.0], [6.6, 3822.0], [6.7, 3835.0], [6.8, 3835.0], [6.9, 3838.0], [7.0, 3838.0], [7.1, 3841.0], [7.2, 3841.0], [7.3, 3843.0], [7.4, 3843.0], [7.5, 3843.0], [7.6, 3843.0], [7.7, 3859.0], [7.8, 3859.0], [7.9, 3902.0], [8.0, 3902.0], [8.1, 3905.0], [8.2, 3905.0], [8.3, 3988.0], [8.4, 3988.0], [8.5, 4014.0], [8.6, 4014.0], [8.7, 4034.0], [8.8, 4118.0], [8.9, 4118.0], [9.0, 4177.0], [9.1, 4177.0], [9.2, 4278.0], [9.3, 4278.0], [9.4, 4293.0], [9.5, 4293.0], [9.6, 4318.0], [9.7, 4318.0], [9.8, 4321.0], [9.9, 4321.0], [10.0, 4413.0], [10.1, 4413.0], [10.2, 4414.0], [10.3, 4414.0], [10.4, 4489.0], [10.5, 4489.0], [10.6, 4612.0], [10.7, 4612.0], [10.8, 4614.0], [10.9, 4614.0], [11.0, 4625.0], [11.1, 4625.0], [11.2, 4640.0], [11.3, 4640.0], [11.4, 4645.0], [11.5, 4645.0], [11.6, 4655.0], [11.7, 4655.0], [11.8, 4675.0], [11.9, 4675.0], [12.0, 4745.0], [12.1, 4745.0], [12.2, 4764.0], [12.3, 4764.0], [12.4, 4974.0], [12.5, 4974.0], [12.6, 5010.0], [12.7, 5010.0], [12.8, 5040.0], [12.9, 5040.0], [13.0, 5043.0], [13.1, 5043.0], [13.2, 5066.0], [13.3, 5066.0], [13.4, 5114.0], [13.5, 5114.0], [13.6, 5131.0], [13.7, 5131.0], [13.8, 5246.0], [13.9, 5246.0], [14.0, 5271.0], [14.1, 5271.0], [14.2, 5298.0], [14.3, 5298.0], [14.4, 5416.0], [14.5, 5416.0], [14.6, 5431.0], [14.7, 5431.0], [14.8, 5431.0], [14.9, 5431.0], [15.0, 5434.0], [15.1, 5434.0], [15.2, 5548.0], [15.3, 5548.0], [15.4, 5601.0], [15.5, 5601.0], [15.6, 5605.0], [15.7, 5605.0], [15.8, 5619.0], [15.9, 5619.0], [16.0, 5638.0], [16.1, 5638.0], [16.2, 5642.0], [16.3, 5642.0], [16.4, 5660.0], [16.5, 5660.0], [16.6, 5706.0], [16.7, 5706.0], [16.8, 5717.0], [16.9, 5717.0], [17.0, 5819.0], [17.1, 5819.0], [17.2, 5822.0], [17.3, 5822.0], [17.4, 5880.0], [17.5, 5880.0], [17.6, 5889.0], [17.7, 5889.0], [17.8, 5898.0], [17.9, 5898.0], [18.0, 5901.0], [18.1, 5901.0], [18.2, 5914.0], [18.3, 5914.0], [18.4, 5926.0], [18.5, 5926.0], [18.6, 5996.0], [18.7, 5996.0], [18.8, 6013.0], [18.9, 6013.0], [19.0, 6080.0], [19.1, 6080.0], [19.2, 6093.0], [19.3, 6093.0], [19.4, 6133.0], [19.5, 6133.0], [19.6, 6149.0], [19.7, 6149.0], [19.8, 6151.0], [19.9, 6151.0], [20.0, 6164.0], [20.1, 6164.0], [20.2, 6169.0], [20.3, 6169.0], [20.4, 6179.0], [20.5, 6179.0], [20.6, 6210.0], [20.7, 6210.0], [20.8, 6219.0], [20.9, 6219.0], [21.0, 6229.0], [21.1, 6229.0], [21.2, 6334.0], [21.3, 6334.0], [21.4, 6338.0], [21.5, 6338.0], [21.6, 6343.0], [21.7, 6343.0], [21.8, 6355.0], [21.9, 6355.0], [22.0, 6357.0], [22.1, 6357.0], [22.2, 6363.0], [22.3, 6363.0], [22.4, 6382.0], [22.5, 6382.0], [22.6, 6404.0], [22.7, 6404.0], [22.8, 6436.0], [22.9, 6436.0], [23.0, 6471.0], [23.1, 6471.0], [23.2, 6471.0], [23.3, 6471.0], [23.4, 6474.0], [23.5, 6474.0], [23.6, 6499.0], [23.7, 6499.0], [23.8, 6500.0], [23.9, 6500.0], [24.0, 6553.0], [24.1, 6553.0], [24.2, 6571.0], [24.3, 6571.0], [24.4, 6597.0], [24.5, 6597.0], [24.6, 6598.0], [24.7, 6598.0], [24.8, 6605.0], [24.9, 6605.0], [25.0, 6628.0], [25.1, 6628.0], [25.2, 6631.0], [25.3, 6631.0], [25.4, 6642.0], [25.5, 6642.0], [25.6, 6664.0], [25.7, 6664.0], [25.8, 6689.0], [25.9, 6689.0], [26.0, 6709.0], [26.1, 6709.0], [26.2, 6716.0], [26.3, 6716.0], [26.4, 6716.0], [26.5, 6716.0], [26.6, 6718.0], [26.7, 6718.0], [26.8, 6761.0], [26.9, 6761.0], [27.0, 6764.0], [27.1, 6764.0], [27.2, 6764.0], [27.3, 6764.0], [27.4, 6767.0], [27.5, 6767.0], [27.6, 6791.0], [27.7, 6791.0], [27.8, 6812.0], [27.9, 6812.0], [28.0, 6830.0], [28.1, 6830.0], [28.2, 6830.0], [28.3, 6830.0], [28.4, 6844.0], [28.5, 6844.0], [28.6, 6869.0], [28.7, 6869.0], [28.8, 6870.0], [28.9, 6870.0], [29.0, 6871.0], [29.1, 6871.0], [29.2, 6885.0], [29.3, 6885.0], [29.4, 6916.0], [29.5, 6916.0], [29.6, 6919.0], [29.7, 6919.0], [29.8, 6945.0], [29.9, 6945.0], [30.0, 6949.0], [30.1, 6949.0], [30.2, 6987.0], [30.3, 6987.0], [30.4, 6997.0], [30.5, 6997.0], [30.6, 7004.0], [30.7, 7004.0], [30.8, 7022.0], [30.9, 7022.0], [31.0, 7028.0], [31.1, 7028.0], [31.2, 7032.0], [31.3, 7032.0], [31.4, 7036.0], [31.5, 7036.0], [31.6, 7047.0], [31.7, 7047.0], [31.8, 7047.0], [31.9, 7047.0], [32.0, 7056.0], [32.1, 7056.0], [32.2, 7065.0], [32.3, 7065.0], [32.4, 7080.0], [32.5, 7080.0], [32.6, 7102.0], [32.7, 7102.0], [32.8, 7104.0], [32.9, 7104.0], [33.0, 7121.0], [33.1, 7121.0], [33.2, 7125.0], [33.3, 7125.0], [33.4, 7138.0], [33.5, 7138.0], [33.6, 7139.0], [33.7, 7139.0], [33.8, 7200.0], [33.9, 7200.0], [34.0, 7206.0], [34.1, 7206.0], [34.2, 7213.0], [34.3, 7213.0], [34.4, 7217.0], [34.5, 7217.0], [34.6, 7220.0], [34.7, 7220.0], [34.8, 7233.0], [34.9, 7233.0], [35.0, 7252.0], [35.1, 7252.0], [35.2, 7255.0], [35.3, 7255.0], [35.4, 7261.0], [35.5, 7261.0], [35.6, 7284.0], [35.7, 7284.0], [35.8, 7289.0], [35.9, 7289.0], [36.0, 7312.0], [36.1, 7312.0], [36.2, 7313.0], [36.3, 7313.0], [36.4, 7320.0], [36.5, 7320.0], [36.6, 7362.0], [36.7, 7362.0], [36.8, 7375.0], [36.9, 7375.0], [37.0, 7382.0], [37.1, 7382.0], [37.2, 7413.0], [37.3, 7413.0], [37.4, 7430.0], [37.5, 7430.0], [37.6, 7430.0], [37.7, 7430.0], [37.8, 7445.0], [37.9, 7445.0], [38.0, 7457.0], [38.1, 7457.0], [38.2, 7459.0], [38.3, 7459.0], [38.4, 7459.0], [38.5, 7474.0], [38.6, 7474.0], [38.7, 7477.0], [38.8, 7477.0], [38.9, 7490.0], [39.0, 7490.0], [39.1, 7495.0], [39.2, 7495.0], [39.3, 7501.0], [39.4, 7501.0], [39.5, 7505.0], [39.6, 7505.0], [39.7, 7509.0], [39.8, 7509.0], [39.9, 7514.0], [40.0, 7514.0], [40.1, 7521.0], [40.2, 7521.0], [40.3, 7524.0], [40.4, 7524.0], [40.5, 7535.0], [40.6, 7535.0], [40.7, 7538.0], [40.8, 7538.0], [40.9, 7542.0], [41.0, 7542.0], [41.1, 7566.0], [41.2, 7566.0], [41.3, 7569.0], [41.4, 7569.0], [41.5, 7570.0], [41.6, 7570.0], [41.7, 7583.0], [41.8, 7583.0], [41.9, 7650.0], [42.0, 7650.0], [42.1, 7666.0], [42.2, 7666.0], [42.3, 7676.0], [42.4, 7676.0], [42.5, 7685.0], [42.6, 7685.0], [42.7, 7703.0], [42.8, 7703.0], [42.9, 7717.0], [43.0, 7717.0], [43.1, 7721.0], [43.2, 7721.0], [43.3, 7738.0], [43.4, 7738.0], [43.5, 7739.0], [43.6, 7739.0], [43.7, 7815.0], [43.8, 7815.0], [43.9, 7820.0], [44.0, 7820.0], [44.1, 7839.0], [44.2, 7839.0], [44.3, 7848.0], [44.4, 7848.0], [44.5, 7848.0], [44.6, 7848.0], [44.7, 7862.0], [44.8, 7862.0], [44.9, 7868.0], [45.0, 7868.0], [45.1, 7883.0], [45.2, 7883.0], [45.3, 7887.0], [45.4, 7887.0], [45.5, 7897.0], [45.6, 7897.0], [45.7, 7917.0], [45.8, 7917.0], [45.9, 7946.0], [46.0, 7946.0], [46.1, 7954.0], [46.2, 7954.0], [46.3, 7972.0], [46.4, 7972.0], [46.5, 7973.0], [46.6, 7973.0], [46.7, 8039.0], [46.8, 8039.0], [46.9, 8052.0], [47.0, 8052.0], [47.1, 8061.0], [47.2, 8061.0], [47.3, 8065.0], [47.4, 8065.0], [47.5, 8081.0], [47.6, 8081.0], [47.7, 8085.0], [47.8, 8085.0], [47.9, 8101.0], [48.0, 8101.0], [48.1, 8113.0], [48.2, 8113.0], [48.3, 8117.0], [48.4, 8117.0], [48.5, 8126.0], [48.6, 8126.0], [48.7, 8142.0], [48.8, 8142.0], [48.9, 8153.0], [49.0, 8153.0], [49.1, 8177.0], [49.2, 8177.0], [49.3, 8207.0], [49.4, 8207.0], [49.5, 8219.0], [49.6, 8219.0], [49.7, 8251.0], [49.8, 8251.0], [49.9, 8263.0], [50.0, 8263.0], [50.1, 8310.0], [50.2, 8310.0], [50.3, 8315.0], [50.4, 8315.0], [50.5, 8318.0], [50.6, 8318.0], [50.7, 8319.0], [50.8, 8319.0], [50.9, 8329.0], [51.0, 8329.0], [51.1, 8339.0], [51.2, 8339.0], [51.3, 8348.0], [51.4, 8348.0], [51.5, 8361.0], [51.6, 8361.0], [51.7, 8382.0], [51.8, 8382.0], [51.9, 8388.0], [52.0, 8388.0], [52.1, 8403.0], [52.2, 8403.0], [52.3, 8404.0], [52.4, 8404.0], [52.5, 8406.0], [52.6, 8406.0], [52.7, 8433.0], [52.8, 8433.0], [52.9, 8485.0], [53.0, 8485.0], [53.1, 8507.0], [53.2, 8507.0], [53.3, 8515.0], [53.4, 8515.0], [53.5, 8517.0], [53.6, 8517.0], [53.7, 8522.0], [53.8, 8522.0], [53.9, 8541.0], [54.0, 8541.0], [54.1, 8549.0], [54.2, 8549.0], [54.3, 8556.0], [54.4, 8556.0], [54.5, 8558.0], [54.6, 8558.0], [54.7, 8566.0], [54.8, 8566.0], [54.9, 8582.0], [55.0, 8582.0], [55.1, 8588.0], [55.2, 8588.0], [55.3, 8602.0], [55.4, 8602.0], [55.5, 8602.0], [55.6, 8602.0], [55.7, 8633.0], [55.8, 8633.0], [55.9, 8635.0], [56.0, 8635.0], [56.1, 8667.0], [56.2, 8667.0], [56.3, 8679.0], [56.4, 8679.0], [56.5, 8689.0], [56.6, 8689.0], [56.7, 8709.0], [56.8, 8709.0], [56.9, 8711.0], [57.0, 8711.0], [57.1, 8739.0], [57.2, 8739.0], [57.3, 8744.0], [57.4, 8744.0], [57.5, 8765.0], [57.6, 8765.0], [57.7, 8766.0], [57.8, 8766.0], [57.9, 8787.0], [58.0, 8787.0], [58.1, 8823.0], [58.2, 8823.0], [58.3, 8868.0], [58.4, 8868.0], [58.5, 8872.0], [58.6, 8872.0], [58.7, 8875.0], [58.8, 8875.0], [58.9, 8913.0], [59.0, 8913.0], [59.1, 8924.0], [59.2, 8924.0], [59.3, 8961.0], [59.4, 8961.0], [59.5, 8990.0], [59.6, 8990.0], [59.7, 8993.0], [59.8, 8993.0], [59.9, 8994.0], [60.0, 8994.0], [60.1, 8995.0], [60.2, 8995.0], [60.3, 9008.0], [60.4, 9008.0], [60.5, 9019.0], [60.6, 9019.0], [60.7, 9019.0], [60.8, 9019.0], [60.9, 9031.0], [61.0, 9031.0], [61.1, 9038.0], [61.2, 9038.0], [61.3, 9055.0], [61.4, 9055.0], [61.5, 9086.0], [61.6, 9086.0], [61.7, 9102.0], [61.8, 9102.0], [61.9, 9104.0], [62.0, 9104.0], [62.1, 9110.0], [62.2, 9110.0], [62.3, 9124.0], [62.4, 9124.0], [62.5, 9129.0], [62.6, 9129.0], [62.7, 9136.0], [62.8, 9136.0], [62.9, 9160.0], [63.0, 9160.0], [63.1, 9168.0], [63.2, 9168.0], [63.3, 9173.0], [63.4, 9173.0], [63.5, 9178.0], [63.6, 9178.0], [63.7, 9192.0], [63.8, 9192.0], [63.9, 9225.0], [64.0, 9225.0], [64.1, 9235.0], [64.2, 9235.0], [64.3, 9280.0], [64.4, 9280.0], [64.5, 9293.0], [64.6, 9293.0], [64.7, 9299.0], [64.8, 9299.0], [64.9, 9301.0], [65.0, 9301.0], [65.1, 9301.0], [65.2, 9301.0], [65.3, 9312.0], [65.4, 9312.0], [65.5, 9312.0], [65.6, 9312.0], [65.7, 9350.0], [65.8, 9350.0], [65.9, 9357.0], [66.0, 9357.0], [66.1, 9372.0], [66.2, 9372.0], [66.3, 9390.0], [66.4, 9390.0], [66.5, 9441.0], [66.6, 9441.0], [66.7, 9450.0], [66.8, 9450.0], [66.9, 9463.0], [67.0, 9463.0], [67.1, 9464.0], [67.2, 9464.0], [67.3, 9488.0], [67.4, 9488.0], [67.5, 9541.0], [67.6, 9541.0], [67.7, 9545.0], [67.8, 9545.0], [67.9, 9563.0], [68.0, 9563.0], [68.1, 9564.0], [68.2, 9564.0], [68.3, 9594.0], [68.4, 9594.0], [68.5, 9595.0], [68.6, 9595.0], [68.7, 9599.0], [68.8, 9599.0], [68.9, 9603.0], [69.0, 9603.0], [69.1, 9613.0], [69.2, 9613.0], [69.3, 9645.0], [69.4, 9645.0], [69.5, 9657.0], [69.6, 9657.0], [69.7, 9671.0], [69.8, 9671.0], [69.9, 9672.0], [70.0, 9672.0], [70.1, 9704.0], [70.2, 9704.0], [70.3, 9743.0], [70.4, 9743.0], [70.5, 9750.0], [70.6, 9750.0], [70.7, 9752.0], [70.8, 9752.0], [70.9, 9768.0], [71.0, 9768.0], [71.1, 9782.0], [71.2, 9782.0], [71.3, 9782.0], [71.4, 9782.0], [71.5, 9785.0], [71.6, 9785.0], [71.7, 9833.0], [71.8, 9833.0], [71.9, 9840.0], [72.0, 9840.0], [72.1, 9842.0], [72.2, 9842.0], [72.3, 9850.0], [72.4, 9850.0], [72.5, 9877.0], [72.6, 9877.0], [72.7, 9883.0], [72.8, 9883.0], [72.9, 9894.0], [73.0, 9894.0], [73.1, 9912.0], [73.2, 9912.0], [73.3, 9922.0], [73.4, 9922.0], [73.5, 9943.0], [73.6, 9943.0], [73.7, 9967.0], [73.8, 9967.0], [73.9, 9982.0], [74.0, 9982.0], [74.1, 10007.0], [74.2, 10007.0], [74.3, 10008.0], [74.4, 10008.0], [74.5, 10012.0], [74.6, 10012.0], [74.7, 10029.0], [74.8, 10029.0], [74.9, 10062.0], [75.0, 10062.0], [75.1, 10147.0], [75.2, 10147.0], [75.3, 10151.0], [75.4, 10151.0], [75.5, 10185.0], [75.6, 10185.0], [75.7, 10193.0], [75.8, 10193.0], [75.9, 10218.0], [76.0, 10218.0], [76.1, 10235.0], [76.2, 10235.0], [76.3, 10240.0], [76.4, 10240.0], [76.5, 10249.0], [76.6, 10249.0], [76.7, 10259.0], [76.8, 10259.0], [76.9, 10268.0], [77.0, 10268.0], [77.1, 10420.0], [77.2, 10420.0], [77.3, 10425.0], [77.4, 10425.0], [77.5, 10432.0], [77.6, 10432.0], [77.7, 10467.0], [77.8, 10467.0], [77.9, 10468.0], [78.0, 10468.0], [78.1, 10522.0], [78.2, 10522.0], [78.3, 10551.0], [78.4, 10551.0], [78.5, 10573.0], [78.6, 10573.0], [78.7, 10577.0], [78.8, 10577.0], [78.9, 10603.0], [79.0, 10603.0], [79.1, 10613.0], [79.2, 10613.0], [79.3, 10620.0], [79.4, 10620.0], [79.5, 10752.0], [79.6, 10752.0], [79.7, 10768.0], [79.8, 10768.0], [79.9, 10775.0], [80.0, 10775.0], [80.1, 10776.0], [80.2, 10776.0], [80.3, 10798.0], [80.4, 10798.0], [80.5, 10825.0], [80.6, 10825.0], [80.7, 10842.0], [80.8, 10842.0], [80.9, 10857.0], [81.0, 10857.0], [81.1, 10857.0], [81.2, 10857.0], [81.3, 10877.0], [81.4, 10877.0], [81.5, 10902.0], [81.6, 10902.0], [81.7, 10907.0], [81.8, 10907.0], [81.9, 10917.0], [82.0, 10917.0], [82.1, 10935.0], [82.2, 10935.0], [82.3, 10967.0], [82.4, 10967.0], [82.5, 11003.0], [82.6, 11003.0], [82.7, 11030.0], [82.8, 11030.0], [82.9, 11039.0], [83.0, 11039.0], [83.1, 11068.0], [83.2, 11068.0], [83.3, 11120.0], [83.4, 11120.0], [83.5, 11156.0], [83.6, 11156.0], [83.7, 11275.0], [83.8, 11275.0], [83.9, 11279.0], [84.0, 11279.0], [84.1, 11282.0], [84.2, 11282.0], [84.3, 11453.0], [84.4, 11453.0], [84.5, 11473.0], [84.6, 11473.0], [84.7, 11532.0], [84.8, 11532.0], [84.9, 11552.0], [85.0, 11552.0], [85.1, 11592.0], [85.2, 11592.0], [85.3, 11611.0], [85.4, 11611.0], [85.5, 11615.0], [85.6, 11615.0], [85.7, 11632.0], [85.8, 11632.0], [85.9, 11666.0], [86.0, 11666.0], [86.1, 11687.0], [86.2, 11687.0], [86.3, 11740.0], [86.4, 11740.0], [86.5, 11769.0], [86.6, 11769.0], [86.7, 11814.0], [86.8, 11814.0], [86.9, 11862.0], [87.0, 11862.0], [87.1, 11877.0], [87.2, 11877.0], [87.3, 11881.0], [87.4, 11881.0], [87.5, 11885.0], [87.6, 11885.0], [87.7, 11926.0], [87.8, 11926.0], [87.9, 11954.0], [88.0, 11954.0], [88.1, 11971.0], [88.2, 11971.0], [88.3, 11992.0], [88.4, 11992.0], [88.5, 12015.0], [88.6, 12015.0], [88.7, 12091.0], [88.8, 12091.0], [88.9, 12093.0], [89.0, 12093.0], [89.1, 12142.0], [89.2, 12142.0], [89.3, 12153.0], [89.4, 12153.0], [89.5, 12164.0], [89.6, 12164.0], [89.7, 12168.0], [89.8, 12168.0], [89.9, 12208.0], [90.0, 12208.0], [90.1, 12266.0], [90.2, 12266.0], [90.3, 12280.0], [90.4, 12280.0], [90.5, 12291.0], [90.6, 12291.0], [90.7, 12365.0], [90.8, 12365.0], [90.9, 12393.0], [91.0, 12393.0], [91.1, 12432.0], [91.2, 12432.0], [91.3, 12647.0], [91.4, 12647.0], [91.5, 12649.0], [91.6, 12649.0], [91.7, 12829.0], [91.8, 12829.0], [91.9, 12879.0], [92.0, 12879.0], [92.1, 12931.0], [92.2, 12931.0], [92.3, 12965.0], [92.4, 12965.0], [92.5, 12990.0], [92.6, 12990.0], [92.7, 13006.0], [92.8, 13006.0], [92.9, 13056.0], [93.0, 13056.0], [93.1, 13203.0], [93.2, 13203.0], [93.3, 13280.0], [93.4, 13280.0], [93.5, 13344.0], [93.6, 13344.0], [93.7, 13357.0], [93.8, 13357.0], [93.9, 13403.0], [94.0, 13403.0], [94.1, 13418.0], [94.2, 13418.0], [94.3, 13475.0], [94.4, 13475.0], [94.5, 13553.0], [94.6, 13553.0], [94.7, 13693.0], [94.8, 13693.0], [94.9, 13853.0], [95.0, 13853.0], [95.1, 14002.0], [95.2, 14002.0], [95.3, 14192.0], [95.4, 14192.0], [95.5, 14338.0], [95.6, 14338.0], [95.7, 14744.0], [95.8, 14744.0], [95.9, 14922.0], [96.0, 14922.0], [96.1, 15113.0], [96.2, 15113.0], [96.3, 15183.0], [96.4, 15183.0], [96.5, 15451.0], [96.6, 15451.0], [96.7, 15645.0], [96.8, 15645.0], [96.9, 15650.0], [97.0, 15650.0], [97.1, 15824.0], [97.2, 15824.0], [97.3, 15836.0], [97.4, 15836.0], [97.5, 16020.0], [97.6, 16020.0], [97.7, 16702.0], [97.8, 16702.0], [97.9, 16918.0], [98.0, 16918.0], [98.1, 16955.0], [98.2, 16955.0], [98.3, 17109.0], [98.4, 17109.0], [98.5, 17307.0], [98.6, 17307.0], [98.7, 17317.0], [98.8, 17317.0], [98.9, 17765.0], [99.0, 17765.0], [99.1, 18069.0], [99.2, 18069.0], [99.3, 18258.0], [99.4, 18258.0], [99.5, 19623.0], [99.6, 19623.0], [99.7, 21313.0], [99.8, 21313.0], [99.9, 22575.0], [100.0, 22575.0]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[0.0, 750.0], [0.1, 750.0], [0.2, 1126.0], [0.3, 1126.0], [0.4, 1403.0], [0.5, 1403.0], [0.6, 1403.0], [0.7, 1753.0], [0.8, 2618.0], [0.9, 2618.0], [1.0, 2868.0], [1.1, 2868.0], [1.2, 2877.0], [1.3, 2877.0], [1.4, 2923.0], [1.5, 2923.0], [1.6, 3185.0], [1.7, 3185.0], [1.8, 3443.0], [1.9, 3443.0], [2.0, 4124.0], [2.1, 4124.0], [2.2, 4193.0], [2.3, 4193.0], [2.4, 4565.0], [2.5, 4565.0], [2.6, 4628.0], [2.7, 4628.0], [2.8, 4628.0], [2.9, 4663.0], [3.0, 4663.0], [3.1, 4690.0], [3.2, 4690.0], [3.3, 4889.0], [3.4, 4889.0], [3.5, 4926.0], [3.6, 4926.0], [3.7, 4947.0], [3.8, 4947.0], [3.9, 5145.0], [4.0, 5145.0], [4.1, 5271.0], [4.2, 5271.0], [4.3, 5305.0], [4.4, 5305.0], [4.5, 5505.0], [4.6, 5505.0], [4.7, 5549.0], [4.8, 5549.0], [4.9, 5585.0], [5.0, 5585.0], [5.1, 5716.0], [5.2, 5716.0], [5.3, 5722.0], [5.4, 5722.0], [5.5, 5731.0], [5.6, 5731.0], [5.7, 5740.0], [5.8, 5740.0], [5.9, 5769.0], [6.0, 5769.0], [6.1, 5783.0], [6.2, 5783.0], [6.3, 5835.0], [6.4, 5835.0], [6.5, 5858.0], [6.6, 5858.0], [6.7, 5859.0], [6.8, 5859.0], [6.9, 5875.0], [7.0, 5875.0], [7.1, 5876.0], [7.2, 5876.0], [7.3, 5958.0], [7.4, 5958.0], [7.5, 6020.0], [7.6, 6020.0], [7.7, 6095.0], [7.8, 6095.0], [7.9, 6106.0], [8.0, 6106.0], [8.1, 6188.0], [8.2, 6188.0], [8.3, 6192.0], [8.4, 6192.0], [8.5, 6215.0], [8.6, 6215.0], [8.7, 6306.0], [8.8, 6316.0], [8.9, 6316.0], [9.0, 6412.0], [9.1, 6412.0], [9.2, 6466.0], [9.3, 6466.0], [9.4, 6513.0], [9.5, 6513.0], [9.6, 6521.0], [9.7, 6521.0], [9.8, 6542.0], [9.9, 6542.0], [10.0, 6548.0], [10.1, 6548.0], [10.2, 6586.0], [10.3, 6586.0], [10.4, 6597.0], [10.5, 6597.0], [10.6, 6677.0], [10.7, 6677.0], [10.8, 6690.0], [10.9, 6690.0], [11.0, 6700.0], [11.1, 6700.0], [11.2, 6760.0], [11.3, 6760.0], [11.4, 6769.0], [11.5, 6769.0], [11.6, 6793.0], [11.7, 6793.0], [11.8, 6799.0], [11.9, 6799.0], [12.0, 6801.0], [12.1, 6801.0], [12.2, 6825.0], [12.3, 6825.0], [12.4, 6879.0], [12.5, 6879.0], [12.6, 6908.0], [12.7, 6908.0], [12.8, 6911.0], [12.9, 6911.0], [13.0, 6914.0], [13.1, 6914.0], [13.2, 6931.0], [13.3, 6931.0], [13.4, 6980.0], [13.5, 6980.0], [13.6, 6992.0], [13.7, 6992.0], [13.8, 7163.0], [13.9, 7163.0], [14.0, 7201.0], [14.1, 7201.0], [14.2, 7217.0], [14.3, 7217.0], [14.4, 7248.0], [14.5, 7248.0], [14.6, 7257.0], [14.7, 7257.0], [14.8, 7263.0], [14.9, 7263.0], [15.0, 7274.0], [15.1, 7274.0], [15.2, 7279.0], [15.3, 7279.0], [15.4, 7281.0], [15.5, 7281.0], [15.6, 7310.0], [15.7, 7310.0], [15.8, 7314.0], [15.9, 7314.0], [16.0, 7334.0], [16.1, 7334.0], [16.2, 7369.0], [16.3, 7369.0], [16.4, 7373.0], [16.5, 7373.0], [16.6, 7392.0], [16.7, 7392.0], [16.8, 7416.0], [16.9, 7416.0], [17.0, 7444.0], [17.1, 7444.0], [17.2, 7454.0], [17.3, 7454.0], [17.4, 7520.0], [17.5, 7520.0], [17.6, 7539.0], [17.7, 7539.0], [17.8, 7540.0], [17.9, 7540.0], [18.0, 7552.0], [18.1, 7552.0], [18.2, 7567.0], [18.3, 7567.0], [18.4, 7570.0], [18.5, 7570.0], [18.6, 7594.0], [18.7, 7594.0], [18.8, 7644.0], [18.9, 7644.0], [19.0, 7700.0], [19.1, 7700.0], [19.2, 7730.0], [19.3, 7730.0], [19.4, 7731.0], [19.5, 7731.0], [19.6, 7744.0], [19.7, 7744.0], [19.8, 7755.0], [19.9, 7755.0], [20.0, 7756.0], [20.1, 7756.0], [20.2, 7764.0], [20.3, 7764.0], [20.4, 7777.0], [20.5, 7777.0], [20.6, 7803.0], [20.7, 7803.0], [20.8, 7829.0], [20.9, 7829.0], [21.0, 7901.0], [21.1, 7901.0], [21.2, 7922.0], [21.3, 7922.0], [21.4, 7933.0], [21.5, 7933.0], [21.6, 7939.0], [21.7, 7939.0], [21.8, 7951.0], [21.9, 7951.0], [22.0, 8034.0], [22.1, 8034.0], [22.2, 8043.0], [22.3, 8043.0], [22.4, 8055.0], [22.5, 8055.0], [22.6, 8088.0], [22.7, 8088.0], [22.8, 8111.0], [22.9, 8111.0], [23.0, 8121.0], [23.1, 8121.0], [23.2, 8130.0], [23.3, 8130.0], [23.4, 8142.0], [23.5, 8142.0], [23.6, 8220.0], [23.7, 8220.0], [23.8, 8232.0], [23.9, 8232.0], [24.0, 8238.0], [24.1, 8238.0], [24.2, 8243.0], [24.3, 8243.0], [24.4, 8251.0], [24.5, 8251.0], [24.6, 8274.0], [24.7, 8274.0], [24.8, 8287.0], [24.9, 8287.0], [25.0, 8318.0], [25.1, 8318.0], [25.2, 8326.0], [25.3, 8326.0], [25.4, 8357.0], [25.5, 8357.0], [25.6, 8359.0], [25.7, 8359.0], [25.8, 8372.0], [25.9, 8372.0], [26.0, 8378.0], [26.1, 8378.0], [26.2, 8390.0], [26.3, 8390.0], [26.4, 8418.0], [26.5, 8418.0], [26.6, 8427.0], [26.7, 8427.0], [26.8, 8430.0], [26.9, 8430.0], [27.0, 8439.0], [27.1, 8439.0], [27.2, 8462.0], [27.3, 8462.0], [27.4, 8463.0], [27.5, 8463.0], [27.6, 8472.0], [27.7, 8472.0], [27.8, 8478.0], [27.9, 8478.0], [28.0, 8483.0], [28.1, 8483.0], [28.2, 8548.0], [28.3, 8548.0], [28.4, 8566.0], [28.5, 8566.0], [28.6, 8603.0], [28.7, 8603.0], [28.8, 8611.0], [28.9, 8611.0], [29.0, 8622.0], [29.1, 8622.0], [29.2, 8645.0], [29.3, 8645.0], [29.4, 8652.0], [29.5, 8652.0], [29.6, 8664.0], [29.7, 8664.0], [29.8, 8687.0], [29.9, 8687.0], [30.0, 8696.0], [30.1, 8696.0], [30.2, 8707.0], [30.3, 8707.0], [30.4, 8721.0], [30.5, 8721.0], [30.6, 8740.0], [30.7, 8740.0], [30.8, 8781.0], [30.9, 8781.0], [31.0, 8787.0], [31.1, 8787.0], [31.2, 8790.0], [31.3, 8790.0], [31.4, 8818.0], [31.5, 8818.0], [31.6, 8822.0], [31.7, 8822.0], [31.8, 8823.0], [31.9, 8823.0], [32.0, 8847.0], [32.1, 8847.0], [32.2, 8854.0], [32.3, 8854.0], [32.4, 8867.0], [32.5, 8867.0], [32.6, 8887.0], [32.7, 8887.0], [32.8, 8899.0], [32.9, 8899.0], [33.0, 8933.0], [33.1, 8933.0], [33.2, 8938.0], [33.3, 8938.0], [33.4, 8952.0], [33.5, 8952.0], [33.6, 8958.0], [33.7, 8958.0], [33.8, 8970.0], [33.9, 8970.0], [34.0, 8973.0], [34.1, 8973.0], [34.2, 8997.0], [34.3, 8997.0], [34.4, 9006.0], [34.5, 9006.0], [34.6, 9008.0], [34.7, 9008.0], [34.8, 9013.0], [34.9, 9013.0], [35.0, 9016.0], [35.1, 9016.0], [35.2, 9017.0], [35.3, 9017.0], [35.4, 9042.0], [35.5, 9042.0], [35.6, 9049.0], [35.7, 9049.0], [35.8, 9089.0], [35.9, 9089.0], [36.0, 9120.0], [36.1, 9120.0], [36.2, 9130.0], [36.3, 9130.0], [36.4, 9136.0], [36.5, 9136.0], [36.6, 9167.0], [36.7, 9167.0], [36.8, 9186.0], [36.9, 9186.0], [37.0, 9189.0], [37.1, 9189.0], [37.2, 9209.0], [37.3, 9209.0], [37.4, 9211.0], [37.5, 9211.0], [37.6, 9240.0], [37.7, 9240.0], [37.8, 9269.0], [37.9, 9269.0], [38.0, 9294.0], [38.1, 9294.0], [38.2, 9304.0], [38.3, 9304.0], [38.4, 9304.0], [38.5, 9334.0], [38.6, 9334.0], [38.7, 9368.0], [38.8, 9368.0], [38.9, 9376.0], [39.0, 9376.0], [39.1, 9475.0], [39.2, 9475.0], [39.3, 9499.0], [39.4, 9499.0], [39.5, 9509.0], [39.6, 9509.0], [39.7, 9529.0], [39.8, 9529.0], [39.9, 9562.0], [40.0, 9562.0], [40.1, 9678.0], [40.2, 9678.0], [40.3, 9679.0], [40.4, 9679.0], [40.5, 9726.0], [40.6, 9726.0], [40.7, 9746.0], [40.8, 9746.0], [40.9, 9779.0], [41.0, 9779.0], [41.1, 9831.0], [41.2, 9831.0], [41.3, 9862.0], [41.4, 9862.0], [41.5, 9886.0], [41.6, 9886.0], [41.7, 9896.0], [41.8, 9896.0], [41.9, 9905.0], [42.0, 9905.0], [42.1, 9920.0], [42.2, 9920.0], [42.3, 9935.0], [42.4, 9935.0], [42.5, 9970.0], [42.6, 9970.0], [42.7, 9987.0], [42.8, 9987.0], [42.9, 9994.0], [43.0, 9994.0], [43.1, 10000.0], [43.2, 10000.0], [43.3, 10066.0], [43.4, 10066.0], [43.5, 10088.0], [43.6, 10088.0], [43.7, 10100.0], [43.8, 10100.0], [43.9, 10106.0], [44.0, 10106.0], [44.1, 10125.0], [44.2, 10125.0], [44.3, 10131.0], [44.4, 10131.0], [44.5, 10151.0], [44.6, 10151.0], [44.7, 10167.0], [44.8, 10167.0], [44.9, 10173.0], [45.0, 10173.0], [45.1, 10202.0], [45.2, 10202.0], [45.3, 10210.0], [45.4, 10210.0], [45.5, 10233.0], [45.6, 10233.0], [45.7, 10236.0], [45.8, 10236.0], [45.9, 10250.0], [46.0, 10250.0], [46.1, 10257.0], [46.2, 10257.0], [46.3, 10321.0], [46.4, 10321.0], [46.5, 10347.0], [46.6, 10347.0], [46.7, 10351.0], [46.8, 10351.0], [46.9, 10365.0], [47.0, 10365.0], [47.1, 10367.0], [47.2, 10367.0], [47.3, 10390.0], [47.4, 10390.0], [47.5, 10443.0], [47.6, 10443.0], [47.7, 10473.0], [47.8, 10473.0], [47.9, 10474.0], [48.0, 10474.0], [48.1, 10474.0], [48.2, 10474.0], [48.3, 10511.0], [48.4, 10511.0], [48.5, 10538.0], [48.6, 10538.0], [48.7, 10573.0], [48.8, 10573.0], [48.9, 10588.0], [49.0, 10588.0], [49.1, 10654.0], [49.2, 10654.0], [49.3, 10663.0], [49.4, 10663.0], [49.5, 10686.0], [49.6, 10686.0], [49.7, 10702.0], [49.8, 10702.0], [49.9, 10709.0], [50.0, 10709.0], [50.1, 10753.0], [50.2, 10753.0], [50.3, 10772.0], [50.4, 10772.0], [50.5, 10786.0], [50.6, 10786.0], [50.7, 10798.0], [50.8, 10798.0], [50.9, 10828.0], [51.0, 10828.0], [51.1, 10867.0], [51.2, 10867.0], [51.3, 10872.0], [51.4, 10872.0], [51.5, 10884.0], [51.6, 10884.0], [51.7, 10916.0], [51.8, 10916.0], [51.9, 10917.0], [52.0, 10917.0], [52.1, 10958.0], [52.2, 10958.0], [52.3, 11002.0], [52.4, 11002.0], [52.5, 11004.0], [52.6, 11004.0], [52.7, 11028.0], [52.8, 11028.0], [52.9, 11064.0], [53.0, 11064.0], [53.1, 11084.0], [53.2, 11084.0], [53.3, 11085.0], [53.4, 11085.0], [53.5, 11092.0], [53.6, 11092.0], [53.7, 11100.0], [53.8, 11100.0], [53.9, 11120.0], [54.0, 11120.0], [54.1, 11148.0], [54.2, 11148.0], [54.3, 11167.0], [54.4, 11167.0], [54.5, 11183.0], [54.6, 11183.0], [54.7, 11196.0], [54.8, 11196.0], [54.9, 11208.0], [55.0, 11208.0], [55.1, 11213.0], [55.2, 11213.0], [55.3, 11248.0], [55.4, 11248.0], [55.5, 11268.0], [55.6, 11268.0], [55.7, 11285.0], [55.8, 11285.0], [55.9, 11290.0], [56.0, 11290.0], [56.1, 11316.0], [56.2, 11316.0], [56.3, 11326.0], [56.4, 11326.0], [56.5, 11342.0], [56.6, 11342.0], [56.7, 11344.0], [56.8, 11344.0], [56.9, 11365.0], [57.0, 11365.0], [57.1, 11481.0], [57.2, 11481.0], [57.3, 11498.0], [57.4, 11498.0], [57.5, 11505.0], [57.6, 11505.0], [57.7, 11523.0], [57.8, 11523.0], [57.9, 11530.0], [58.0, 11530.0], [58.1, 11548.0], [58.2, 11548.0], [58.3, 11572.0], [58.4, 11572.0], [58.5, 11587.0], [58.6, 11587.0], [58.7, 11635.0], [58.8, 11635.0], [58.9, 11667.0], [59.0, 11667.0], [59.1, 11695.0], [59.2, 11695.0], [59.3, 11720.0], [59.4, 11720.0], [59.5, 11750.0], [59.6, 11750.0], [59.7, 11758.0], [59.8, 11758.0], [59.9, 11820.0], [60.0, 11820.0], [60.1, 12060.0], [60.2, 12060.0], [60.3, 12133.0], [60.4, 12133.0], [60.5, 12136.0], [60.6, 12136.0], [60.7, 12206.0], [60.8, 12206.0], [60.9, 12313.0], [61.0, 12313.0], [61.1, 12334.0], [61.2, 12334.0], [61.3, 12338.0], [61.4, 12338.0], [61.5, 12370.0], [61.6, 12370.0], [61.7, 12490.0], [61.8, 12490.0], [61.9, 12510.0], [62.0, 12510.0], [62.1, 12520.0], [62.2, 12520.0], [62.3, 12525.0], [62.4, 12525.0], [62.5, 12527.0], [62.6, 12527.0], [62.7, 12578.0], [62.8, 12578.0], [62.9, 12612.0], [63.0, 12612.0], [63.1, 12623.0], [63.2, 12623.0], [63.3, 12677.0], [63.4, 12677.0], [63.5, 12713.0], [63.6, 12713.0], [63.7, 12720.0], [63.8, 12720.0], [63.9, 12844.0], [64.0, 12844.0], [64.1, 12986.0], [64.2, 12986.0], [64.3, 13053.0], [64.4, 13053.0], [64.5, 13096.0], [64.6, 13096.0], [64.7, 13111.0], [64.8, 13111.0], [64.9, 13120.0], [65.0, 13120.0], [65.1, 13134.0], [65.2, 13134.0], [65.3, 13178.0], [65.4, 13178.0], [65.5, 13245.0], [65.6, 13245.0], [65.7, 13302.0], [65.8, 13302.0], [65.9, 13360.0], [66.0, 13360.0], [66.1, 13397.0], [66.2, 13397.0], [66.3, 13419.0], [66.4, 13419.0], [66.5, 13485.0], [66.6, 13485.0], [66.7, 13490.0], [66.8, 13490.0], [66.9, 13500.0], [67.0, 13500.0], [67.1, 13592.0], [67.2, 13592.0], [67.3, 13637.0], [67.4, 13637.0], [67.5, 13655.0], [67.6, 13655.0], [67.7, 13752.0], [67.8, 13752.0], [67.9, 13797.0], [68.0, 13797.0], [68.1, 13861.0], [68.2, 13861.0], [68.3, 13866.0], [68.4, 13866.0], [68.5, 13874.0], [68.6, 13874.0], [68.7, 13904.0], [68.8, 13904.0], [68.9, 13912.0], [69.0, 13912.0], [69.1, 13914.0], [69.2, 13914.0], [69.3, 13941.0], [69.4, 13941.0], [69.5, 13943.0], [69.6, 13943.0], [69.7, 13964.0], [69.8, 13964.0], [69.9, 14002.0], [70.0, 14002.0], [70.1, 14020.0], [70.2, 14020.0], [70.3, 14098.0], [70.4, 14098.0], [70.5, 14136.0], [70.6, 14136.0], [70.7, 14158.0], [70.8, 14158.0], [70.9, 14197.0], [71.0, 14197.0], [71.1, 14244.0], [71.2, 14244.0], [71.3, 14265.0], [71.4, 14265.0], [71.5, 14346.0], [71.6, 14346.0], [71.7, 14357.0], [71.8, 14357.0], [71.9, 14402.0], [72.0, 14402.0], [72.1, 14469.0], [72.2, 14469.0], [72.3, 14538.0], [72.4, 14538.0], [72.5, 14595.0], [72.6, 14595.0], [72.7, 14596.0], [72.8, 14596.0], [72.9, 14702.0], [73.0, 14702.0], [73.1, 14902.0], [73.2, 14902.0], [73.3, 14907.0], [73.4, 14907.0], [73.5, 14908.0], [73.6, 14908.0], [73.7, 14917.0], [73.8, 14917.0], [73.9, 14944.0], [74.0, 14944.0], [74.1, 14955.0], [74.2, 14955.0], [74.3, 14996.0], [74.4, 14996.0], [74.5, 14999.0], [74.6, 14999.0], [74.7, 15037.0], [74.8, 15037.0], [74.9, 15045.0], [75.0, 15045.0], [75.1, 15102.0], [75.2, 15102.0], [75.3, 15104.0], [75.4, 15104.0], [75.5, 15234.0], [75.6, 15234.0], [75.7, 15247.0], [75.8, 15247.0], [75.9, 15407.0], [76.0, 15407.0], [76.1, 15532.0], [76.2, 15532.0], [76.3, 15573.0], [76.4, 15573.0], [76.5, 15608.0], [76.6, 15608.0], [76.7, 15649.0], [76.8, 15649.0], [76.9, 15653.0], [77.0, 15653.0], [77.1, 15685.0], [77.2, 15685.0], [77.3, 15702.0], [77.4, 15702.0], [77.5, 15774.0], [77.6, 15774.0], [77.7, 15797.0], [77.8, 15797.0], [77.9, 15826.0], [78.0, 15826.0], [78.1, 15934.0], [78.2, 15934.0], [78.3, 15973.0], [78.4, 15973.0], [78.5, 16026.0], [78.6, 16026.0], [78.7, 16076.0], [78.8, 16076.0], [78.9, 16385.0], [79.0, 16385.0], [79.1, 16440.0], [79.2, 16440.0], [79.3, 16537.0], [79.4, 16537.0], [79.5, 16565.0], [79.6, 16565.0], [79.7, 16570.0], [79.8, 16570.0], [79.9, 16584.0], [80.0, 16584.0], [80.1, 16593.0], [80.2, 16593.0], [80.3, 16601.0], [80.4, 16601.0], [80.5, 16725.0], [80.6, 16725.0], [80.7, 16768.0], [80.8, 16768.0], [80.9, 16868.0], [81.0, 16868.0], [81.1, 16944.0], [81.2, 16944.0], [81.3, 16955.0], [81.4, 16955.0], [81.5, 17004.0], [81.6, 17004.0], [81.7, 17020.0], [81.8, 17020.0], [81.9, 17129.0], [82.0, 17129.0], [82.1, 17189.0], [82.2, 17189.0], [82.3, 17206.0], [82.4, 17206.0], [82.5, 17311.0], [82.6, 17311.0], [82.7, 17394.0], [82.8, 17394.0], [82.9, 17423.0], [83.0, 17423.0], [83.1, 17425.0], [83.2, 17425.0], [83.3, 17486.0], [83.4, 17486.0], [83.5, 17496.0], [83.6, 17496.0], [83.7, 17571.0], [83.8, 17571.0], [83.9, 17576.0], [84.0, 17576.0], [84.1, 17713.0], [84.2, 17713.0], [84.3, 17780.0], [84.4, 17780.0], [84.5, 17784.0], [84.6, 17784.0], [84.7, 17855.0], [84.8, 17855.0], [84.9, 17877.0], [85.0, 17877.0], [85.1, 17896.0], [85.2, 17896.0], [85.3, 17994.0], [85.4, 17994.0], [85.5, 18124.0], [85.6, 18124.0], [85.7, 18250.0], [85.8, 18250.0], [85.9, 18286.0], [86.0, 18286.0], [86.1, 18303.0], [86.2, 18303.0], [86.3, 18491.0], [86.4, 18491.0], [86.5, 18550.0], [86.6, 18550.0], [86.7, 18982.0], [86.8, 18982.0], [86.9, 19010.0], [87.0, 19010.0], [87.1, 19078.0], [87.2, 19078.0], [87.3, 19079.0], [87.4, 19079.0], [87.5, 19194.0], [87.6, 19194.0], [87.7, 19303.0], [87.8, 19303.0], [87.9, 19365.0], [88.0, 19365.0], [88.1, 19366.0], [88.2, 19366.0], [88.3, 19427.0], [88.4, 19427.0], [88.5, 19436.0], [88.6, 19436.0], [88.7, 19490.0], [88.8, 19490.0], [88.9, 19496.0], [89.0, 19496.0], [89.1, 19553.0], [89.2, 19553.0], [89.3, 19686.0], [89.4, 19686.0], [89.5, 19720.0], [89.6, 19720.0], [89.7, 19724.0], [89.8, 19724.0], [89.9, 20141.0], [90.0, 20141.0], [90.1, 20283.0], [90.2, 20283.0], [90.3, 20375.0], [90.4, 20375.0], [90.5, 20478.0], [90.6, 20478.0], [90.7, 20499.0], [90.8, 20499.0], [90.9, 20626.0], [91.0, 20626.0], [91.1, 20907.0], [91.2, 20907.0], [91.3, 20936.0], [91.4, 20936.0], [91.5, 21042.0], [91.6, 21042.0], [91.7, 21301.0], [91.8, 21301.0], [91.9, 21760.0], [92.0, 21760.0], [92.1, 21851.0], [92.2, 21851.0], [92.3, 22174.0], [92.4, 22174.0], [92.5, 22287.0], [92.6, 22287.0], [92.7, 22310.0], [92.8, 22310.0], [92.9, 22327.0], [93.0, 22327.0], [93.1, 22469.0], [93.2, 22469.0], [93.3, 22729.0], [93.4, 22729.0], [93.5, 22949.0], [93.6, 22949.0], [93.7, 22966.0], [93.8, 22966.0], [93.9, 22980.0], [94.0, 22980.0], [94.1, 23237.0], [94.2, 23237.0], [94.3, 23442.0], [94.4, 23442.0], [94.5, 23465.0], [94.6, 23465.0], [94.7, 23595.0], [94.8, 23595.0], [94.9, 23658.0], [95.0, 23658.0], [95.1, 23812.0], [95.2, 23812.0], [95.3, 23939.0], [95.4, 23939.0], [95.5, 24098.0], [95.6, 24098.0], [95.7, 24411.0], [95.8, 24411.0], [95.9, 24427.0], [96.0, 24427.0], [96.1, 25309.0], [96.2, 25309.0], [96.3, 25462.0], [96.4, 25462.0], [96.5, 25519.0], [96.6, 25519.0], [96.7, 25788.0], [96.8, 25788.0], [96.9, 26077.0], [97.0, 26077.0], [97.1, 26166.0], [97.2, 26166.0], [97.3, 26167.0], [97.4, 26167.0], [97.5, 26496.0], [97.6, 26496.0], [97.7, 26604.0], [97.8, 26604.0], [97.9, 26795.0], [98.0, 26795.0], [98.1, 27090.0], [98.2, 27090.0], [98.3, 27143.0], [98.4, 27143.0], [98.5, 27286.0], [98.6, 27286.0], [98.7, 28115.0], [98.8, 28115.0], [98.9, 28890.0], [99.0, 28890.0], [99.1, 28990.0], [99.2, 28990.0], [99.3, 29927.0], [99.4, 29927.0], [99.5, 30107.0], [99.6, 30107.0], [99.7, 31425.0], [99.8, 31425.0], [99.9, 33634.0], [100.0, 33634.0]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 700.0, "maxY": 13.0, "series": [{"data": [[274500.0, 1.0], [332100.0, 1.0], [357700.0, 1.0], [408900.0, 1.0], [440900.0, 1.0], [340800.0, 1.0], [398400.0, 1.0], [424000.0, 1.0], [488000.0, 1.0], [282700.0, 1.0], [301900.0, 1.0], [308300.0, 1.0], [171300.0, 1.0], [378700.0, 1.0], [200100.0, 1.0], [404300.0, 1.0], [216100.0, 1.0], [219300.0, 1.0], [449100.0, 1.0], [474700.0, 1.0], [238500.0, 1.0], [481100.0, 1.0], [291400.0, 1.0], [77900.0, 1.0], [329800.0, 1.0], [355400.0, 1.0], [100300.0, 1.0], [406600.0, 1.0], [432200.0, 1.0], [438600.0, 1.0], [153000.0, 1.0], [156200.0, 1.0], [185000.0, 1.0], [367700.0, 1.0], [236200.0, 1.0], [242600.0, 1.0], [489300.0, 1.0], [495700.0, 1.0], [267600.0, 1.0], [274000.0, 1.0], [338000.0, 1.0], [344400.0, 1.0], [440400.0, 1.0], [33700.0, 1.0], [267100.0, 1.0], [141100.0, 2.0], [39300.0, 2.0], [42500.0, 1.0], [179500.0, 1.0], [350300.0, 1.0], [375900.0, 1.0], [407900.0, 1.0], [420700.0, 1.0], [224300.0, 1.0], [452700.0, 1.0], [465500.0, 1.0], [471900.0, 1.0], [61700.0, 1.0], [275800.0, 1.0], [96200.0, 1.0], [429400.0, 1.0], [493400.0, 1.0], [294500.0, 1.0], [358500.0, 1.0], [196400.0, 1.0], [441700.0, 1.0], [473700.0, 1.0], [247600.0, 1.0], [492900.0, 1.0], [316000.0, 1.0], [322400.0, 1.0], [412000.0, 1.0], [418400.0, 1.0], [476000.0, 1.0], [283500.0, 1.0], [152500.0, 1.0], [341100.0, 1.0], [385900.0, 1.0], [197300.0, 1.0], [210100.0, 1.0], [226100.0, 2.0], [238900.0, 1.0], [248500.0, 1.0], [72900.0, 1.0], [285800.0, 1.0], [4800.0, 1.0], [4900.0, 1.0], [5800.0, 1.0], [5900.0, 1.0], [96900.0, 1.0], [381800.0, 1.0], [426600.0, 1.0], [7000.0, 1.0], [7700.0, 1.0], [8600.0, 1.0], [266100.0, 1.0], [9600.0, 1.0], [298100.0, 1.0], [9800.0, 1.0], [188600.0, 1.0], [207800.0, 1.0], [464500.0, 1.0], [15200.0, 1.0], [319600.0, 1.0], [338800.0, 1.0], [27200.0, 1.0], [466800.0, 1.0], [138300.0, 1.0], [36800.0, 1.0], [306300.0, 2.0], [157500.0, 1.0], [173500.0, 1.0], [176700.0, 2.0], [179900.0, 1.0], [351100.0, 1.0], [195900.0, 1.0], [49600.0, 1.0], [421500.0, 1.0], [215100.0, 1.0], [56800.0, 1.0], [243900.0, 2.0], [247100.0, 1.0], [76800.0, 1.0], [321400.0, 1.0], [124800.0, 1.0], [144000.0, 1.0], [147200.0, 1.0], [304900.0, 1.0], [156800.0, 1.0], [172800.0, 1.0], [204800.0, 1.0], [208000.0, 1.0], [484100.0, 1.0], [326400.0, 1.0], [332800.0, 1.0], [339200.0, 1.0], [396300.0, 1.0], [215300.0, 1.0], [434700.0, 1.0], [221700.0, 1.0], [460300.0, 1.0], [253700.0, 1.0], [68700.0, 1.0], [264200.0, 1.0], [283400.0, 1.0], [392200.0, 1.0], [417800.0, 1.0], [443400.0, 1.0], [488200.0, 1.0], [126300.0, 1.0], [494600.0, 1.0], [155400.0, 1.0], [181000.0, 1.0], [238600.0, 1.0], [257800.0, 1.0], [387600.0, 1.0], [406800.0, 1.0], [34700.0, 1.0], [133900.0, 1.0], [38700.0, 1.0], [162700.0, 1.0], [316700.0, 1.0], [367900.0, 1.0], [48300.0, 1.0], [393500.0, 1.0], [53100.0, 1.0], [431900.0, 1.0], [56300.0, 1.0], [57900.0, 1.0], [233100.0, 1.0], [293400.0, 1.0], [299800.0, 1.0], [331800.0, 1.0], [96600.0, 1.0], [459800.0, 1.0], [466200.0, 1.0], [154000.0, 1.0], [173200.0, 1.0], [350500.0, 1.0], [356900.0, 2.0], [369700.0, 1.0], [208400.0, 1.0], [211600.0, 1.0], [414500.0, 1.0], [218000.0, 1.0], [224400.0, 1.0], [459300.0, 1.0], [301600.0, 1.0], [314400.0, 1.0], [327200.0, 1.0], [333600.0, 1.0], [416800.0, 1.0], [448800.0, 1.0], [480800.0, 1.0], [135700.0, 1.0], [275500.0, 1.0], [164500.0, 1.0], [339500.0, 1.0], [390700.0, 1.0], [461100.0, 1.0], [271400.0, 1.0], [71700.0, 1.0], [393000.0, 1.0], [102100.0, 1.0], [399400.0, 1.0], [431400.0, 2.0], [114900.0, 1.0], [264500.0, 1.0], [146200.0, 1.0], [290100.0, 1.0], [178200.0, 1.0], [392500.0, 1.0], [200600.0, 1.0], [424500.0, 1.0], [456500.0, 1.0], [235800.0, 1.0], [258200.0, 1.0], [286000.0, 2.0], [362800.0, 1.0], [401200.0, 2.0], [28900.0, 1.0], [471600.0, 1.0], [31300.0, 1.0], [150300.0, 1.0], [175900.0, 1.0], [349500.0, 2.0], [362300.0, 1.0], [191900.0, 1.0], [419900.0, 1.0], [57000.0, 1.0], [59400.0, 1.0], [243100.0, 1.0], [255900.0, 1.0], [75600.0, 1.0], [319800.0, 1.0], [88400.0, 1.0], [403000.0, 1.0], [104400.0, 1.0], [415800.0, 1.0], [118800.0, 1.0], [120400.0, 1.0], [126800.0, 1.0], [128400.0, 2.0], [309700.0, 1.0], [322500.0, 1.0], [348100.0, 1.0], [188000.0, 1.0], [386500.0, 1.0], [405700.0, 1.0], [216800.0, 1.0], [242400.0, 1.0], [324800.0, 1.0], [350400.0, 1.0], [356800.0, 1.0], [363200.0, 1.0], [484800.0, 1.0], [491200.0, 1.0], [137700.0, 1.0], [150500.0, 1.0], [317900.0, 1.0], [388300.0, 1.0], [465100.0, 1.0], [249700.0, 1.0], [252900.0, 1.0], [69100.0, 1.0], [80300.0, 1.0], [326600.0, 1.0], [345800.0, 1.0], [102700.0, 1.0], [104300.0, 1.0], [441800.0, 1.0], [118700.0, 1.0], [199400.0, 1.0], [428500.0, 1.0], [473300.0, 1.0], [237800.0, 1.0], [315600.0, 1.0], [328400.0, 2.0], [450000.0, 1.0], [308700.0, 1.0], [161900.0, 1.0], [168300.0, 1.0], [44500.0, 1.0], [347100.0, 1.0], [46900.0, 1.0], [187500.0, 1.0], [51700.0, 1.0], [411100.0, 1.0], [56500.0, 1.0], [63700.0, 1.0], [65300.0, 1.0], [266200.0, 2.0], [71400.0, 1.0], [77800.0, 1.0], [82600.0, 1.0], [89000.0, 1.0], [121000.0, 1.0], [265700.0, 1.0], [355300.0, 2.0], [361700.0, 1.0], [464100.0, 1.0], [470500.0, 1.0], [255600.0, 1.0], [332000.0, 1.0], [453600.0, 1.0], [460000.0, 1.0], [466400.0, 1.0], [134900.0, 1.0], [273900.0, 1.0], [299500.0, 1.0], [344300.0, 1.0], [218100.0, 1.0], [224500.0, 1.0], [453100.0, 1.0], [497900.0, 1.0], [289000.0, 1.0], [295400.0, 2.0], [92900.0, 1.0], [365800.0, 1.0], [94500.0, 1.0], [378600.0, 1.0], [105700.0, 1.0], [115300.0, 1.0], [8300.0, 1.0], [9100.0, 1.0], [9500.0, 1.0], [10500.0, 1.0], [167800.0, 1.0], [187000.0, 1.0], [14900.0, 1.0], [15500.0, 1.0], [16300.0, 2.0], [257400.0, 1.0], [18200.0, 1.0], [21000.0, 1.0], [374000.0, 1.0], [380400.0, 2.0], [399600.0, 1.0], [27000.0, 1.0], [27400.0, 1.0], [438000.0, 2.0], [27800.0, 1.0], [29000.0, 1.0], [482800.0, 1.0], [32200.0, 1.0], [146300.0, 1.0], [38800.0, 1.0], [296700.0, 1.0], [162300.0, 1.0], [373500.0, 1.0], [48400.0, 1.0], [424700.0, 1.0], [456700.0, 1.0], [232700.0, 1.0], [60400.0, 1.0], [482300.0, 1.0], [248700.0, 1.0], [82400.0, 1.0], [375800.0, 1.0], [276100.0, 1.0], [295300.0, 1.0], [301700.0, 1.0], [308100.0, 1.0], [164800.0, 1.0], [168000.0, 1.0], [384900.0, 1.0], [203200.0, 1.0], [225600.0, 1.0], [316800.0, 1.0], [438400.0, 1.0], [277900.0, 1.0], [184900.0, 1.0], [373900.0, 1.0], [194500.0, 1.0], [213700.0, 1.0], [431500.0, 1.0], [242500.0, 1.0], [248900.0, 1.0], [66300.0, 1.0], [93500.0, 1.0], [446600.0, 1.0], [128700.0, 1.0], [134600.0, 1.0], [266900.0, 1.0], [144200.0, 1.0], [147400.0, 1.0], [286100.0, 1.0], [311700.0, 2.0], [205000.0, 1.0], [433300.0, 1.0], [233800.0, 1.0], [465300.0, 1.0], [490900.0, 1.0], [320400.0, 1.0], [384400.0, 1.0], [474000.0, 1.0], [480400.0, 1.0], [186700.0, 1.0], [371100.0, 1.0], [189900.0, 1.0], [193100.0, 1.0], [52700.0, 1.0], [209100.0, 1.0], [53500.0, 1.0], [257100.0, 1.0], [68600.0, 1.0], [290200.0, 1.0], [83000.0, 1.0], [335000.0, 1.0], [89400.0, 1.0], [373400.0, 1.0], [392600.0, 1.0], [102200.0, 1.0], [424600.0, 1.0], [107000.0, 1.0], [456600.0, 1.0], [115000.0, 1.0], [139600.0, 1.0], [289700.0, 1.0], [162000.0, 1.0], [168400.0, 1.0], [366500.0, 1.0], [379300.0, 1.0], [197200.0, 1.0], [203600.0, 1.0], [417700.0, 1.0], [449700.0, 1.0], [475300.0, 1.0], [251600.0, 1.0], [258000.0, 1.0], [272800.0, 1.0], [304800.0, 1.0], [311200.0, 1.0], [400800.0, 1.0], [413600.0, 1.0], [134100.0, 1.0], [153300.0, 1.0], [438700.0, 1.0], [445100.0, 1.0], [451500.0, 1.0], [274600.0, 1.0], [72500.0, 1.0], [281000.0, 1.0], [114100.0, 1.0], [447400.0, 1.0], [118900.0, 1.0], [120500.0, 1.0], [126900.0, 1.0], [131800.0, 1.0], [135000.0, 1.0], [144600.0, 1.0], [154200.0, 1.0], [167000.0, 1.0], [370100.0, 1.0], [195800.0, 1.0], [382900.0, 1.0], [414900.0, 1.0], [224600.0, 1.0], [478900.0, 1.0], [259800.0, 1.0], [19500.0, 1.0], [359600.0, 1.0], [366000.0, 1.0], [385200.0, 1.0], [27100.0, 1.0], [282300.0, 1.0], [320700.0, 1.0], [42200.0, 1.0], [339900.0, 1.0], [212700.0, 1.0], [59800.0, 1.0], [61400.0, 1.0], [251100.0, 1.0], [82800.0, 1.0], [342200.0, 1.0], [89200.0, 1.0], [97200.0, 1.0], [457400.0, 1.0], [489400.0, 1.0], [130800.0, 1.0]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[2000.0, 1.0], [2300.0, 2.0], [2500.0, 3.0], [2600.0, 2.0], [2700.0, 3.0], [2900.0, 2.0], [3000.0, 1.0], [3100.0, 1.0], [3200.0, 3.0], [3300.0, 1.0], [3400.0, 2.0], [3500.0, 4.0], [3700.0, 1.0], [3600.0, 4.0], [3800.0, 9.0], [3900.0, 3.0], [4000.0, 2.0], [4300.0, 2.0], [4200.0, 2.0], [4100.0, 2.0], [4600.0, 7.0], [4400.0, 3.0], [4700.0, 2.0], [5000.0, 4.0], [5100.0, 2.0], [4900.0, 1.0], [5200.0, 3.0], [5600.0, 6.0], [5400.0, 4.0], [5500.0, 1.0], [5700.0, 2.0], [5800.0, 5.0], [6100.0, 6.0], [6000.0, 3.0], [5900.0, 4.0], [6300.0, 7.0], [6200.0, 3.0], [6400.0, 6.0], [6600.0, 6.0], [6500.0, 5.0], [6700.0, 9.0], [6800.0, 8.0], [6900.0, 6.0], [7000.0, 10.0], [7100.0, 6.0], [7400.0, 10.0], [7200.0, 11.0], [7300.0, 6.0], [7500.0, 13.0], [7600.0, 4.0], [7900.0, 5.0], [7700.0, 5.0], [7800.0, 10.0], [8000.0, 6.0], [8100.0, 7.0], [8400.0, 5.0], [8700.0, 7.0], [8600.0, 7.0], [8500.0, 11.0], [8200.0, 4.0], [8300.0, 10.0], [9200.0, 5.0], [9000.0, 7.0], [9100.0, 11.0], [8900.0, 7.0], [8800.0, 4.0], [9500.0, 7.0], [9700.0, 8.0], [9600.0, 6.0], [9300.0, 8.0], [9400.0, 5.0], [10200.0, 6.0], [9800.0, 7.0], [10000.0, 5.0], [10100.0, 4.0], [9900.0, 5.0], [10700.0, 5.0], [10600.0, 3.0], [10400.0, 5.0], [10500.0, 4.0], [10900.0, 5.0], [10800.0, 5.0], [11000.0, 4.0], [11100.0, 2.0], [11200.0, 3.0], [11400.0, 2.0], [11600.0, 5.0], [11700.0, 2.0], [11500.0, 3.0], [11800.0, 5.0], [12100.0, 4.0], [12200.0, 4.0], [11900.0, 4.0], [12000.0, 3.0], [12600.0, 2.0], [12400.0, 1.0], [12300.0, 2.0], [13200.0, 2.0], [13000.0, 2.0], [13300.0, 2.0], [12800.0, 2.0], [12900.0, 3.0], [13400.0, 3.0], [13600.0, 1.0], [13800.0, 1.0], [13500.0, 1.0], [14100.0, 1.0], [14300.0, 1.0], [14000.0, 1.0], [14700.0, 1.0], [15100.0, 2.0], [14900.0, 1.0], [15800.0, 2.0], [15400.0, 1.0], [15600.0, 2.0], [16000.0, 1.0], [17300.0, 2.0], [16900.0, 2.0], [17100.0, 1.0], [16700.0, 1.0], [18000.0, 1.0], [17700.0, 1.0], [18200.0, 1.0], [19600.0, 1.0], [21300.0, 1.0], [22500.0, 1.0]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[700.0, 1.0], [1100.0, 1.0], [1400.0, 1.0], [1700.0, 1.0], [2600.0, 1.0], [2800.0, 2.0], [2900.0, 1.0], [3100.0, 1.0], [3400.0, 1.0], [4100.0, 2.0], [4600.0, 3.0], [4500.0, 1.0], [4800.0, 1.0], [5100.0, 1.0], [4900.0, 2.0], [5200.0, 1.0], [5300.0, 1.0], [5500.0, 3.0], [5700.0, 6.0], [5800.0, 5.0], [6000.0, 2.0], [6100.0, 3.0], [5900.0, 1.0], [6200.0, 1.0], [6300.0, 2.0], [6500.0, 6.0], [6600.0, 2.0], [6400.0, 2.0], [6900.0, 6.0], [6800.0, 3.0], [6700.0, 5.0], [7100.0, 1.0], [7300.0, 6.0], [7200.0, 8.0], [7400.0, 3.0], [7500.0, 7.0], [7600.0, 1.0], [7800.0, 2.0], [7900.0, 5.0], [7700.0, 8.0], [8100.0, 4.0], [8000.0, 4.0], [8600.0, 8.0], [8400.0, 9.0], [8700.0, 6.0], [8200.0, 7.0], [8500.0, 2.0], [8300.0, 7.0], [9000.0, 8.0], [8900.0, 7.0], [8800.0, 8.0], [9200.0, 5.0], [9100.0, 6.0], [9300.0, 4.0], [9400.0, 2.0], [9700.0, 3.0], [9600.0, 2.0], [9500.0, 3.0], [10200.0, 6.0], [9900.0, 6.0], [10100.0, 7.0], [9800.0, 4.0], [10000.0, 3.0], [10600.0, 3.0], [10700.0, 6.0], [10300.0, 6.0], [10400.0, 4.0], [10500.0, 4.0], [11100.0, 6.0], [11000.0, 7.0], [11200.0, 6.0], [10800.0, 4.0], [10900.0, 3.0], [11500.0, 6.0], [11700.0, 3.0], [11300.0, 5.0], [11600.0, 3.0], [11400.0, 2.0], [12200.0, 1.0], [12100.0, 2.0], [11800.0, 1.0], [12000.0, 1.0], [12500.0, 5.0], [12300.0, 4.0], [12700.0, 2.0], [12400.0, 1.0], [12600.0, 3.0], [13100.0, 4.0], [13000.0, 2.0], [13300.0, 3.0], [12800.0, 1.0], [13200.0, 1.0], [12900.0, 1.0], [13400.0, 3.0], [13800.0, 3.0], [13500.0, 2.0], [13600.0, 2.0], [13700.0, 2.0], [14000.0, 3.0], [14100.0, 3.0], [14200.0, 2.0], [13900.0, 6.0], [14300.0, 2.0], [14500.0, 3.0], [14400.0, 2.0], [14700.0, 1.0], [14900.0, 8.0], [15100.0, 2.0], [15000.0, 2.0], [15200.0, 2.0], [15600.0, 4.0], [15700.0, 3.0], [15500.0, 2.0], [15800.0, 1.0], [15400.0, 1.0], [16000.0, 2.0], [15900.0, 2.0], [16300.0, 1.0], [17200.0, 1.0], [16600.0, 1.0], [17400.0, 4.0], [17000.0, 2.0], [17100.0, 2.0], [16500.0, 5.0], [16400.0, 1.0], [16700.0, 2.0], [16800.0, 1.0], [17300.0, 2.0], [16900.0, 2.0], [17700.0, 3.0], [18400.0, 1.0], [18100.0, 1.0], [17500.0, 2.0], [17800.0, 3.0], [17900.0, 1.0], [18300.0, 1.0], [18200.0, 2.0], [19300.0, 3.0], [19400.0, 4.0], [19000.0, 3.0], [19100.0, 1.0], [18500.0, 1.0], [18900.0, 1.0], [20100.0, 1.0], [20300.0, 1.0], [19700.0, 2.0], [20200.0, 1.0], [20400.0, 2.0], [19600.0, 1.0], [19500.0, 1.0], [20900.0, 2.0], [21300.0, 1.0], [20600.0, 1.0], [21000.0, 1.0], [21800.0, 1.0], [22200.0, 1.0], [22300.0, 2.0], [21700.0, 1.0], [22100.0, 1.0], [22400.0, 1.0], [22900.0, 3.0], [23500.0, 1.0], [23200.0, 1.0], [23400.0, 2.0], [22700.0, 1.0], [23900.0, 1.0], [23800.0, 1.0], [24000.0, 1.0], [24400.0, 2.0], [23600.0, 1.0], [25400.0, 1.0], [25300.0, 1.0], [25500.0, 1.0], [26400.0, 1.0], [25700.0, 1.0], [26000.0, 1.0], [26100.0, 2.0], [26600.0, 1.0], [27000.0, 1.0], [27200.0, 1.0], [27100.0, 1.0], [26700.0, 1.0], [28100.0, 1.0], [28900.0, 1.0], [28800.0, 1.0], [30100.0, 1.0], [29900.0, 1.0], [31400.0, 1.0], [33600.0, 1.0]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 497900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1497.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1497.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 17.13793103448276, "minX": 1.69851834E12, "maxY": 500.0, "series": [{"data": [[1.6985184E12, 483.81021897810206], [1.69851888E12, 17.13793103448276], [1.69851858E12, 318.27683615819217], [1.69851876E12, 122.93548387096774], [1.69851846E12, 439.290322580645], [1.69851864E12, 254.60101010101013], [1.69851834E12, 500.0], [1.69851882E12, 59.97905759162305], [1.69851852E12, 380.6174863387978], [1.6985187E12, 187.50753768844226]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851888E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 750.0, "minX": 1.0, "maxY": 497933.0, "series": [{"data": [[14.0, 497933.0], [19.0, 495725.0], [21.0, 494641.0], [23.0, 493215.5], [25.0, 491107.0], [26.0, 489499.0], [27.0, 489399.0], [28.0, 488152.5], [29.0, 484509.0], [31.0, 482590.0], [32.0, 480956.0], [34.0, 480470.0], [37.0, 478955.0], [39.0, 475714.5], [41.0, 473921.0], [40.0, 474736.0], [43.0, 471844.0], [42.0, 473379.0], [46.0, 470566.0], [51.0, 465589.0], [50.0, 466655.0], [53.0, 460343.75], [52.0, 464346.5], [55.0, 459373.0], [60.0, 456835.5], [63.0, 452909.0], [62.0, 453672.0], [67.0, 449450.75], [65.0, 451583.0], [71.0, 445145.0], [70.0, 447024.0], [75.0, 441236.75], [74.0, 443407.0], [79.0, 438012.5], [78.0, 438417.0], [77.0, 438729.0], [84.0, 434034.5], [90.0, 429004.0], [89.0, 431430.5], [88.0, 431905.6666666667], [95.0, 424490.75], [93.0, 426650.0], [99.0, 417801.5], [98.0, 418487.0], [96.0, 420763.3333333333], [102.0, 415801.0], [101.0, 416855.0], [106.0, 412030.0], [105.0, 414131.0], [104.0, 414923.0], [108.0, 411193.0], [114.0, 404375.0], [113.0, 406174.0], [112.0, 407932.0], [119.0, 401093.0], [117.0, 403010.0], [121.0, 399189.3333333333], [126.0, 393319.5], [125.0, 396393.0], [135.0, 385212.0], [134.0, 386239.0], [133.0, 387997.0], [130.0, 390756.0], [129.0, 392477.3333333333], [142.0, 379532.0], [141.0, 381877.0], [138.0, 382922.0], [136.0, 384696.0], [151.0, 371193.0], [148.0, 373472.5], [146.0, 374019.5], [144.0, 375893.5], [158.0, 366148.6666666667], [156.0, 367812.5], [154.0, 369757.0], [153.0, 370187.0], [166.0, 357750.0], [165.0, 359093.5], [164.0, 362038.0], [163.0, 362865.0], [162.0, 363234.0], [175.0, 348189.0], [174.0, 349540.0], [173.0, 350633.25], [169.0, 355394.0], [168.0, 356873.6666666667], [181.0, 344409.5], [179.0, 345807.0], [177.0, 347108.0], [189.0, 338073.0], [188.0, 339418.0], [186.0, 341004.0], [184.0, 342281.0], [197.0, 332034.3333333333], [195.0, 333862.0], [207.0, 320746.0], [206.0, 321913.0], [205.0, 322575.0], [203.0, 324841.0], [202.0, 326592.5], [201.0, 327240.0], [200.0, 328904.6666666667], [213.0, 315662.0], [212.0, 316520.6666666667], [208.0, 319475.5], [223.0, 306336.5], [221.0, 308233.5], [220.0, 308733.0], [219.0, 311132.0], [216.0, 314414.0], [230.0, 300950.2], [227.0, 304906.0], [237.0, 294598.0], [235.0, 295410.6666666667], [234.0, 296749.0], [233.0, 298189.0], [245.0, 286056.3333333333], [244.0, 289406.5], [243.0, 290187.0], [241.0, 291412.0], [240.0, 293438.0], [255.0, 277987.0], [254.0, 281084.0], [253.0, 282552.0], [252.0, 283493.5], [248.0, 285866.0], [269.0, 267050.0], [268.0, 267665.0], [265.0, 271448.0], [264.0, 272804.0], [263.0, 274308.0], [262.0, 275563.0], [261.0, 275996.0], [274.0, 264422.0], [286.0, 251136.0], [287.0, 248727.4], [285.0, 251627.0], [283.0, 254580.75], [280.0, 257298.5], [279.0, 258067.33333333334], [278.0, 259879.0], [273.0, 265785.0], [272.0, 266234.3333333333], [301.0, 237837.0], [299.0, 238684.0], [294.0, 242525.66666666666], [293.0, 243152.0], [292.0, 243976.5], [289.0, 247147.0], [319.0, 219399.0], [317.0, 221758.0], [316.0, 224445.0], [315.0, 224606.0], [313.0, 225991.66666666666], [308.0, 232963.5], [306.0, 233877.0], [304.0, 236059.5], [332.0, 207954.0], [331.0, 208437.0], [329.0, 209126.0], [328.0, 212076.75], [326.0, 215287.5], [323.0, 216113.0], [322.0, 216824.0], [321.0, 218046.0], [320.0, 218129.0], [348.0, 192544.0], [350.0, 188318.0], [351.0, 187086.66666666666], [349.0, 189919.0], [347.0, 194550.0], [344.0, 195876.0], [343.0, 196995.0], [336.0, 204967.5], [339.0, 199790.5], [338.0, 202516.66666666666], [363.0, 176493.66666666666], [361.0, 178241.0], [359.0, 180166.33333333334], [357.0, 184994.5], [382.0, 157564.0], [383.0, 156558.0], [380.0, 162129.33333333334], [378.0, 162709.0], [377.0, 164576.0], [376.0, 164801.0], [373.0, 167048.0], [372.0, 168215.0], [368.0, 172747.25], [387.0, 153196.0], [396.0, 144028.0], [395.0, 145357.25], [394.0, 147389.5], [391.0, 150443.5], [390.0, 152597.0], [386.0, 154020.0], [385.0, 154228.0], [384.0, 155435.0], [414.0, 128559.0], [413.0, 131330.0], [407.0, 134554.4], [404.0, 137867.25], [400.0, 141166.5], [430.0, 114175.0], [429.0, 115006.5], [427.0, 115362.0], [424.0, 119758.0], [421.0, 124860.0], [419.0, 126304.0], [418.0, 126876.0], [445.0, 93256.0], [444.0, 94543.0], [443.0, 96770.0], [438.0, 100353.0], [435.0, 103189.6], [434.0, 106427.5], [463.0, 72740.0], [462.0, 75630.0], [460.0, 76847.0], [459.0, 77858.5], [457.0, 80319.0], [455.0, 82456.0], [454.0, 82848.0], [449.0, 89055.75], [466.0, 68666.0], [479.0, 48353.75], [478.0, 52797.0], [475.0, 56960.0], [474.0, 59643.5], [473.0, 60430.0], [471.0, 62336.666666666664], [469.0, 65830.0], [465.0, 69789.0], [464.0, 71789.0], [494.0, 28931.0], [493.0, 29077.0], [491.0, 32417.0], [490.0, 34725.0], [489.0, 36859.0], [488.0, 39061.25], [484.0, 42420.0], [481.0, 44589.0], [500.0, 10024.5], [498.0, 19610.333333333332], [497.0, 27207.25], [496.0, 27890.0]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[270.14200000000005, 259096.606]], "isOverall": false, "label": "Express Js Http Call-Aggregated", "isController": false}, {"data": [[3.0, 5043.0], [8.0, 8621.5], [12.0, 6322.25], [14.0, 6709.0], [16.0, 9564.0], [18.0, 10642.5], [19.0, 7252.0], [23.0, 9173.0], [25.0, 10807.5], [26.0, 9441.0], [28.0, 5434.0], [29.0, 10990.5], [30.0, 9882.5], [31.0, 7588.5], [33.0, 7255.0], [34.0, 8517.0], [37.0, 11592.0], [39.0, 8759.5], [38.0, 6210.0], [41.0, 9031.0], [43.0, 7121.0], [45.0, 10776.0], [44.0, 7032.0], [47.0, 9124.0], [46.0, 6436.0], [49.0, 7490.0], [48.0, 4918.0], [51.0, 6871.0], [53.0, 6985.666666666667], [52.0, 6945.0], [56.0, 6404.0], [59.0, 5877.5], [58.0, 10007.0], [60.0, 7173.0], [63.0, 7122.5], [67.0, 7972.0], [65.0, 10551.0], [64.0, 2070.0], [71.0, 5720.0], [70.0, 6587.75], [68.0, 10249.0], [74.0, 5880.0], [79.0, 6945.0], [78.0, 3843.0], [77.0, 7273.25], [81.0, 8382.0], [80.0, 5926.0], [91.0, 6471.0], [90.0, 3391.5], [89.0, 6797.0], [88.0, 7443.666666666666], [95.0, 7814.6], [98.0, 6812.0], [96.0, 5353.5], [102.0, 6870.0], [101.0, 9782.0], [100.0, 2533.0], [109.0, 2933.0], [108.0, 6574.0], [114.0, 6686.0], [113.0, 6343.0], [112.0, 8664.333333333334], [117.0, 7422.2], [122.0, 6431.0], [126.0, 9627.0], [124.0, 5822.0], [134.0, 7261.0], [133.0, 8206.0], [131.0, 3633.0], [129.0, 7975.5], [128.0, 7703.0], [143.0, 7913.0], [142.0, 6745.571428571428], [138.0, 7459.0], [136.0, 6151.0], [151.0, 7507.0], [148.0, 7220.0], [146.0, 7514.0], [158.0, 7146.666666666667], [157.0, 9330.0], [156.0, 10752.0], [154.0, 5901.0], [153.0, 9518.0], [166.0, 9464.0], [165.0, 9065.5], [164.0, 5484.5], [162.0, 7820.0], [175.0, 3675.0], [174.0, 8651.333333333334], [173.0, 6697.8], [169.0, 6890.5], [168.0, 7036.0], [183.0, 8329.0], [181.0, 3838.0], [179.0, 7594.5], [176.0, 8823.0], [191.0, 2724.0], [190.0, 8853.666666666666], [188.0, 8274.25], [198.0, 10842.0], [197.0, 6949.0], [195.0, 6506.0], [194.0, 5605.0], [207.0, 9599.0], [205.0, 6553.0], [204.0, 7939.5], [203.0, 8633.0], [201.0, 6986.4], [200.0, 6463.0], [212.0, 8689.0], [210.0, 5996.0], [208.0, 6774.666666666667], [222.0, 7320.0], [221.0, 5725.0], [219.0, 7574.75], [216.0, 6611.0], [230.0, 7506.5], [229.0, 6664.0], [227.0, 9136.0], [239.0, 7883.0], [235.0, 6628.0], [233.0, 7378.75], [244.0, 8157.333333333333], [243.0, 7536.666666666667], [241.0, 6428.5], [240.0, 6987.0], [254.0, 5982.666666666667], [253.0, 8398.666666666666], [252.0, 8266.333333333334], [268.0, 6995.0], [265.0, 5066.0], [263.0, 8704.0], [262.0, 8550.0], [260.0, 10926.0], [258.0, 13203.0], [275.0, 4758.0], [286.0, 7414.666666666667], [287.0, 8664.2], [284.0, 6398.0], [283.0, 6345.666666666667], [282.0, 8990.0], [277.0, 11083.0], [276.0, 4414.0], [274.0, 9688.2], [273.0, 7382.0], [302.0, 11282.0], [300.0, 11954.0], [298.0, 7324.5], [294.0, 9967.0], [292.0, 9137.0], [288.0, 9102.0], [317.0, 6591.0], [319.0, 11889.333333333334], [316.0, 11068.0], [315.0, 9551.5], [311.0, 14497.0], [309.0, 11633.333333333334], [308.0, 9055.0], [305.0, 10522.0], [304.0, 12851.0], [332.0, 8223.0], [331.0, 12164.0], [330.0, 9357.0], [328.0, 10703.5], [327.0, 6013.0], [326.0, 8705.5], [322.0, 8995.0], [321.0, 6219.0], [351.0, 7681.0], [348.0, 10282.0], [347.0, 9450.0], [345.0, 6989.0], [344.0, 7650.0], [343.0, 10218.0], [342.0, 9750.0], [338.0, 9438.285714285716], [336.0, 10467.0], [366.0, 7457.0], [363.0, 7337.666666666667], [362.0, 9301.0], [361.0, 9912.0], [359.0, 8563.0], [357.0, 9635.666666666666], [353.0, 10946.0], [381.0, 8036.0], [383.0, 9883.0], [380.0, 9312.0], [378.0, 9657.0], [376.0, 11740.0], [375.0, 7848.0], [374.0, 7260.666666666667], [372.0, 9218.5], [370.0, 9039.5], [368.0, 8872.0], [398.0, 9103.0], [395.0, 7733.0], [394.0, 9948.0], [391.0, 9117.333333333334], [390.0, 6474.0], [389.0, 8994.0], [386.0, 6761.0], [384.0, 8101.0], [415.0, 7430.0], [414.0, 7868.0], [413.0, 4214.0], [407.0, 8142.0], [404.0, 6783.8], [402.0, 8711.0], [431.0, 11992.0], [427.0, 12990.0], [424.0, 12225.2], [423.0, 15726.666666666666], [420.0, 7431.0], [419.0, 10090.5], [416.0, 8361.0], [435.0, 7316.333333333333], [445.0, 7380.0], [444.0, 11687.0], [443.0, 8219.0], [442.0, 12095.0], [438.0, 6885.0], [437.0, 12829.0], [434.0, 10793.666666666666], [432.0, 9613.0], [463.0, 7862.0], [462.0, 11946.0], [459.0, 11885.0], [457.0, 6133.0], [456.0, 6827.5], [454.0, 5819.0], [453.0, 13461.5], [452.0, 3494.0], [450.0, 11624.5], [449.0, 13403.0], [476.0, 13056.0], [479.0, 14736.5], [478.0, 14192.0], [477.0, 14575.666666666666], [475.0, 11759.4], [471.0, 8252.0], [469.0, 9606.5], [467.0, 10857.0], [466.0, 14638.5], [465.0, 13418.0], [464.0, 11611.0], [494.0, 9293.0], [491.0, 9869.666666666666], [489.0, 12205.666666666666], [488.0, 10811.5], [485.0, 9727.0], [500.0, 5602.875], [498.0, 11096.4], [497.0, 10306.4]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[262.158, 8492.797999999997]], "isOverall": false, "label": "Gin Gonic Http Call-Aggregated", "isController": false}, {"data": [[2.0, 6306.0], [3.0, 1403.0], [4.0, 1126.0], [5.0, 3443.0], [6.0, 3185.0], [7.0, 2618.0], [8.0, 4193.0], [9.0, 2868.0], [10.0, 7540.0], [11.0, 2923.0], [12.0, 2877.0], [13.0, 7520.0], [14.0, 1753.0], [15.0, 5585.0], [16.0, 9562.0], [17.0, 7730.0], [18.0, 6521.0], [19.0, 4926.0], [20.0, 10347.0], [21.0, 10917.0], [22.0, 10884.0], [23.0, 13134.0], [24.0, 7416.0], [25.0, 10125.0], [26.0, 9509.0], [27.0, 6690.0], [28.0, 11750.0], [29.0, 11268.0], [30.0, 6192.0], [31.0, 9240.0], [33.0, 8238.0], [32.0, 6931.0], [35.0, 8847.0], [34.0, 9167.0], [37.0, 8952.0], [36.0, 10958.0], [39.0, 8854.0], [38.0, 10000.0], [41.0, 10573.0], [40.0, 8818.0], [43.0, 9726.0], [42.0, 5305.0], [45.0, 11342.0], [44.0, 8472.0], [47.0, 7369.0], [46.0, 9896.0], [49.0, 10088.0], [48.0, 10786.0], [51.0, 11183.0], [50.0, 8232.0], [53.0, 7263.0], [52.0, 6466.0], [55.0, 9831.0], [54.0, 12313.0], [57.0, 5858.0], [56.0, 7644.0], [59.0, 7248.0], [58.0, 6188.0], [61.0, 8823.0], [60.0, 11028.0], [63.0, 5271.0], [62.0, 8055.0], [67.0, 11667.0], [66.0, 4628.0], [65.0, 5875.0], [64.0, 8121.0], [71.0, 6760.0], [70.0, 7901.0], [69.0, 8390.0], [68.0, 9529.0], [75.0, 10173.0], [74.0, 7777.0], [73.0, 8326.0], [72.0, 6911.0], [79.0, 6597.0], [78.0, 9294.0], [77.0, 8357.0], [76.0, 8958.0], [83.0, 11167.0], [82.0, 11587.0], [81.0, 5740.0], [80.0, 9368.0], [87.0, 9089.0], [86.0, 4663.0], [85.0, 11530.0], [84.0, 11344.0], [91.0, 12623.0], [90.0, 8088.0], [89.0, 7731.0], [88.0, 11092.0], [95.0, 9746.0], [94.0, 9013.0], [93.0, 8664.0], [92.0, 6095.0], [99.0, 7939.0], [98.0, 7539.0], [97.0, 8787.0], [96.0, 11498.0], [103.0, 5783.0], [102.0, 10538.0], [101.0, 6106.0], [100.0, 5958.0], [107.0, 10351.0], [106.0, 11481.0], [105.0, 9905.0], [104.0, 10167.0], [111.0, 9120.0], [110.0, 13302.0], [109.0, 7756.0], [108.0, 10066.0], [115.0, 7454.0], [114.0, 11002.0], [113.0, 11290.0], [112.0, 6412.0], [119.0, 9862.0], [118.0, 8740.0], [117.0, 6799.0], [116.0, 11064.0], [123.0, 10474.0], [122.0, 8430.0], [121.0, 8973.0], [120.0, 8130.0], [127.0, 8243.0], [126.0, 8359.0], [125.0, 7744.0], [124.0, 8318.0], [135.0, 7163.0], [134.0, 11365.0], [133.0, 10828.0], [132.0, 8274.0], [131.0, 9678.0], [130.0, 12370.0], [129.0, 9679.0], [128.0, 12612.0], [143.0, 8034.0], [142.0, 9136.0], [141.0, 10916.0], [140.0, 6548.0], [139.0, 7700.0], [138.0, 10443.0], [137.0, 6316.0], [136.0, 7217.0], [151.0, 10100.0], [150.0, 7829.0], [149.0, 6801.0], [148.0, 6542.0], [147.0, 7570.0], [146.0, 9269.0], [145.0, 5722.0], [144.0, 7334.0], [159.0, 8867.0], [158.0, 10131.0], [157.0, 9499.0], [156.0, 8645.0], [155.0, 9042.0], [154.0, 4565.0], [153.0, 8781.0], [152.0, 8899.0], [167.0, 8997.0], [166.0, 9779.0], [165.0, 9017.0], [164.0, 9049.0], [163.0, 7552.0], [162.0, 9376.0], [161.0, 10236.0], [160.0, 10106.0], [175.0, 8566.0], [174.0, 6769.0], [173.0, 6914.0], [172.0, 5549.0], [171.0, 8603.0], [170.0, 9209.0], [169.0, 11120.0], [168.0, 9130.0], [183.0, 7257.0], [182.0, 13637.0], [181.0, 5505.0], [180.0, 9008.0], [179.0, 8427.0], [178.0, 7279.0], [177.0, 8378.0], [176.0, 10867.0], [191.0, 9189.0], [190.0, 9987.0], [189.0, 10365.0], [188.0, 12720.0], [187.0, 6677.0], [186.0, 5876.0], [185.0, 6879.0], [184.0, 10798.0], [199.0, 6020.0], [198.0, 7567.0], [197.0, 12510.0], [196.0, 10202.0], [195.0, 7764.0], [194.0, 8652.0], [193.0, 10588.0], [192.0, 9334.0], [207.0, 8043.0], [206.0, 7755.0], [205.0, 4690.0], [204.0, 10702.0], [203.0, 9886.0], [202.0, 9211.0], [201.0, 9970.0], [200.0, 9186.0], [215.0, 12525.0], [214.0, 8372.0], [213.0, 6793.0], [212.0, 10686.0], [211.0, 5769.0], [210.0, 8478.0], [209.0, 6513.0], [208.0, 6908.0], [223.0, 7922.0], [222.0, 7310.0], [221.0, 8463.0], [220.0, 4947.0], [219.0, 9994.0], [218.0, 8622.0], [217.0, 8887.0], [216.0, 7274.0], [231.0, 7392.0], [230.0, 10390.0], [229.0, 12060.0], [228.0, 5859.0], [227.0, 6700.0], [226.0, 11505.0], [225.0, 10233.0], [224.0, 7594.0], [239.0, 11208.0], [238.0, 11248.0], [237.0, 5716.0], [236.0, 7314.0], [235.0, 7444.0], [234.0, 7201.0], [233.0, 8822.0], [232.0, 8548.0], [246.0, 12133.0], [245.0, 8220.0], [244.0, 10511.0], [243.0, 8111.0], [242.0, 8938.0], [241.0, 10151.0], [240.0, 10210.0], [255.0, 10474.0], [254.0, 7281.0], [253.0, 8462.0], [252.0, 7933.0], [251.0, 14944.0], [250.0, 8611.0], [249.0, 8933.0], [248.0, 7621.5], [270.0, 10709.0], [271.0, 14098.0], [269.0, 15653.0], [268.0, 13096.0], [267.0, 9475.0], [266.0, 8483.0], [265.0, 9016.0], [264.0, 10753.0], [263.0, 10872.0], [257.0, 5835.0], [256.0, 12677.0], [259.0, 13964.0], [258.0, 13360.0], [262.0, 10473.0], [261.0, 11635.0], [260.0, 12527.0], [286.0, 8696.0], [287.0, 9920.0], [285.0, 6586.0], [284.0, 8142.0], [283.0, 7951.0], [282.0, 8287.0], [281.0, 8707.0], [280.0, 10321.0], [279.0, 8251.0], [273.0, 10250.0], [272.0, 6215.0], [275.0, 13419.0], [274.0, 14917.0], [278.0, 11820.0], [277.0, 11213.0], [276.0, 8721.0], [302.0, 13912.0], [303.0, 5145.0], [301.0, 7373.0], [300.0, 12986.0], [299.0, 8439.0], [298.0, 19365.0], [297.0, 4889.0], [296.0, 6992.0], [295.0, 9006.0], [289.0, 10654.0], [288.0, 10367.0], [291.0, 5731.0], [290.0, 8790.0], [294.0, 11316.0], [293.0, 11285.0], [292.0, 8970.0], [318.0, 13245.0], [319.0, 13178.0], [317.0, 10772.0], [316.0, 16868.0], [315.0, 11084.0], [314.0, 11085.0], [313.0, 11695.0], [312.0, 14158.0], [311.0, 11720.0], [305.0, 15247.0], [304.0, 15234.0], [307.0, 8687.0], [306.0, 15649.0], [310.0, 22980.0], [309.0, 15037.0], [308.0, 20907.0], [334.0, 18982.0], [335.0, 12713.0], [333.0, 10257.0], [332.0, 13914.0], [331.0, 13943.0], [330.0, 13485.0], [329.0, 13120.0], [328.0, 9935.0], [327.0, 10663.0], [321.0, 13874.0], [320.0, 15774.0], [323.0, 12136.0], [322.0, 12490.0], [326.0, 18250.0], [325.0, 11326.0], [324.0, 12338.0], [350.0, 15532.0], [351.0, 17129.0], [349.0, 14357.0], [348.0, 17896.0], [347.0, 17877.0], [346.0, 16725.0], [345.0, 11004.0], [344.0, 16584.0], [343.0, 16593.0], [337.0, 11548.0], [336.0, 17576.0], [339.0, 14244.0], [338.0, 18286.0], [342.0, 12844.0], [341.0, 18303.0], [340.0, 13592.0], [366.0, 13655.0], [367.0, 19079.0], [365.0, 13861.0], [364.0, 13752.0], [363.0, 14346.0], [362.0, 17713.0], [361.0, 13397.0], [360.0, 13797.0], [359.0, 16565.0], [353.0, 12206.0], [352.0, 11148.0], [355.0, 17994.0], [354.0, 15407.0], [358.0, 17855.0], [357.0, 19303.0], [356.0, 18550.0], [382.0, 14136.0], [383.0, 14538.0], [381.0, 13904.0], [380.0, 15797.0], [379.0, 14702.0], [378.0, 16537.0], [377.0, 14402.0], [376.0, 13941.0], [375.0, 19078.0], [369.0, 17189.0], [368.0, 17571.0], [371.0, 18124.0], [370.0, 12578.0], [374.0, 14902.0], [373.0, 14908.0], [372.0, 21042.0], [398.0, 15702.0], [399.0, 16955.0], [397.0, 17394.0], [396.0, 16944.0], [395.0, 16385.0], [394.0, 20626.0], [393.0, 15045.0], [392.0, 15573.0], [391.0, 19724.0], [385.0, 15934.0], [384.0, 15826.0], [387.0, 19553.0], [386.0, 14907.0], [390.0, 14002.0], [389.0, 16026.0], [388.0, 15685.0], [414.0, 23658.0], [415.0, 25519.0], [413.0, 19010.0], [412.0, 19194.0], [411.0, 26795.0], [410.0, 13866.0], [409.0, 11758.0], [408.0, 14955.0], [407.0, 19686.0], [401.0, 17004.0], [400.0, 17311.0], [403.0, 14265.0], [402.0, 16768.0], [406.0, 14197.0], [405.0, 13500.0], [404.0, 16440.0], [430.0, 26077.0], [431.0, 28115.0], [429.0, 30107.0], [428.0, 22174.0], [427.0, 31425.0], [426.0, 28890.0], [425.0, 20499.0], [424.0, 29927.0], [423.0, 26167.0], [417.0, 26166.0], [416.0, 33634.0], [419.0, 26604.0], [418.0, 22469.0], [422.0, 19436.0], [421.0, 27143.0], [420.0, 24427.0], [446.0, 19427.0], [447.0, 19490.0], [445.0, 22729.0], [444.0, 23465.0], [443.0, 25788.0], [442.0, 24098.0], [441.0, 22966.0], [440.0, 25309.0], [439.0, 18491.0], [433.0, 20478.0], [432.0, 28990.0], [435.0, 27286.0], [434.0, 24411.0], [438.0, 21760.0], [437.0, 20283.0], [436.0, 17486.0], [462.0, 22287.0], [463.0, 17425.0], [461.0, 20936.0], [460.0, 14469.0], [459.0, 21301.0], [458.0, 17784.0], [457.0, 23939.0], [456.0, 19496.0], [455.0, 23812.0], [449.0, 27090.0], [448.0, 23442.0], [451.0, 22310.0], [450.0, 19720.0], [454.0, 16570.0], [453.0, 17423.0], [452.0, 22327.0], [478.0, 15102.0], [479.0, 14020.0], [477.0, 20375.0], [476.0, 9304.0], [475.0, 7803.0], [474.0, 22949.0], [473.0, 21851.0], [472.0, 23595.0], [471.0, 17496.0], [465.0, 17780.0], [464.0, 17020.0], [467.0, 14996.0], [466.0, 19366.0], [470.0, 23237.0], [469.0, 13053.0], [468.0, 26496.0], [494.0, 11100.0], [495.0, 13111.0], [493.0, 11572.0], [492.0, 14595.0], [491.0, 15104.0], [490.0, 20141.0], [489.0, 17206.0], [488.0, 12520.0], [487.0, 15973.0], [481.0, 12334.0], [480.0, 11523.0], [483.0, 15608.0], [482.0, 25462.0], [486.0, 14596.0], [485.0, 13490.0], [484.0, 16601.0], [500.0, 4124.0], [499.0, 6980.0], [498.0, 11196.0], [497.0, 16076.0], [496.0, 14999.0], [1.0, 750.0]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}, {"data": [[250.5019999999996, 12190.263999999997]], "isOverall": false, "label": "Spring Boot Http Call-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 36.53333333333333, "minX": 1.69851834E12, "maxY": 5974586.75, "series": [{"data": [[1.6985184E12, 4134011.25], [1.69851888E12, 1717960.5666666667], [1.69851858E12, 5308266.183333334], [1.69851876E12, 5580619.766666667], [1.69851846E12, 4649135.75], [1.69851864E12, 5936446.166666667], [1.69851834E12, 496555.6666666667], [1.69851882E12, 5731452.616666666], [1.69851852E12, 5484040.283333333], [1.6985187E12, 5974586.75]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6985184E12, 312.81666666666666], [1.69851888E12, 132.43333333333334], [1.69851858E12, 404.15], [1.69851876E12, 424.7], [1.69851846E12, 353.9166666666667], [1.69851864E12, 452.1], [1.69851834E12, 36.53333333333333], [1.69851882E12, 436.1166666666667], [1.69851852E12, 417.85], [1.6985187E12, 454.3833333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851888E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 5446.666666666667, "minX": 1.69851834E12, "maxY": 492013.36363636365, "series": [{"data": [[1.6985184E12, 42761.54901960785], [1.69851888E12, 492013.36363636365], [1.69851858E12, 221241.64406779667], [1.69851876E12, 397690.09836065565], [1.69851846E12, 101224.82000000002], [1.69851864E12, 280333.40624999994], [1.69851834E12, 7849.7692307692305], [1.69851882E12, 456290.65625], [1.69851852E12, 160138.2666666667], [1.6985187E12, 339215.5223880597]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[1.6985184E12, 10879.13725490196], [1.69851888E12, 8403.315789473685], [1.69851858E12, 9793.508771929824], [1.69851876E12, 7157.968253968256], [1.69851846E12, 10361.22641509434], [1.69851864E12, 7763.090909090907], [1.69851834E12, 5446.666666666667], [1.69851882E12, 7272.428571428573], [1.69851852E12, 8453.310344827587], [1.6985187E12, 7409.1641791044785]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[1.6985184E12, 15541.542857142858], [1.69851888E12, 6200.035714285713], [1.69851858E12, 13098.983606557376], [1.69851876E12, 8817.806451612902], [1.69851846E12, 23077.40384615384], [1.69851864E12, 9618.720588235294], [1.69851882E12, 8684.468750000002], [1.69851852E12, 16154.230769230768], [1.6985187E12, 8798.553846153847]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851888E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 5401.333333333333, "minX": 1.69851834E12, "maxY": 491978.0, "series": [{"data": [[1.6985184E12, 42726.74509803922], [1.69851888E12, 491978.0], [1.69851858E12, 221204.1186440678], [1.69851876E12, 397653.39344262297], [1.69851846E12, 101184.02000000002], [1.69851864E12, 280298.59374999994], [1.69851834E12, 7816.0], [1.69851882E12, 456255.09374999994], [1.69851852E12, 160101.46666666667], [1.6985187E12, 339179.8208955223]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[1.6985184E12, 10844.882352941175], [1.69851888E12, 8368.526315789473], [1.69851858E12, 9752.315789473689], [1.69851876E12, 7122.603174603174], [1.69851846E12, 10319.245283018869], [1.69851864E12, 7727.424242424241], [1.69851834E12, 5401.333333333333], [1.69851882E12, 7239.190476190476], [1.69851852E12, 8413.224137931034], [1.6985187E12, 7374.597014925374]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[1.6985184E12, 15508.657142857142], [1.69851888E12, 6167.285714285715], [1.69851858E12, 13061.90163934426], [1.69851876E12, 8783.98387096774], [1.69851846E12, 23035.21153846154], [1.69851864E12, 9585.80882352941], [1.69851882E12, 8652.328125000005], [1.69851852E12, 16117.76923076923], [1.6985187E12, 8761.923076923076]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851888E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.6718749999999999, "minX": 1.69851834E12, "maxY": 42.15384615384616, "series": [{"data": [[1.6985184E12, 11.294117647058819], [1.69851888E12, 1.0], [1.69851858E12, 1.1355932203389836], [1.69851876E12, 1.1311475409836065], [1.69851846E12, 1.0600000000000003], [1.69851864E12, 1.03125], [1.69851834E12, 42.15384615384616], [1.69851882E12, 1.0312499999999996], [1.69851852E12, 1.0166666666666668], [1.6985187E12, 1.0597014925373134]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[1.6985184E12, 1.0588235294117647], [1.69851888E12, 0.7368421052631579], [1.69851858E12, 0.8245614035087719], [1.69851876E12, 0.8412698412698414], [1.69851846E12, 0.8490566037735849], [1.69851864E12, 0.9242424242424243], [1.69851834E12, 1.0], [1.69851882E12, 0.7301587301587303], [1.69851852E12, 0.913793103448276], [1.6985187E12, 0.8208955223880597]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[1.6985184E12, 1.0571428571428574], [1.69851888E12, 0.8214285714285714], [1.69851858E12, 0.8688524590163932], [1.69851876E12, 0.8709677419354838], [1.69851846E12, 0.846153846153846], [1.69851864E12, 0.9411764705882352], [1.69851882E12, 0.6718749999999999], [1.69851852E12, 0.9076923076923077], [1.6985187E12, 0.8923076923076925]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851888E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 750.0, "minX": 1.69851834E12, "maxY": 497933.0, "series": [{"data": [[1.6985184E12, 69131.0], [1.69851888E12, 497933.0], [1.69851858E12, 249704.0], [1.69851876E12, 426650.0], [1.69851846E12, 130809.0], [1.69851864E12, 308733.0], [1.69851834E12, 10525.0], [1.69851882E12, 484827.0], [1.69851852E12, 189919.0], [1.6985187E12, 367920.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6985184E12, 56883.6], [1.69851888E12, 491412.6], [1.69851858E12, 235920.0], [1.69851876E12, 409593.5], [1.69851846E12, 115180.2], [1.69851864E12, 291614.6], [1.69851834E12, 10053.2], [1.69851882E12, 466393.4], [1.69851852E12, 172240.0], [1.6985187E12, 350583.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6985184E12, 69001.8], [1.69851888E12, 497933.0], [1.69851858E12, 249092.48], [1.69851876E12, 424973.51], [1.69851846E12, 129632.44], [1.69851864E12, 308305.32], [1.69851834E12, 10525.0], [1.69851882E12, 484241.88], [1.69851852E12, 188828.68], [1.6985187E12, 367705.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6985184E12, 61937.19999999999], [1.69851888E12, 494695.2], [1.69851858E12, 243233.19999999998], [1.69851876E12, 418273.85], [1.69851846E12, 125148.79999999999], [1.69851864E12, 301608.65], [1.69851834E12, 10525.0], [1.69851882E12, 475646.0], [1.69851852E12, 180802.4], [1.6985187E12, 359658.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6985184E12, 2625.0], [1.69851888E12, 750.0], [1.69851858E12, 4293.0], [1.69851876E12, 2500.0], [1.69851846E12, 3494.0], [1.69851864E12, 2376.0], [1.69851834E12, 4612.0], [1.69851882E12, 2070.0], [1.69851852E12, 2381.0], [1.6985187E12, 2724.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6985184E12, 15973.0], [1.69851888E12, 8845.0], [1.69851858E12, 13874.0], [1.69851876E12, 9678.5], [1.69851846E12, 22469.0], [1.69851864E12, 10285.5], [1.69851834E12, 7395.0], [1.69851882E12, 9368.0], [1.69851852E12, 15826.0], [1.6985187E12, 9499.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851888E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 9831.0, "minX": 1.0, "maxY": 15693.5, "series": [{"data": [[1.0, 11555.0], [2.0, 11803.5], [4.0, 11369.0], [8.0, 12007.0], [9.0, 9831.0], [5.0, 11228.0], [10.0, 11145.5], [3.0, 12527.0], [6.0, 15693.5], [7.0, 11686.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 10.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 9795.0, "minX": 1.0, "maxY": 15654.0, "series": [{"data": [[1.0, 11520.0], [2.0, 11771.0], [4.0, 11340.5], [8.0, 11970.0], [9.0, 9795.0], [5.0, 11199.5], [10.0, 11113.0], [3.0, 12496.0], [6.0, 15654.0], [7.0, 11646.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 10.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.5, "minX": 1.69851834E12, "maxY": 8.6, "series": [{"data": [[1.6985184E12, 1.7], [1.69851888E12, 0.5], [1.69851858E12, 1.9333333333333333], [1.69851876E12, 2.066666666666667], [1.69851846E12, 1.7166666666666666], [1.69851864E12, 2.1666666666666665], [1.69851834E12, 8.6], [1.69851882E12, 2.1166666666666667], [1.69851852E12, 1.9666666666666666], [1.6985187E12, 2.2333333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851888E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.26666666666666666, "minX": 1.69851834E12, "maxY": 3.316666666666667, "series": [{"data": [[1.6985184E12, 2.283333333333333], [1.69851888E12, 0.9666666666666667], [1.69851858E12, 2.95], [1.69851876E12, 3.1], [1.69851846E12, 2.5833333333333335], [1.69851864E12, 3.3], [1.69851834E12, 0.26666666666666666], [1.69851882E12, 3.183333333333333], [1.69851852E12, 3.05], [1.6985187E12, 3.316666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851888E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.69851834E12, "maxY": 1.1333333333333333, "series": [{"data": [[1.6985184E12, 0.85], [1.69851888E12, 0.31666666666666665], [1.69851858E12, 0.95], [1.69851876E12, 1.05], [1.69851846E12, 0.8833333333333333], [1.69851864E12, 1.1], [1.69851834E12, 0.05], [1.69851882E12, 1.05], [1.69851852E12, 0.9666666666666667], [1.6985187E12, 1.1166666666666667]], "isOverall": false, "label": "Gin Gonic Http Call-success", "isController": false}, {"data": [[1.6985184E12, 0.5833333333333334], [1.69851888E12, 0.4666666666666667], [1.69851858E12, 1.0166666666666666], [1.69851876E12, 1.0333333333333334], [1.69851846E12, 0.8666666666666667], [1.69851864E12, 1.1333333333333333], [1.69851882E12, 1.0666666666666667], [1.69851852E12, 1.0833333333333333], [1.6985187E12, 1.0833333333333333]], "isOverall": false, "label": "Spring Boot Http Call-success", "isController": false}, {"data": [[1.6985184E12, 0.85], [1.69851888E12, 0.18333333333333332], [1.69851858E12, 0.9833333333333333], [1.69851876E12, 1.0166666666666666], [1.69851846E12, 0.8333333333333334], [1.69851864E12, 1.0666666666666667], [1.69851834E12, 0.21666666666666667], [1.69851882E12, 1.0666666666666667], [1.69851852E12, 1.0], [1.6985187E12, 1.1166666666666667]], "isOverall": false, "label": "Express Js Http Call-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851888E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.26666666666666666, "minX": 1.69851834E12, "maxY": 3.316666666666667, "series": [{"data": [[1.6985184E12, 2.283333333333333], [1.69851888E12, 0.9666666666666667], [1.69851858E12, 2.95], [1.69851876E12, 3.1], [1.69851846E12, 2.5833333333333335], [1.69851864E12, 3.3], [1.69851834E12, 0.26666666666666666], [1.69851882E12, 3.183333333333333], [1.69851852E12, 3.05], [1.6985187E12, 3.316666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851888E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}


/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 131.0, "minX": 0.0, "maxY": 62606.0, "series": [{"data": [[0.0, 835.0], [0.1, 835.0], [0.2, 836.0], [0.3, 836.0], [0.4, 836.0], [0.5, 836.0], [0.6, 836.0], [0.7, 840.0], [0.8, 850.0], [0.9, 850.0], [1.0, 858.0], [1.1, 858.0], [1.2, 865.0], [1.3, 865.0], [1.4, 879.0], [1.5, 879.0], [1.6, 904.0], [1.7, 904.0], [1.8, 928.0], [1.9, 928.0], [2.0, 951.0], [2.1, 951.0], [2.2, 961.0], [2.3, 961.0], [2.4, 1144.0], [2.5, 1144.0], [2.6, 1175.0], [2.7, 1175.0], [2.8, 1175.0], [2.9, 1189.0], [3.0, 1189.0], [3.1, 1219.0], [3.2, 1219.0], [3.3, 1228.0], [3.4, 1228.0], [3.5, 1236.0], [3.6, 1236.0], [3.7, 1246.0], [3.8, 1246.0], [3.9, 1254.0], [4.0, 1254.0], [4.1, 1262.0], [4.2, 1262.0], [4.3, 1281.0], [4.4, 1281.0], [4.5, 1286.0], [4.6, 1286.0], [4.7, 1301.0], [4.8, 1301.0], [4.9, 1432.0], [5.0, 1432.0], [5.1, 1491.0], [5.2, 1491.0], [5.3, 1507.0], [5.4, 1507.0], [5.5, 1512.0], [5.6, 1512.0], [5.7, 1513.0], [5.8, 1513.0], [5.9, 1519.0], [6.0, 1519.0], [6.1, 1532.0], [6.2, 1532.0], [6.3, 1568.0], [6.4, 1568.0], [6.5, 1597.0], [6.6, 1597.0], [6.7, 1619.0], [6.8, 1619.0], [6.9, 1628.0], [7.0, 1628.0], [7.1, 1688.0], [7.2, 1688.0], [7.3, 1722.0], [7.4, 1722.0], [7.5, 1770.0], [7.6, 1770.0], [7.7, 1788.0], [7.8, 1788.0], [7.9, 1840.0], [8.0, 1840.0], [8.1, 1845.0], [8.2, 1845.0], [8.3, 1890.0], [8.4, 1890.0], [8.5, 1929.0], [8.6, 1929.0], [8.7, 1981.0], [8.8, 2006.0], [8.9, 2006.0], [9.0, 2131.0], [9.1, 2131.0], [9.2, 2164.0], [9.3, 2164.0], [9.4, 2191.0], [9.5, 2191.0], [9.6, 2271.0], [9.7, 2271.0], [9.8, 2453.0], [9.9, 2453.0], [10.0, 2621.0], [10.1, 2621.0], [10.2, 2761.0], [10.3, 2761.0], [10.4, 2795.0], [10.5, 2795.0], [10.6, 2880.0], [10.7, 2880.0], [10.8, 3293.0], [10.9, 3293.0], [11.0, 3976.0], [11.1, 3976.0], [11.2, 4131.0], [11.3, 4131.0], [11.4, 4901.0], [11.5, 4901.0], [11.6, 4924.0], [11.7, 4924.0], [11.8, 5222.0], [11.9, 5222.0], [12.0, 5371.0], [12.1, 5371.0], [12.2, 5478.0], [12.3, 5478.0], [12.4, 5742.0], [12.5, 5742.0], [12.6, 5742.0], [12.7, 5742.0], [12.8, 5786.0], [12.9, 5786.0], [13.0, 5792.0], [13.1, 5792.0], [13.2, 5893.0], [13.3, 5893.0], [13.4, 6172.0], [13.5, 6172.0], [13.6, 6244.0], [13.7, 6244.0], [13.8, 6248.0], [13.9, 6248.0], [14.0, 6260.0], [14.1, 6260.0], [14.2, 6480.0], [14.3, 6480.0], [14.4, 6604.0], [14.5, 6604.0], [14.6, 6618.0], [14.7, 6618.0], [14.8, 6632.0], [14.9, 6632.0], [15.0, 6633.0], [15.1, 6633.0], [15.2, 6863.0], [15.3, 6863.0], [15.4, 6969.0], [15.5, 6969.0], [15.6, 7109.0], [15.7, 7109.0], [15.8, 7171.0], [15.9, 7171.0], [16.0, 7231.0], [16.1, 7231.0], [16.2, 7277.0], [16.3, 7277.0], [16.4, 7314.0], [16.5, 7314.0], [16.6, 7486.0], [16.7, 7486.0], [16.8, 7512.0], [16.9, 7512.0], [17.0, 7914.0], [17.1, 7914.0], [17.2, 8016.0], [17.3, 8016.0], [17.4, 8072.0], [17.5, 8072.0], [17.6, 8391.0], [17.7, 8391.0], [17.8, 8454.0], [17.9, 8454.0], [18.0, 8522.0], [18.1, 8522.0], [18.2, 8628.0], [18.3, 8628.0], [18.4, 8731.0], [18.5, 8731.0], [18.6, 8779.0], [18.7, 8779.0], [18.8, 8798.0], [18.9, 8798.0], [19.0, 8828.0], [19.1, 8828.0], [19.2, 8993.0], [19.3, 8993.0], [19.4, 9417.0], [19.5, 9417.0], [19.6, 9463.0], [19.7, 9463.0], [19.8, 9570.0], [19.9, 9570.0], [20.0, 9592.0], [20.1, 9592.0], [20.2, 9623.0], [20.3, 9623.0], [20.4, 9658.0], [20.5, 9658.0], [20.6, 9805.0], [20.7, 9805.0], [20.8, 9879.0], [20.9, 9879.0], [21.0, 9913.0], [21.1, 9913.0], [21.2, 10793.0], [21.3, 10793.0], [21.4, 10867.0], [21.5, 10867.0], [21.6, 10924.0], [21.7, 10924.0], [21.8, 10933.0], [21.9, 10933.0], [22.0, 11076.0], [22.1, 11076.0], [22.2, 11091.0], [22.3, 11091.0], [22.4, 11129.0], [22.5, 11129.0], [22.6, 11308.0], [22.7, 11308.0], [22.8, 11568.0], [22.9, 11568.0], [23.0, 11587.0], [23.1, 11587.0], [23.2, 11748.0], [23.3, 11748.0], [23.4, 11803.0], [23.5, 11803.0], [23.6, 11830.0], [23.7, 11830.0], [23.8, 11849.0], [23.9, 11849.0], [24.0, 11919.0], [24.1, 11919.0], [24.2, 12064.0], [24.3, 12064.0], [24.4, 12504.0], [24.5, 12504.0], [24.6, 12565.0], [24.7, 12565.0], [24.8, 12589.0], [24.9, 12589.0], [25.0, 12593.0], [25.1, 12593.0], [25.2, 12814.0], [25.3, 12814.0], [25.4, 12862.0], [25.5, 12862.0], [25.6, 13007.0], [25.7, 13007.0], [25.8, 13050.0], [25.9, 13050.0], [26.0, 13248.0], [26.1, 13248.0], [26.2, 13268.0], [26.3, 13268.0], [26.4, 13317.0], [26.5, 13317.0], [26.6, 13374.0], [26.7, 13374.0], [26.8, 13567.0], [26.9, 13567.0], [27.0, 14124.0], [27.1, 14124.0], [27.2, 14272.0], [27.3, 14272.0], [27.4, 14671.0], [27.5, 14671.0], [27.6, 14787.0], [27.7, 14787.0], [27.8, 14858.0], [27.9, 14858.0], [28.0, 14868.0], [28.1, 14868.0], [28.2, 15088.0], [28.3, 15088.0], [28.4, 15119.0], [28.5, 15119.0], [28.6, 15213.0], [28.7, 15213.0], [28.8, 15355.0], [28.9, 15355.0], [29.0, 15478.0], [29.1, 15478.0], [29.2, 15494.0], [29.3, 15494.0], [29.4, 15498.0], [29.5, 15498.0], [29.6, 15502.0], [29.7, 15502.0], [29.8, 15624.0], [29.9, 15624.0], [30.0, 15714.0], [30.1, 15714.0], [30.2, 15719.0], [30.3, 15719.0], [30.4, 16365.0], [30.5, 16365.0], [30.6, 16453.0], [30.7, 16453.0], [30.8, 16489.0], [30.9, 16489.0], [31.0, 16515.0], [31.1, 16515.0], [31.2, 16538.0], [31.3, 16538.0], [31.4, 16607.0], [31.5, 16607.0], [31.6, 16817.0], [31.7, 16817.0], [31.8, 17145.0], [31.9, 17145.0], [32.0, 17274.0], [32.1, 17274.0], [32.2, 17330.0], [32.3, 17330.0], [32.4, 17495.0], [32.5, 17495.0], [32.6, 17511.0], [32.7, 17511.0], [32.8, 17538.0], [32.9, 17538.0], [33.0, 17980.0], [33.1, 17980.0], [33.2, 18215.0], [33.3, 18215.0], [33.4, 18264.0], [33.5, 18264.0], [33.6, 18382.0], [33.7, 18382.0], [33.8, 18435.0], [33.9, 18435.0], [34.0, 18502.0], [34.1, 18502.0], [34.2, 18511.0], [34.3, 18511.0], [34.4, 18517.0], [34.5, 18517.0], [34.6, 19174.0], [34.7, 19174.0], [34.8, 19528.0], [34.9, 19528.0], [35.0, 19746.0], [35.1, 19746.0], [35.2, 19773.0], [35.3, 19773.0], [35.4, 19940.0], [35.5, 19940.0], [35.6, 20049.0], [35.7, 20049.0], [35.8, 20193.0], [35.9, 20193.0], [36.0, 20217.0], [36.1, 20217.0], [36.2, 20314.0], [36.3, 20314.0], [36.4, 20329.0], [36.5, 20329.0], [36.6, 20367.0], [36.7, 20367.0], [36.8, 20416.0], [36.9, 20416.0], [37.0, 20626.0], [37.1, 20626.0], [37.2, 20698.0], [37.3, 20698.0], [37.4, 20903.0], [37.5, 20903.0], [37.6, 20911.0], [37.7, 20911.0], [37.8, 20911.0], [37.9, 21071.0], [38.0, 21071.0], [38.1, 21072.0], [38.2, 21072.0], [38.3, 21287.0], [38.4, 21287.0], [38.5, 21452.0], [38.6, 21452.0], [38.7, 21593.0], [38.8, 21593.0], [38.9, 21971.0], [39.0, 21971.0], [39.1, 22124.0], [39.2, 22124.0], [39.3, 22134.0], [39.4, 22134.0], [39.5, 22176.0], [39.6, 22176.0], [39.7, 22299.0], [39.8, 22299.0], [39.9, 22562.0], [40.0, 22562.0], [40.1, 22566.0], [40.2, 22566.0], [40.3, 22596.0], [40.4, 22596.0], [40.5, 22608.0], [40.6, 22608.0], [40.7, 22637.0], [40.8, 22637.0], [40.9, 23103.0], [41.0, 23103.0], [41.1, 23321.0], [41.2, 23321.0], [41.3, 23872.0], [41.4, 23872.0], [41.5, 23929.0], [41.6, 23929.0], [41.7, 24506.0], [41.8, 24506.0], [41.9, 24564.0], [42.0, 24564.0], [42.1, 24612.0], [42.2, 24612.0], [42.3, 24649.0], [42.4, 24649.0], [42.5, 24803.0], [42.6, 24803.0], [42.7, 24804.0], [42.8, 24804.0], [42.9, 24963.0], [43.0, 24963.0], [43.1, 25075.0], [43.2, 25075.0], [43.3, 25249.0], [43.4, 25249.0], [43.5, 25256.0], [43.6, 25256.0], [43.7, 25406.0], [43.8, 25406.0], [43.9, 25414.0], [44.0, 25414.0], [44.1, 25431.0], [44.2, 25431.0], [44.3, 25523.0], [44.4, 25523.0], [44.5, 25589.0], [44.6, 25589.0], [44.7, 25641.0], [44.8, 25641.0], [44.9, 25666.0], [45.0, 25666.0], [45.1, 25884.0], [45.2, 25884.0], [45.3, 25922.0], [45.4, 25922.0], [45.5, 26122.0], [45.6, 26122.0], [45.7, 26173.0], [45.8, 26173.0], [45.9, 26179.0], [46.0, 26179.0], [46.1, 26287.0], [46.2, 26287.0], [46.3, 26321.0], [46.4, 26321.0], [46.5, 26342.0], [46.6, 26342.0], [46.7, 26537.0], [46.8, 26537.0], [46.9, 26660.0], [47.0, 26660.0], [47.1, 26790.0], [47.2, 26790.0], [47.3, 26871.0], [47.4, 26871.0], [47.5, 26874.0], [47.6, 26874.0], [47.7, 26886.0], [47.8, 26886.0], [47.9, 26909.0], [48.0, 26909.0], [48.1, 27009.0], [48.2, 27009.0], [48.3, 27352.0], [48.4, 27352.0], [48.5, 28211.0], [48.6, 28211.0], [48.7, 28227.0], [48.8, 28227.0], [48.9, 28257.0], [49.0, 28257.0], [49.1, 28317.0], [49.2, 28317.0], [49.3, 28407.0], [49.4, 28407.0], [49.5, 28496.0], [49.6, 28496.0], [49.7, 28525.0], [49.8, 28525.0], [49.9, 28612.0], [50.0, 28612.0], [50.1, 28754.0], [50.2, 28754.0], [50.3, 28883.0], [50.4, 28883.0], [50.5, 28890.0], [50.6, 28890.0], [50.7, 28929.0], [50.8, 28929.0], [50.9, 29069.0], [51.0, 29069.0], [51.1, 29229.0], [51.2, 29229.0], [51.3, 29244.0], [51.4, 29244.0], [51.5, 29287.0], [51.6, 29287.0], [51.7, 29356.0], [51.8, 29356.0], [51.9, 29469.0], [52.0, 29469.0], [52.1, 29691.0], [52.2, 29691.0], [52.3, 29703.0], [52.4, 29703.0], [52.5, 29857.0], [52.6, 29857.0], [52.7, 29939.0], [52.8, 29939.0], [52.9, 30005.0], [53.0, 30005.0], [53.1, 30015.0], [53.2, 30015.0], [53.3, 30195.0], [53.4, 30195.0], [53.5, 30357.0], [53.6, 30357.0], [53.7, 30444.0], [53.8, 30444.0], [53.9, 30493.0], [54.0, 30493.0], [54.1, 30639.0], [54.2, 30639.0], [54.3, 30675.0], [54.4, 30675.0], [54.5, 30695.0], [54.6, 30695.0], [54.7, 30995.0], [54.8, 30995.0], [54.9, 31147.0], [55.0, 31147.0], [55.1, 31153.0], [55.2, 31153.0], [55.3, 31212.0], [55.4, 31212.0], [55.5, 31302.0], [55.6, 31302.0], [55.7, 31364.0], [55.8, 31364.0], [55.9, 31462.0], [56.0, 31462.0], [56.1, 31645.0], [56.2, 31645.0], [56.3, 31648.0], [56.4, 31648.0], [56.5, 31692.0], [56.6, 31692.0], [56.7, 31884.0], [56.8, 31884.0], [56.9, 31928.0], [57.0, 31928.0], [57.1, 32029.0], [57.2, 32029.0], [57.3, 32196.0], [57.4, 32196.0], [57.5, 32231.0], [57.6, 32231.0], [57.7, 32286.0], [57.8, 32286.0], [57.9, 32394.0], [58.0, 32394.0], [58.1, 32549.0], [58.2, 32549.0], [58.3, 32642.0], [58.4, 32642.0], [58.5, 33036.0], [58.6, 33036.0], [58.7, 33103.0], [58.8, 33103.0], [58.9, 33200.0], [59.0, 33200.0], [59.1, 33217.0], [59.2, 33217.0], [59.3, 33220.0], [59.4, 33220.0], [59.5, 33266.0], [59.6, 33266.0], [59.7, 33301.0], [59.8, 33301.0], [59.9, 33378.0], [60.0, 33378.0], [60.1, 33792.0], [60.2, 33792.0], [60.3, 33794.0], [60.4, 33794.0], [60.5, 34001.0], [60.6, 34001.0], [60.7, 34007.0], [60.8, 34007.0], [60.9, 34178.0], [61.0, 34178.0], [61.1, 34197.0], [61.2, 34197.0], [61.3, 34224.0], [61.4, 34224.0], [61.5, 34335.0], [61.6, 34335.0], [61.7, 34450.0], [61.8, 34450.0], [61.9, 34648.0], [62.0, 34648.0], [62.1, 34713.0], [62.2, 34713.0], [62.3, 34821.0], [62.4, 34821.0], [62.5, 35156.0], [62.6, 35156.0], [62.7, 35203.0], [62.8, 35203.0], [62.9, 35280.0], [63.0, 35280.0], [63.1, 35450.0], [63.2, 35450.0], [63.3, 35456.0], [63.4, 35456.0], [63.5, 35545.0], [63.6, 35545.0], [63.7, 36264.0], [63.8, 36264.0], [63.9, 36391.0], [64.0, 36391.0], [64.1, 36946.0], [64.2, 36946.0], [64.3, 36950.0], [64.4, 36950.0], [64.5, 36968.0], [64.6, 36968.0], [64.7, 37053.0], [64.8, 37053.0], [64.9, 37309.0], [65.0, 37309.0], [65.1, 37856.0], [65.2, 37856.0], [65.3, 37921.0], [65.4, 37921.0], [65.5, 37947.0], [65.6, 37947.0], [65.7, 38049.0], [65.8, 38049.0], [65.9, 38134.0], [66.0, 38134.0], [66.1, 38135.0], [66.2, 38135.0], [66.3, 38242.0], [66.4, 38242.0], [66.5, 38334.0], [66.6, 38334.0], [66.7, 38527.0], [66.8, 38527.0], [66.9, 38552.0], [67.0, 38552.0], [67.1, 38688.0], [67.2, 38688.0], [67.3, 38694.0], [67.4, 38694.0], [67.5, 38769.0], [67.6, 38769.0], [67.7, 38879.0], [67.8, 38879.0], [67.9, 38886.0], [68.0, 38886.0], [68.1, 39016.0], [68.2, 39016.0], [68.3, 39123.0], [68.4, 39123.0], [68.5, 39272.0], [68.6, 39272.0], [68.7, 39420.0], [68.8, 39420.0], [68.9, 39509.0], [69.0, 39509.0], [69.1, 39728.0], [69.2, 39728.0], [69.3, 39789.0], [69.4, 39789.0], [69.5, 39793.0], [69.6, 39793.0], [69.7, 39796.0], [69.8, 39796.0], [69.9, 39882.0], [70.0, 39882.0], [70.1, 39997.0], [70.2, 39997.0], [70.3, 40105.0], [70.4, 40105.0], [70.5, 40231.0], [70.6, 40231.0], [70.7, 40232.0], [70.8, 40232.0], [70.9, 40469.0], [71.0, 40469.0], [71.1, 40558.0], [71.2, 40558.0], [71.3, 40770.0], [71.4, 40770.0], [71.5, 40868.0], [71.6, 40868.0], [71.7, 40883.0], [71.8, 40883.0], [71.9, 41086.0], [72.0, 41086.0], [72.1, 41092.0], [72.2, 41092.0], [72.3, 41102.0], [72.4, 41102.0], [72.5, 41324.0], [72.6, 41324.0], [72.7, 41472.0], [72.8, 41472.0], [72.9, 41497.0], [73.0, 41497.0], [73.1, 42092.0], [73.2, 42092.0], [73.3, 42127.0], [73.4, 42127.0], [73.5, 42171.0], [73.6, 42171.0], [73.7, 42253.0], [73.8, 42253.0], [73.9, 42350.0], [74.0, 42350.0], [74.1, 42709.0], [74.2, 42709.0], [74.3, 42757.0], [74.4, 42757.0], [74.5, 42875.0], [74.6, 42875.0], [74.7, 43072.0], [74.8, 43072.0], [74.9, 43394.0], [75.0, 43394.0], [75.1, 43430.0], [75.2, 43430.0], [75.3, 43522.0], [75.4, 43522.0], [75.5, 43635.0], [75.6, 43635.0], [75.7, 43711.0], [75.8, 43711.0], [75.9, 43886.0], [76.0, 43886.0], [76.1, 44013.0], [76.2, 44013.0], [76.3, 44022.0], [76.4, 44022.0], [76.5, 44338.0], [76.6, 44338.0], [76.7, 44807.0], [76.8, 44807.0], [76.9, 45137.0], [77.0, 45137.0], [77.1, 46678.0], [77.2, 46678.0], [77.3, 46780.0], [77.4, 46780.0], [77.5, 46881.0], [77.6, 46881.0], [77.7, 46979.0], [77.8, 46979.0], [77.9, 47017.0], [78.0, 47017.0], [78.1, 47463.0], [78.2, 47463.0], [78.3, 47466.0], [78.4, 47466.0], [78.5, 47509.0], [78.6, 47509.0], [78.7, 47861.0], [78.8, 47861.0], [78.9, 47872.0], [79.0, 47872.0], [79.1, 47908.0], [79.2, 47908.0], [79.3, 48497.0], [79.4, 48497.0], [79.5, 48534.0], [79.6, 48534.0], [79.7, 48540.0], [79.8, 48540.0], [79.9, 48608.0], [80.0, 48608.0], [80.1, 48636.0], [80.2, 48636.0], [80.3, 48701.0], [80.4, 48701.0], [80.5, 48758.0], [80.6, 48758.0], [80.7, 48790.0], [80.8, 48790.0], [80.9, 48793.0], [81.0, 48793.0], [81.1, 48798.0], [81.2, 48798.0], [81.3, 48840.0], [81.4, 48840.0], [81.5, 49031.0], [81.6, 49031.0], [81.7, 49277.0], [81.8, 49277.0], [81.9, 49285.0], [82.0, 49285.0], [82.1, 49289.0], [82.2, 49289.0], [82.3, 49301.0], [82.4, 49301.0], [82.5, 49367.0], [82.6, 49367.0], [82.7, 49604.0], [82.8, 49604.0], [82.9, 49646.0], [83.0, 49646.0], [83.1, 49661.0], [83.2, 49661.0], [83.3, 49682.0], [83.4, 49682.0], [83.5, 49851.0], [83.6, 49851.0], [83.7, 49915.0], [83.8, 49915.0], [83.9, 49965.0], [84.0, 49965.0], [84.1, 49996.0], [84.2, 49996.0], [84.3, 50229.0], [84.4, 50229.0], [84.5, 50424.0], [84.6, 50424.0], [84.7, 50497.0], [84.8, 50497.0], [84.9, 50627.0], [85.0, 50627.0], [85.1, 50756.0], [85.2, 50756.0], [85.3, 50909.0], [85.4, 50909.0], [85.5, 51193.0], [85.6, 51193.0], [85.7, 51261.0], [85.8, 51261.0], [85.9, 51262.0], [86.0, 51262.0], [86.1, 51298.0], [86.2, 51298.0], [86.3, 51362.0], [86.4, 51362.0], [86.5, 51382.0], [86.6, 51382.0], [86.7, 51787.0], [86.8, 51787.0], [86.9, 52106.0], [87.0, 52106.0], [87.1, 52110.0], [87.2, 52110.0], [87.3, 52124.0], [87.4, 52124.0], [87.5, 52243.0], [87.6, 52243.0], [87.7, 52287.0], [87.8, 52287.0], [87.9, 52416.0], [88.0, 52416.0], [88.1, 52587.0], [88.2, 52587.0], [88.3, 52734.0], [88.4, 52734.0], [88.5, 52757.0], [88.6, 52757.0], [88.7, 52809.0], [88.8, 52809.0], [88.9, 52932.0], [89.0, 52932.0], [89.1, 53151.0], [89.2, 53151.0], [89.3, 53245.0], [89.4, 53245.0], [89.5, 53824.0], [89.6, 53824.0], [89.7, 54337.0], [89.8, 54337.0], [89.9, 54512.0], [90.0, 54512.0], [90.1, 54537.0], [90.2, 54537.0], [90.3, 54675.0], [90.4, 54675.0], [90.5, 54759.0], [90.6, 54759.0], [90.7, 54923.0], [90.8, 54923.0], [90.9, 54960.0], [91.0, 54960.0], [91.1, 55150.0], [91.2, 55150.0], [91.3, 55630.0], [91.4, 55630.0], [91.5, 55662.0], [91.6, 55662.0], [91.7, 55773.0], [91.8, 55773.0], [91.9, 55791.0], [92.0, 55791.0], [92.1, 55915.0], [92.2, 55915.0], [92.3, 55942.0], [92.4, 55942.0], [92.5, 55949.0], [92.6, 55949.0], [92.7, 56060.0], [92.8, 56060.0], [92.9, 56170.0], [93.0, 56170.0], [93.1, 56501.0], [93.2, 56501.0], [93.3, 56509.0], [93.4, 56509.0], [93.5, 56551.0], [93.6, 56551.0], [93.7, 56552.0], [93.8, 56552.0], [93.9, 56565.0], [94.0, 56565.0], [94.1, 56598.0], [94.2, 56598.0], [94.3, 56658.0], [94.4, 56658.0], [94.5, 56901.0], [94.6, 56901.0], [94.7, 56956.0], [94.8, 56956.0], [94.9, 57106.0], [95.0, 57106.0], [95.1, 57904.0], [95.2, 57904.0], [95.3, 58235.0], [95.4, 58235.0], [95.5, 58311.0], [95.6, 58311.0], [95.7, 58315.0], [95.8, 58315.0], [95.9, 58388.0], [96.0, 58388.0], [96.1, 58905.0], [96.2, 58905.0], [96.3, 59193.0], [96.4, 59193.0], [96.5, 59719.0], [96.6, 59719.0], [96.7, 59797.0], [96.8, 59797.0], [96.9, 59892.0], [97.0, 59892.0], [97.1, 59976.0], [97.2, 59976.0], [97.3, 60559.0], [97.4, 60559.0], [97.5, 60836.0], [97.6, 60836.0], [97.7, 60931.0], [97.8, 60931.0], [97.9, 61157.0], [98.0, 61157.0], [98.1, 61398.0], [98.2, 61398.0], [98.3, 61420.0], [98.4, 61420.0], [98.5, 61439.0], [98.6, 61439.0], [98.7, 61471.0], [98.8, 61471.0], [98.9, 61537.0], [99.0, 61537.0], [99.1, 61636.0], [99.2, 61636.0], [99.3, 61968.0], [99.4, 61968.0], [99.5, 62264.0], [99.6, 62264.0], [99.7, 62367.0], [99.8, 62367.0], [99.9, 62606.0], [100.0, 62606.0]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[0.0, 131.0], [0.1, 131.0], [0.2, 200.0], [0.3, 200.0], [0.4, 221.0], [0.5, 221.0], [0.6, 221.0], [0.7, 222.0], [0.8, 225.0], [0.9, 225.0], [1.0, 241.0], [1.1, 241.0], [1.2, 243.0], [1.3, 243.0], [1.4, 246.0], [1.5, 246.0], [1.6, 248.0], [1.7, 248.0], [1.8, 249.0], [1.9, 249.0], [2.0, 258.0], [2.1, 258.0], [2.2, 260.0], [2.3, 260.0], [2.4, 261.0], [2.5, 261.0], [2.6, 261.0], [2.7, 261.0], [2.8, 265.0], [2.9, 265.0], [3.0, 269.0], [3.1, 269.0], [3.2, 271.0], [3.3, 271.0], [3.4, 271.0], [3.5, 273.0], [3.6, 273.0], [3.7, 273.0], [3.8, 273.0], [3.9, 280.0], [4.0, 283.0], [4.1, 283.0], [4.2, 295.0], [4.3, 295.0], [4.4, 316.0], [4.5, 316.0], [4.6, 316.0], [4.7, 320.0], [4.8, 320.0], [4.9, 320.0], [5.0, 320.0], [5.1, 321.0], [5.2, 321.0], [5.3, 330.0], [5.4, 330.0], [5.5, 333.0], [5.6, 333.0], [5.7, 335.0], [5.8, 335.0], [5.9, 341.0], [6.0, 341.0], [6.1, 345.0], [6.2, 345.0], [6.3, 346.0], [6.4, 346.0], [6.5, 349.0], [6.6, 349.0], [6.7, 350.0], [6.8, 350.0], [6.9, 350.0], [7.0, 350.0], [7.1, 351.0], [7.2, 351.0], [7.3, 351.0], [7.4, 351.0], [7.5, 354.0], [7.6, 354.0], [7.7, 360.0], [7.8, 360.0], [7.9, 361.0], [8.0, 361.0], [8.1, 363.0], [8.2, 363.0], [8.3, 364.0], [8.4, 364.0], [8.5, 366.0], [8.6, 366.0], [8.7, 367.0], [8.8, 368.0], [8.9, 368.0], [9.0, 370.0], [9.1, 370.0], [9.2, 374.0], [9.3, 374.0], [9.4, 374.0], [9.5, 374.0], [9.6, 374.0], [9.7, 374.0], [9.8, 376.0], [9.9, 376.0], [10.0, 377.0], [10.1, 377.0], [10.2, 377.0], [10.3, 377.0], [10.4, 378.0], [10.5, 378.0], [10.6, 378.0], [10.7, 378.0], [10.8, 380.0], [10.9, 380.0], [11.0, 383.0], [11.1, 383.0], [11.2, 384.0], [11.3, 384.0], [11.4, 388.0], [11.5, 388.0], [11.6, 389.0], [11.7, 389.0], [11.8, 395.0], [11.9, 395.0], [12.0, 400.0], [12.1, 400.0], [12.2, 402.0], [12.3, 402.0], [12.4, 406.0], [12.5, 406.0], [12.6, 409.0], [12.7, 409.0], [12.8, 410.0], [12.9, 410.0], [13.0, 412.0], [13.1, 412.0], [13.2, 413.0], [13.3, 413.0], [13.4, 414.0], [13.5, 414.0], [13.6, 415.0], [13.7, 415.0], [13.8, 422.0], [13.9, 422.0], [14.0, 427.0], [14.1, 427.0], [14.2, 428.0], [14.3, 428.0], [14.4, 432.0], [14.5, 432.0], [14.6, 434.0], [14.7, 434.0], [14.8, 436.0], [14.9, 436.0], [15.0, 443.0], [15.1, 443.0], [15.2, 449.0], [15.3, 449.0], [15.4, 449.0], [15.5, 449.0], [15.6, 457.0], [15.7, 457.0], [15.8, 461.0], [15.9, 461.0], [16.0, 465.0], [16.1, 465.0], [16.2, 466.0], [16.3, 466.0], [16.4, 471.0], [16.5, 471.0], [16.6, 478.0], [16.7, 478.0], [16.8, 482.0], [16.9, 482.0], [17.0, 485.0], [17.1, 485.0], [17.2, 489.0], [17.3, 489.0], [17.4, 490.0], [17.5, 490.0], [17.6, 493.0], [17.7, 493.0], [17.8, 500.0], [17.9, 500.0], [18.0, 501.0], [18.1, 501.0], [18.2, 510.0], [18.3, 510.0], [18.4, 512.0], [18.5, 512.0], [18.6, 514.0], [18.7, 514.0], [18.8, 515.0], [18.9, 515.0], [19.0, 518.0], [19.1, 518.0], [19.2, 522.0], [19.3, 522.0], [19.4, 527.0], [19.5, 527.0], [19.6, 532.0], [19.7, 532.0], [19.8, 533.0], [19.9, 533.0], [20.0, 539.0], [20.1, 539.0], [20.2, 544.0], [20.3, 544.0], [20.4, 544.0], [20.5, 544.0], [20.6, 545.0], [20.7, 545.0], [20.8, 554.0], [20.9, 554.0], [21.0, 554.0], [21.1, 554.0], [21.2, 557.0], [21.3, 557.0], [21.4, 558.0], [21.5, 558.0], [21.6, 558.0], [21.7, 558.0], [21.8, 560.0], [21.9, 560.0], [22.0, 565.0], [22.1, 565.0], [22.2, 566.0], [22.3, 566.0], [22.4, 566.0], [22.5, 566.0], [22.6, 569.0], [22.7, 569.0], [22.8, 570.0], [22.9, 570.0], [23.0, 571.0], [23.1, 571.0], [23.2, 572.0], [23.3, 572.0], [23.4, 579.0], [23.5, 579.0], [23.6, 586.0], [23.7, 586.0], [23.8, 603.0], [23.9, 603.0], [24.0, 607.0], [24.1, 607.0], [24.2, 616.0], [24.3, 616.0], [24.4, 620.0], [24.5, 620.0], [24.6, 624.0], [24.7, 624.0], [24.8, 628.0], [24.9, 628.0], [25.0, 628.0], [25.1, 628.0], [25.2, 632.0], [25.3, 632.0], [25.4, 637.0], [25.5, 637.0], [25.6, 639.0], [25.7, 639.0], [25.8, 641.0], [25.9, 641.0], [26.0, 645.0], [26.1, 645.0], [26.2, 654.0], [26.3, 654.0], [26.4, 658.0], [26.5, 658.0], [26.6, 660.0], [26.7, 660.0], [26.8, 662.0], [26.9, 662.0], [27.0, 663.0], [27.1, 663.0], [27.2, 663.0], [27.3, 663.0], [27.4, 673.0], [27.5, 673.0], [27.6, 673.0], [27.7, 673.0], [27.8, 675.0], [27.9, 675.0], [28.0, 675.0], [28.1, 675.0], [28.2, 677.0], [28.3, 677.0], [28.4, 680.0], [28.5, 680.0], [28.6, 693.0], [28.7, 693.0], [28.8, 693.0], [28.9, 693.0], [29.0, 695.0], [29.1, 695.0], [29.2, 698.0], [29.3, 698.0], [29.4, 700.0], [29.5, 700.0], [29.6, 701.0], [29.7, 701.0], [29.8, 720.0], [29.9, 720.0], [30.0, 720.0], [30.1, 720.0], [30.2, 721.0], [30.3, 721.0], [30.4, 722.0], [30.5, 722.0], [30.6, 729.0], [30.7, 729.0], [30.8, 730.0], [30.9, 730.0], [31.0, 742.0], [31.1, 742.0], [31.2, 742.0], [31.3, 742.0], [31.4, 743.0], [31.5, 743.0], [31.6, 745.0], [31.7, 745.0], [31.8, 745.0], [31.9, 745.0], [32.0, 751.0], [32.1, 751.0], [32.2, 756.0], [32.3, 756.0], [32.4, 757.0], [32.5, 757.0], [32.6, 760.0], [32.7, 760.0], [32.8, 765.0], [32.9, 765.0], [33.0, 765.0], [33.1, 765.0], [33.2, 769.0], [33.3, 769.0], [33.4, 784.0], [33.5, 784.0], [33.6, 788.0], [33.7, 788.0], [33.8, 792.0], [33.9, 792.0], [34.0, 796.0], [34.1, 796.0], [34.2, 797.0], [34.3, 797.0], [34.4, 799.0], [34.5, 799.0], [34.6, 802.0], [34.7, 802.0], [34.8, 803.0], [34.9, 803.0], [35.0, 817.0], [35.1, 817.0], [35.2, 828.0], [35.3, 828.0], [35.4, 828.0], [35.5, 828.0], [35.6, 828.0], [35.7, 828.0], [35.8, 838.0], [35.9, 838.0], [36.0, 841.0], [36.1, 841.0], [36.2, 841.0], [36.3, 841.0], [36.4, 842.0], [36.5, 842.0], [36.6, 842.0], [36.7, 842.0], [36.8, 848.0], [36.9, 848.0], [37.0, 856.0], [37.1, 856.0], [37.2, 857.0], [37.3, 857.0], [37.4, 859.0], [37.5, 859.0], [37.6, 860.0], [37.7, 860.0], [37.8, 862.0], [37.9, 862.0], [38.0, 863.0], [38.1, 863.0], [38.2, 866.0], [38.3, 866.0], [38.4, 867.0], [38.5, 867.0], [38.6, 870.0], [38.7, 870.0], [38.8, 876.0], [38.9, 876.0], [39.0, 883.0], [39.1, 883.0], [39.2, 887.0], [39.3, 887.0], [39.4, 889.0], [39.5, 889.0], [39.6, 903.0], [39.7, 903.0], [39.8, 903.0], [39.9, 907.0], [40.0, 907.0], [40.1, 914.0], [40.2, 914.0], [40.3, 914.0], [40.4, 914.0], [40.5, 927.0], [40.6, 927.0], [40.7, 930.0], [40.8, 930.0], [40.9, 933.0], [41.0, 933.0], [41.1, 934.0], [41.2, 934.0], [41.3, 936.0], [41.4, 936.0], [41.5, 938.0], [41.6, 938.0], [41.7, 949.0], [41.8, 949.0], [41.9, 952.0], [42.0, 952.0], [42.1, 954.0], [42.2, 954.0], [42.3, 957.0], [42.4, 957.0], [42.5, 984.0], [42.6, 984.0], [42.7, 994.0], [42.8, 994.0], [42.9, 998.0], [43.0, 998.0], [43.1, 1001.0], [43.2, 1001.0], [43.3, 1003.0], [43.4, 1003.0], [43.5, 1009.0], [43.6, 1009.0], [43.7, 1010.0], [43.8, 1010.0], [43.9, 1015.0], [44.0, 1015.0], [44.1, 1032.0], [44.2, 1032.0], [44.3, 1036.0], [44.4, 1036.0], [44.5, 1038.0], [44.6, 1038.0], [44.7, 1044.0], [44.8, 1044.0], [44.9, 1046.0], [45.0, 1046.0], [45.1, 1052.0], [45.2, 1052.0], [45.3, 1057.0], [45.4, 1057.0], [45.5, 1057.0], [45.6, 1057.0], [45.7, 1059.0], [45.8, 1059.0], [45.9, 1059.0], [46.0, 1059.0], [46.1, 1060.0], [46.2, 1060.0], [46.3, 1061.0], [46.4, 1061.0], [46.5, 1062.0], [46.6, 1062.0], [46.7, 1068.0], [46.8, 1068.0], [46.9, 1070.0], [47.0, 1070.0], [47.1, 1072.0], [47.2, 1072.0], [47.3, 1072.0], [47.4, 1072.0], [47.5, 1078.0], [47.6, 1078.0], [47.7, 1089.0], [47.8, 1089.0], [47.9, 1089.0], [48.0, 1089.0], [48.1, 1090.0], [48.2, 1090.0], [48.3, 1095.0], [48.4, 1095.0], [48.5, 1100.0], [48.6, 1100.0], [48.7, 1103.0], [48.8, 1103.0], [48.9, 1103.0], [49.0, 1103.0], [49.1, 1105.0], [49.2, 1105.0], [49.3, 1105.0], [49.4, 1105.0], [49.5, 1114.0], [49.6, 1114.0], [49.7, 1119.0], [49.8, 1119.0], [49.9, 1124.0], [50.0, 1124.0], [50.1, 1126.0], [50.2, 1126.0], [50.3, 1127.0], [50.4, 1127.0], [50.5, 1148.0], [50.6, 1148.0], [50.7, 1153.0], [50.8, 1153.0], [50.9, 1159.0], [51.0, 1159.0], [51.1, 1170.0], [51.2, 1170.0], [51.3, 1174.0], [51.4, 1174.0], [51.5, 1183.0], [51.6, 1183.0], [51.7, 1191.0], [51.8, 1191.0], [51.9, 1203.0], [52.0, 1203.0], [52.1, 1206.0], [52.2, 1206.0], [52.3, 1211.0], [52.4, 1211.0], [52.5, 1213.0], [52.6, 1213.0], [52.7, 1218.0], [52.8, 1218.0], [52.9, 1219.0], [53.0, 1219.0], [53.1, 1228.0], [53.2, 1228.0], [53.3, 1228.0], [53.4, 1228.0], [53.5, 1238.0], [53.6, 1238.0], [53.7, 1257.0], [53.8, 1257.0], [53.9, 1263.0], [54.0, 1263.0], [54.1, 1263.0], [54.2, 1263.0], [54.3, 1266.0], [54.4, 1266.0], [54.5, 1272.0], [54.6, 1272.0], [54.7, 1278.0], [54.8, 1278.0], [54.9, 1284.0], [55.0, 1284.0], [55.1, 1299.0], [55.2, 1299.0], [55.3, 1313.0], [55.4, 1313.0], [55.5, 1313.0], [55.6, 1313.0], [55.7, 1314.0], [55.8, 1314.0], [55.9, 1320.0], [56.0, 1320.0], [56.1, 1325.0], [56.2, 1325.0], [56.3, 1333.0], [56.4, 1333.0], [56.5, 1347.0], [56.6, 1347.0], [56.7, 1348.0], [56.8, 1348.0], [56.9, 1349.0], [57.0, 1349.0], [57.1, 1359.0], [57.2, 1359.0], [57.3, 1363.0], [57.4, 1363.0], [57.5, 1370.0], [57.6, 1370.0], [57.7, 1374.0], [57.8, 1374.0], [57.9, 1378.0], [58.0, 1378.0], [58.1, 1380.0], [58.2, 1380.0], [58.3, 1392.0], [58.4, 1392.0], [58.5, 1394.0], [58.6, 1394.0], [58.7, 1412.0], [58.8, 1412.0], [58.9, 1423.0], [59.0, 1423.0], [59.1, 1428.0], [59.2, 1428.0], [59.3, 1433.0], [59.4, 1433.0], [59.5, 1438.0], [59.6, 1438.0], [59.7, 1457.0], [59.8, 1457.0], [59.9, 1462.0], [60.0, 1462.0], [60.1, 1463.0], [60.2, 1463.0], [60.3, 1473.0], [60.4, 1473.0], [60.5, 1476.0], [60.6, 1476.0], [60.7, 1478.0], [60.8, 1478.0], [60.9, 1479.0], [61.0, 1479.0], [61.1, 1480.0], [61.2, 1480.0], [61.3, 1486.0], [61.4, 1486.0], [61.5, 1488.0], [61.6, 1488.0], [61.7, 1495.0], [61.8, 1495.0], [61.9, 1509.0], [62.0, 1509.0], [62.1, 1514.0], [62.2, 1514.0], [62.3, 1517.0], [62.4, 1517.0], [62.5, 1522.0], [62.6, 1522.0], [62.7, 1524.0], [62.8, 1524.0], [62.9, 1543.0], [63.0, 1543.0], [63.1, 1550.0], [63.2, 1550.0], [63.3, 1556.0], [63.4, 1556.0], [63.5, 1558.0], [63.6, 1558.0], [63.7, 1561.0], [63.8, 1561.0], [63.9, 1566.0], [64.0, 1566.0], [64.1, 1580.0], [64.2, 1580.0], [64.3, 1589.0], [64.4, 1589.0], [64.5, 1589.0], [64.6, 1589.0], [64.7, 1596.0], [64.8, 1596.0], [64.9, 1646.0], [65.0, 1646.0], [65.1, 1646.0], [65.2, 1646.0], [65.3, 1647.0], [65.4, 1647.0], [65.5, 1653.0], [65.6, 1653.0], [65.7, 1670.0], [65.8, 1670.0], [65.9, 1677.0], [66.0, 1677.0], [66.1, 1681.0], [66.2, 1681.0], [66.3, 1682.0], [66.4, 1682.0], [66.5, 1683.0], [66.6, 1683.0], [66.7, 1706.0], [66.8, 1706.0], [66.9, 1708.0], [67.0, 1708.0], [67.1, 1711.0], [67.2, 1711.0], [67.3, 1714.0], [67.4, 1714.0], [67.5, 1731.0], [67.6, 1731.0], [67.7, 1731.0], [67.8, 1731.0], [67.9, 1739.0], [68.0, 1739.0], [68.1, 1749.0], [68.2, 1749.0], [68.3, 1754.0], [68.4, 1754.0], [68.5, 1758.0], [68.6, 1758.0], [68.7, 1777.0], [68.8, 1777.0], [68.9, 1778.0], [69.0, 1778.0], [69.1, 1778.0], [69.2, 1778.0], [69.3, 1792.0], [69.4, 1792.0], [69.5, 1796.0], [69.6, 1796.0], [69.7, 1796.0], [69.8, 1796.0], [69.9, 1803.0], [70.0, 1803.0], [70.1, 1807.0], [70.2, 1807.0], [70.3, 1812.0], [70.4, 1812.0], [70.5, 1813.0], [70.6, 1813.0], [70.7, 1814.0], [70.8, 1814.0], [70.9, 1817.0], [71.0, 1817.0], [71.1, 1819.0], [71.2, 1819.0], [71.3, 1826.0], [71.4, 1826.0], [71.5, 1829.0], [71.6, 1829.0], [71.7, 1856.0], [71.8, 1856.0], [71.9, 1868.0], [72.0, 1868.0], [72.1, 1869.0], [72.2, 1869.0], [72.3, 1882.0], [72.4, 1882.0], [72.5, 1896.0], [72.6, 1896.0], [72.7, 1904.0], [72.8, 1904.0], [72.9, 1939.0], [73.0, 1939.0], [73.1, 1946.0], [73.2, 1946.0], [73.3, 1961.0], [73.4, 1961.0], [73.5, 1962.0], [73.6, 1962.0], [73.7, 1971.0], [73.8, 1971.0], [73.9, 1977.0], [74.0, 1977.0], [74.1, 1977.0], [74.2, 1977.0], [74.3, 1986.0], [74.4, 1986.0], [74.5, 2024.0], [74.6, 2024.0], [74.7, 2035.0], [74.8, 2035.0], [74.9, 2040.0], [75.0, 2040.0], [75.1, 2051.0], [75.2, 2051.0], [75.3, 2061.0], [75.4, 2061.0], [75.5, 2080.0], [75.6, 2080.0], [75.7, 2092.0], [75.8, 2092.0], [75.9, 2100.0], [76.0, 2100.0], [76.1, 2102.0], [76.2, 2102.0], [76.3, 2105.0], [76.4, 2105.0], [76.5, 2143.0], [76.6, 2143.0], [76.7, 2144.0], [76.8, 2144.0], [76.9, 2149.0], [77.0, 2149.0], [77.1, 2163.0], [77.2, 2163.0], [77.3, 2166.0], [77.4, 2166.0], [77.5, 2178.0], [77.6, 2178.0], [77.7, 2191.0], [77.8, 2191.0], [77.9, 2198.0], [78.0, 2198.0], [78.1, 2202.0], [78.2, 2202.0], [78.3, 2220.0], [78.4, 2220.0], [78.5, 2221.0], [78.6, 2221.0], [78.7, 2229.0], [78.8, 2229.0], [78.9, 2241.0], [79.0, 2241.0], [79.1, 2254.0], [79.2, 2254.0], [79.3, 2266.0], [79.4, 2266.0], [79.5, 2269.0], [79.6, 2269.0], [79.7, 2275.0], [79.8, 2275.0], [79.9, 2275.0], [80.0, 2275.0], [80.1, 2302.0], [80.2, 2302.0], [80.3, 2304.0], [80.4, 2304.0], [80.5, 2313.0], [80.6, 2313.0], [80.7, 2315.0], [80.8, 2315.0], [80.9, 2320.0], [81.0, 2320.0], [81.1, 2327.0], [81.2, 2327.0], [81.3, 2340.0], [81.4, 2340.0], [81.5, 2354.0], [81.6, 2354.0], [81.7, 2367.0], [81.8, 2367.0], [81.9, 2382.0], [82.0, 2382.0], [82.1, 2385.0], [82.2, 2385.0], [82.3, 2388.0], [82.4, 2388.0], [82.5, 2390.0], [82.6, 2390.0], [82.7, 2440.0], [82.8, 2440.0], [82.9, 2444.0], [83.0, 2444.0], [83.1, 2455.0], [83.2, 2455.0], [83.3, 2471.0], [83.4, 2471.0], [83.5, 2478.0], [83.6, 2478.0], [83.7, 2509.0], [83.8, 2509.0], [83.9, 2539.0], [84.0, 2539.0], [84.1, 2542.0], [84.2, 2542.0], [84.3, 2553.0], [84.4, 2553.0], [84.5, 2560.0], [84.6, 2560.0], [84.7, 2565.0], [84.8, 2565.0], [84.9, 2575.0], [85.0, 2575.0], [85.1, 2601.0], [85.2, 2601.0], [85.3, 2631.0], [85.4, 2631.0], [85.5, 2631.0], [85.6, 2631.0], [85.7, 2662.0], [85.8, 2662.0], [85.9, 2673.0], [86.0, 2673.0], [86.1, 2684.0], [86.2, 2684.0], [86.3, 2697.0], [86.4, 2697.0], [86.5, 2699.0], [86.6, 2699.0], [86.7, 2706.0], [86.8, 2706.0], [86.9, 2713.0], [87.0, 2713.0], [87.1, 2721.0], [87.2, 2721.0], [87.3, 2729.0], [87.4, 2729.0], [87.5, 2741.0], [87.6, 2741.0], [87.7, 2751.0], [87.8, 2751.0], [87.9, 2785.0], [88.0, 2785.0], [88.1, 2795.0], [88.2, 2795.0], [88.3, 2839.0], [88.4, 2839.0], [88.5, 2943.0], [88.6, 2943.0], [88.7, 2947.0], [88.8, 2947.0], [88.9, 2949.0], [89.0, 2949.0], [89.1, 2962.0], [89.2, 2962.0], [89.3, 3020.0], [89.4, 3020.0], [89.5, 3022.0], [89.6, 3022.0], [89.7, 3048.0], [89.8, 3048.0], [89.9, 3091.0], [90.0, 3091.0], [90.1, 3098.0], [90.2, 3098.0], [90.3, 3114.0], [90.4, 3114.0], [90.5, 3144.0], [90.6, 3144.0], [90.7, 3177.0], [90.8, 3177.0], [90.9, 3217.0], [91.0, 3217.0], [91.1, 3218.0], [91.2, 3218.0], [91.3, 3261.0], [91.4, 3261.0], [91.5, 3267.0], [91.6, 3267.0], [91.7, 3285.0], [91.8, 3285.0], [91.9, 3331.0], [92.0, 3331.0], [92.1, 3333.0], [92.2, 3333.0], [92.3, 3350.0], [92.4, 3350.0], [92.5, 3443.0], [92.6, 3443.0], [92.7, 3462.0], [92.8, 3462.0], [92.9, 3465.0], [93.0, 3465.0], [93.1, 3530.0], [93.2, 3530.0], [93.3, 3541.0], [93.4, 3541.0], [93.5, 3572.0], [93.6, 3572.0], [93.7, 3572.0], [93.8, 3572.0], [93.9, 3576.0], [94.0, 3576.0], [94.1, 3619.0], [94.2, 3619.0], [94.3, 3623.0], [94.4, 3623.0], [94.5, 3639.0], [94.6, 3639.0], [94.7, 3647.0], [94.8, 3647.0], [94.9, 3664.0], [95.0, 3664.0], [95.1, 3698.0], [95.2, 3698.0], [95.3, 3780.0], [95.4, 3780.0], [95.5, 3834.0], [95.6, 3834.0], [95.7, 3926.0], [95.8, 3926.0], [95.9, 3968.0], [96.0, 3968.0], [96.1, 3975.0], [96.2, 3975.0], [96.3, 4055.0], [96.4, 4055.0], [96.5, 4124.0], [96.6, 4124.0], [96.7, 4166.0], [96.8, 4166.0], [96.9, 4269.0], [97.0, 4269.0], [97.1, 4357.0], [97.2, 4357.0], [97.3, 4397.0], [97.4, 4397.0], [97.5, 4517.0], [97.6, 4517.0], [97.7, 4859.0], [97.8, 4859.0], [97.9, 4865.0], [98.0, 4865.0], [98.1, 4943.0], [98.2, 4943.0], [98.3, 5056.0], [98.4, 5056.0], [98.5, 5098.0], [98.6, 5098.0], [98.7, 5176.0], [98.8, 5176.0], [98.9, 5401.0], [99.0, 5401.0], [99.1, 5489.0], [99.2, 5489.0], [99.3, 5502.0], [99.4, 5502.0], [99.5, 5971.0], [99.6, 5971.0], [99.7, 6292.0], [99.8, 6292.0], [99.9, 6302.0], [100.0, 6302.0]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[0.0, 228.0], [0.1, 228.0], [0.2, 419.0], [0.3, 419.0], [0.4, 423.0], [0.5, 423.0], [0.6, 423.0], [0.7, 517.0], [0.8, 588.0], [0.9, 588.0], [1.0, 617.0], [1.1, 617.0], [1.2, 619.0], [1.3, 619.0], [1.4, 620.0], [1.5, 620.0], [1.6, 718.0], [1.7, 718.0], [1.8, 765.0], [1.9, 765.0], [2.0, 815.0], [2.1, 815.0], [2.2, 819.0], [2.3, 819.0], [2.4, 824.0], [2.5, 824.0], [2.6, 860.0], [2.7, 860.0], [2.8, 860.0], [2.9, 870.0], [3.0, 870.0], [3.1, 914.0], [3.2, 914.0], [3.3, 922.0], [3.4, 922.0], [3.5, 933.0], [3.6, 933.0], [3.7, 943.0], [3.8, 943.0], [3.9, 986.0], [4.0, 986.0], [4.1, 1007.0], [4.2, 1007.0], [4.3, 1035.0], [4.4, 1035.0], [4.5, 1040.0], [4.6, 1040.0], [4.7, 1072.0], [4.8, 1072.0], [4.9, 1080.0], [5.0, 1080.0], [5.1, 1093.0], [5.2, 1093.0], [5.3, 1106.0], [5.4, 1106.0], [5.5, 1114.0], [5.6, 1114.0], [5.7, 1114.0], [5.8, 1114.0], [5.9, 1157.0], [6.0, 1157.0], [6.1, 1162.0], [6.2, 1162.0], [6.3, 1186.0], [6.4, 1186.0], [6.5, 1210.0], [6.6, 1210.0], [6.7, 1213.0], [6.8, 1213.0], [6.9, 1218.0], [7.0, 1218.0], [7.1, 1218.0], [7.2, 1218.0], [7.3, 1220.0], [7.4, 1220.0], [7.5, 1241.0], [7.6, 1241.0], [7.7, 1246.0], [7.8, 1246.0], [7.9, 1257.0], [8.0, 1257.0], [8.1, 1266.0], [8.2, 1266.0], [8.3, 1277.0], [8.4, 1277.0], [8.5, 1278.0], [8.6, 1278.0], [8.7, 1287.0], [8.8, 1297.0], [8.9, 1297.0], [9.0, 1349.0], [9.1, 1349.0], [9.2, 1352.0], [9.3, 1352.0], [9.4, 1361.0], [9.5, 1361.0], [9.6, 1369.0], [9.7, 1369.0], [9.8, 1370.0], [9.9, 1370.0], [10.0, 1395.0], [10.1, 1395.0], [10.2, 1407.0], [10.3, 1407.0], [10.4, 1411.0], [10.5, 1411.0], [10.6, 1415.0], [10.7, 1415.0], [10.8, 1417.0], [10.9, 1417.0], [11.0, 1430.0], [11.1, 1430.0], [11.2, 1458.0], [11.3, 1458.0], [11.4, 1466.0], [11.5, 1466.0], [11.6, 1483.0], [11.7, 1483.0], [11.8, 1515.0], [11.9, 1515.0], [12.0, 1534.0], [12.1, 1534.0], [12.2, 1556.0], [12.3, 1556.0], [12.4, 1598.0], [12.5, 1598.0], [12.6, 1608.0], [12.7, 1608.0], [12.8, 1613.0], [12.9, 1613.0], [13.0, 1633.0], [13.1, 1633.0], [13.2, 1659.0], [13.3, 1659.0], [13.4, 1683.0], [13.5, 1683.0], [13.6, 1689.0], [13.7, 1689.0], [13.8, 1703.0], [13.9, 1703.0], [14.0, 1704.0], [14.1, 1704.0], [14.2, 1715.0], [14.3, 1715.0], [14.4, 1725.0], [14.5, 1725.0], [14.6, 1730.0], [14.7, 1730.0], [14.8, 1751.0], [14.9, 1751.0], [15.0, 1756.0], [15.1, 1756.0], [15.2, 1775.0], [15.3, 1775.0], [15.4, 1801.0], [15.5, 1801.0], [15.6, 1815.0], [15.7, 1815.0], [15.8, 1819.0], [15.9, 1819.0], [16.0, 1821.0], [16.1, 1821.0], [16.2, 1919.0], [16.3, 1919.0], [16.4, 1940.0], [16.5, 1940.0], [16.6, 1941.0], [16.7, 1941.0], [16.8, 1958.0], [16.9, 1958.0], [17.0, 1974.0], [17.1, 1974.0], [17.2, 1975.0], [17.3, 1975.0], [17.4, 1987.0], [17.5, 1987.0], [17.6, 2008.0], [17.7, 2008.0], [17.8, 2009.0], [17.9, 2009.0], [18.0, 2014.0], [18.1, 2014.0], [18.2, 2015.0], [18.3, 2015.0], [18.4, 2026.0], [18.5, 2026.0], [18.6, 2042.0], [18.7, 2042.0], [18.8, 2053.0], [18.9, 2053.0], [19.0, 2097.0], [19.1, 2097.0], [19.2, 2100.0], [19.3, 2100.0], [19.4, 2160.0], [19.5, 2160.0], [19.6, 2181.0], [19.7, 2181.0], [19.8, 2195.0], [19.9, 2195.0], [20.0, 2203.0], [20.1, 2203.0], [20.2, 2209.0], [20.3, 2209.0], [20.4, 2212.0], [20.5, 2212.0], [20.6, 2221.0], [20.7, 2221.0], [20.8, 2253.0], [20.9, 2253.0], [21.0, 2268.0], [21.1, 2268.0], [21.2, 2294.0], [21.3, 2294.0], [21.4, 2332.0], [21.5, 2332.0], [21.6, 2337.0], [21.7, 2337.0], [21.8, 2341.0], [21.9, 2341.0], [22.0, 2377.0], [22.1, 2377.0], [22.2, 2396.0], [22.3, 2396.0], [22.4, 2397.0], [22.5, 2397.0], [22.6, 2404.0], [22.7, 2404.0], [22.8, 2408.0], [22.9, 2408.0], [23.0, 2444.0], [23.1, 2444.0], [23.2, 2447.0], [23.3, 2447.0], [23.4, 2458.0], [23.5, 2458.0], [23.6, 2459.0], [23.7, 2459.0], [23.8, 2461.0], [23.9, 2461.0], [24.0, 2466.0], [24.1, 2466.0], [24.2, 2468.0], [24.3, 2468.0], [24.4, 2469.0], [24.5, 2469.0], [24.6, 2497.0], [24.7, 2497.0], [24.8, 2497.0], [24.9, 2497.0], [25.0, 2514.0], [25.1, 2514.0], [25.2, 2520.0], [25.3, 2520.0], [25.4, 2523.0], [25.5, 2523.0], [25.6, 2531.0], [25.7, 2531.0], [25.8, 2546.0], [25.9, 2546.0], [26.0, 2551.0], [26.1, 2551.0], [26.2, 2561.0], [26.3, 2561.0], [26.4, 2577.0], [26.5, 2577.0], [26.6, 2580.0], [26.7, 2580.0], [26.8, 2581.0], [26.9, 2581.0], [27.0, 2584.0], [27.1, 2584.0], [27.2, 2596.0], [27.3, 2596.0], [27.4, 2622.0], [27.5, 2622.0], [27.6, 2628.0], [27.7, 2628.0], [27.8, 2629.0], [27.9, 2629.0], [28.0, 2635.0], [28.1, 2635.0], [28.2, 2635.0], [28.3, 2635.0], [28.4, 2645.0], [28.5, 2645.0], [28.6, 2655.0], [28.7, 2655.0], [28.8, 2656.0], [28.9, 2656.0], [29.0, 2663.0], [29.1, 2663.0], [29.2, 2663.0], [29.3, 2663.0], [29.4, 2666.0], [29.5, 2666.0], [29.6, 2666.0], [29.7, 2666.0], [29.8, 2671.0], [29.9, 2671.0], [30.0, 2682.0], [30.1, 2682.0], [30.2, 2682.0], [30.3, 2682.0], [30.4, 2685.0], [30.5, 2685.0], [30.6, 2704.0], [30.7, 2704.0], [30.8, 2711.0], [30.9, 2711.0], [31.0, 2717.0], [31.1, 2717.0], [31.2, 2722.0], [31.3, 2722.0], [31.4, 2722.0], [31.5, 2722.0], [31.6, 2732.0], [31.7, 2732.0], [31.8, 2769.0], [31.9, 2769.0], [32.0, 2771.0], [32.1, 2771.0], [32.2, 2772.0], [32.3, 2772.0], [32.4, 2776.0], [32.5, 2776.0], [32.6, 2789.0], [32.7, 2789.0], [32.8, 2790.0], [32.9, 2790.0], [33.0, 2792.0], [33.1, 2792.0], [33.2, 2795.0], [33.3, 2795.0], [33.4, 2797.0], [33.5, 2797.0], [33.6, 2848.0], [33.7, 2848.0], [33.8, 2851.0], [33.9, 2851.0], [34.0, 2871.0], [34.1, 2871.0], [34.2, 2872.0], [34.3, 2872.0], [34.4, 2878.0], [34.5, 2878.0], [34.6, 2911.0], [34.7, 2911.0], [34.8, 2919.0], [34.9, 2919.0], [35.0, 2920.0], [35.1, 2920.0], [35.2, 2947.0], [35.3, 2947.0], [35.4, 2948.0], [35.5, 2948.0], [35.6, 2959.0], [35.7, 2959.0], [35.8, 2973.0], [35.9, 2973.0], [36.0, 2976.0], [36.1, 2976.0], [36.2, 2977.0], [36.3, 2977.0], [36.4, 2985.0], [36.5, 2985.0], [36.6, 2986.0], [36.7, 2986.0], [36.8, 2995.0], [36.9, 2995.0], [37.0, 3009.0], [37.1, 3009.0], [37.2, 3009.0], [37.3, 3009.0], [37.4, 3012.0], [37.5, 3012.0], [37.6, 3021.0], [37.7, 3021.0], [37.8, 3031.0], [37.9, 3031.0], [38.0, 3034.0], [38.1, 3034.0], [38.2, 3037.0], [38.3, 3037.0], [38.4, 3046.0], [38.5, 3046.0], [38.6, 3047.0], [38.7, 3047.0], [38.8, 3047.0], [38.9, 3066.0], [39.0, 3066.0], [39.1, 3067.0], [39.2, 3067.0], [39.3, 3083.0], [39.4, 3083.0], [39.5, 3086.0], [39.6, 3086.0], [39.7, 3091.0], [39.8, 3091.0], [39.9, 3092.0], [40.0, 3092.0], [40.1, 3111.0], [40.2, 3111.0], [40.3, 3114.0], [40.4, 3114.0], [40.5, 3116.0], [40.6, 3116.0], [40.7, 3129.0], [40.8, 3129.0], [40.9, 3134.0], [41.0, 3134.0], [41.1, 3139.0], [41.2, 3139.0], [41.3, 3140.0], [41.4, 3140.0], [41.5, 3142.0], [41.6, 3142.0], [41.7, 3149.0], [41.8, 3149.0], [41.9, 3156.0], [42.0, 3156.0], [42.1, 3182.0], [42.2, 3182.0], [42.3, 3190.0], [42.4, 3190.0], [42.5, 3192.0], [42.6, 3192.0], [42.7, 3197.0], [42.8, 3197.0], [42.9, 3213.0], [43.0, 3213.0], [43.1, 3214.0], [43.2, 3214.0], [43.3, 3215.0], [43.4, 3215.0], [43.5, 3216.0], [43.6, 3216.0], [43.7, 3217.0], [43.8, 3217.0], [43.9, 3220.0], [44.0, 3220.0], [44.1, 3257.0], [44.2, 3257.0], [44.3, 3258.0], [44.4, 3258.0], [44.5, 3269.0], [44.6, 3269.0], [44.7, 3269.0], [44.8, 3269.0], [44.9, 3305.0], [45.0, 3305.0], [45.1, 3310.0], [45.2, 3310.0], [45.3, 3313.0], [45.4, 3313.0], [45.5, 3325.0], [45.6, 3325.0], [45.7, 3328.0], [45.8, 3328.0], [45.9, 3334.0], [46.0, 3334.0], [46.1, 3345.0], [46.2, 3345.0], [46.3, 3345.0], [46.4, 3345.0], [46.5, 3353.0], [46.6, 3353.0], [46.7, 3355.0], [46.8, 3355.0], [46.9, 3358.0], [47.0, 3358.0], [47.1, 3365.0], [47.2, 3365.0], [47.3, 3368.0], [47.4, 3368.0], [47.5, 3372.0], [47.6, 3372.0], [47.7, 3384.0], [47.8, 3384.0], [47.9, 3387.0], [48.0, 3387.0], [48.1, 3391.0], [48.2, 3391.0], [48.3, 3395.0], [48.4, 3395.0], [48.5, 3410.0], [48.6, 3410.0], [48.7, 3412.0], [48.8, 3412.0], [48.9, 3412.0], [49.0, 3412.0], [49.1, 3428.0], [49.2, 3428.0], [49.3, 3430.0], [49.4, 3430.0], [49.5, 3436.0], [49.6, 3436.0], [49.7, 3438.0], [49.8, 3438.0], [49.9, 3438.0], [50.0, 3438.0], [50.1, 3445.0], [50.2, 3445.0], [50.3, 3456.0], [50.4, 3456.0], [50.5, 3470.0], [50.6, 3470.0], [50.7, 3470.0], [50.8, 3470.0], [50.9, 3480.0], [51.0, 3480.0], [51.1, 3483.0], [51.2, 3483.0], [51.3, 3490.0], [51.4, 3490.0], [51.5, 3496.0], [51.6, 3496.0], [51.7, 3537.0], [51.8, 3537.0], [51.9, 3546.0], [52.0, 3546.0], [52.1, 3547.0], [52.2, 3547.0], [52.3, 3548.0], [52.4, 3548.0], [52.5, 3555.0], [52.6, 3555.0], [52.7, 3571.0], [52.8, 3571.0], [52.9, 3585.0], [53.0, 3585.0], [53.1, 3588.0], [53.2, 3588.0], [53.3, 3588.0], [53.4, 3588.0], [53.5, 3593.0], [53.6, 3593.0], [53.7, 3598.0], [53.8, 3598.0], [53.9, 3598.0], [54.0, 3598.0], [54.1, 3607.0], [54.2, 3607.0], [54.3, 3648.0], [54.4, 3648.0], [54.5, 3665.0], [54.6, 3665.0], [54.7, 3693.0], [54.8, 3693.0], [54.9, 3695.0], [55.0, 3695.0], [55.1, 3704.0], [55.2, 3704.0], [55.3, 3752.0], [55.4, 3752.0], [55.5, 3764.0], [55.6, 3764.0], [55.7, 3770.0], [55.8, 3770.0], [55.9, 3772.0], [56.0, 3772.0], [56.1, 3774.0], [56.2, 3774.0], [56.3, 3776.0], [56.4, 3776.0], [56.5, 3799.0], [56.6, 3799.0], [56.7, 3811.0], [56.8, 3811.0], [56.9, 3814.0], [57.0, 3814.0], [57.1, 3833.0], [57.2, 3833.0], [57.3, 3857.0], [57.4, 3857.0], [57.5, 3872.0], [57.6, 3872.0], [57.7, 3883.0], [57.8, 3883.0], [57.9, 3895.0], [58.0, 3895.0], [58.1, 3907.0], [58.2, 3907.0], [58.3, 3930.0], [58.4, 3930.0], [58.5, 3947.0], [58.6, 3947.0], [58.7, 3991.0], [58.8, 3991.0], [58.9, 4010.0], [59.0, 4010.0], [59.1, 4013.0], [59.2, 4013.0], [59.3, 4032.0], [59.4, 4032.0], [59.5, 4050.0], [59.6, 4050.0], [59.7, 4055.0], [59.8, 4055.0], [59.9, 4066.0], [60.0, 4066.0], [60.1, 4066.0], [60.2, 4066.0], [60.3, 4071.0], [60.4, 4071.0], [60.5, 4073.0], [60.6, 4073.0], [60.7, 4080.0], [60.8, 4080.0], [60.9, 4124.0], [61.0, 4124.0], [61.1, 4125.0], [61.2, 4125.0], [61.3, 4144.0], [61.4, 4144.0], [61.5, 4159.0], [61.6, 4159.0], [61.7, 4165.0], [61.8, 4165.0], [61.9, 4203.0], [62.0, 4203.0], [62.1, 4209.0], [62.2, 4209.0], [62.3, 4224.0], [62.4, 4224.0], [62.5, 4224.0], [62.6, 4224.0], [62.7, 4225.0], [62.8, 4225.0], [62.9, 4234.0], [63.0, 4234.0], [63.1, 4249.0], [63.2, 4249.0], [63.3, 4267.0], [63.4, 4267.0], [63.5, 4282.0], [63.6, 4282.0], [63.7, 4289.0], [63.8, 4289.0], [63.9, 4310.0], [64.0, 4310.0], [64.1, 4316.0], [64.2, 4316.0], [64.3, 4316.0], [64.4, 4316.0], [64.5, 4327.0], [64.6, 4327.0], [64.7, 4331.0], [64.8, 4331.0], [64.9, 4339.0], [65.0, 4339.0], [65.1, 4343.0], [65.2, 4343.0], [65.3, 4380.0], [65.4, 4380.0], [65.5, 4392.0], [65.6, 4392.0], [65.7, 4425.0], [65.8, 4425.0], [65.9, 4440.0], [66.0, 4440.0], [66.1, 4443.0], [66.2, 4443.0], [66.3, 4451.0], [66.4, 4451.0], [66.5, 4456.0], [66.6, 4456.0], [66.7, 4467.0], [66.8, 4467.0], [66.9, 4467.0], [67.0, 4467.0], [67.1, 4477.0], [67.2, 4477.0], [67.3, 4514.0], [67.4, 4514.0], [67.5, 4541.0], [67.6, 4541.0], [67.7, 4560.0], [67.8, 4560.0], [67.9, 4566.0], [68.0, 4566.0], [68.1, 4612.0], [68.2, 4612.0], [68.3, 4614.0], [68.4, 4614.0], [68.5, 4770.0], [68.6, 4770.0], [68.7, 4807.0], [68.8, 4807.0], [68.9, 4809.0], [69.0, 4809.0], [69.1, 4815.0], [69.2, 4815.0], [69.3, 4820.0], [69.4, 4820.0], [69.5, 4830.0], [69.6, 4830.0], [69.7, 4875.0], [69.8, 4875.0], [69.9, 4921.0], [70.0, 4921.0], [70.1, 4924.0], [70.2, 4924.0], [70.3, 4931.0], [70.4, 4931.0], [70.5, 4955.0], [70.6, 4955.0], [70.7, 4964.0], [70.8, 4964.0], [70.9, 4990.0], [71.0, 4990.0], [71.1, 5004.0], [71.2, 5004.0], [71.3, 5031.0], [71.4, 5031.0], [71.5, 5041.0], [71.6, 5041.0], [71.7, 5050.0], [71.8, 5050.0], [71.9, 5064.0], [72.0, 5064.0], [72.1, 5078.0], [72.2, 5078.0], [72.3, 5083.0], [72.4, 5083.0], [72.5, 5095.0], [72.6, 5095.0], [72.7, 5106.0], [72.8, 5106.0], [72.9, 5108.0], [73.0, 5108.0], [73.1, 5132.0], [73.2, 5132.0], [73.3, 5139.0], [73.4, 5139.0], [73.5, 5180.0], [73.6, 5180.0], [73.7, 5183.0], [73.8, 5183.0], [73.9, 5218.0], [74.0, 5218.0], [74.1, 5222.0], [74.2, 5222.0], [74.3, 5223.0], [74.4, 5223.0], [74.5, 5224.0], [74.6, 5224.0], [74.7, 5241.0], [74.8, 5241.0], [74.9, 5246.0], [75.0, 5246.0], [75.1, 5247.0], [75.2, 5247.0], [75.3, 5249.0], [75.4, 5249.0], [75.5, 5258.0], [75.6, 5258.0], [75.7, 5279.0], [75.8, 5279.0], [75.9, 5290.0], [76.0, 5290.0], [76.1, 5315.0], [76.2, 5315.0], [76.3, 5315.0], [76.4, 5315.0], [76.5, 5332.0], [76.6, 5332.0], [76.7, 5342.0], [76.8, 5342.0], [76.9, 5352.0], [77.0, 5352.0], [77.1, 5355.0], [77.2, 5355.0], [77.3, 5355.0], [77.4, 5355.0], [77.5, 5357.0], [77.6, 5357.0], [77.7, 5368.0], [77.8, 5368.0], [77.9, 5374.0], [78.0, 5374.0], [78.1, 5384.0], [78.2, 5384.0], [78.3, 5403.0], [78.4, 5403.0], [78.5, 5419.0], [78.6, 5419.0], [78.7, 5425.0], [78.8, 5425.0], [78.9, 5430.0], [79.0, 5430.0], [79.1, 5446.0], [79.2, 5446.0], [79.3, 5448.0], [79.4, 5448.0], [79.5, 5464.0], [79.6, 5464.0], [79.7, 5477.0], [79.8, 5477.0], [79.9, 5483.0], [80.0, 5483.0], [80.1, 5494.0], [80.2, 5494.0], [80.3, 5496.0], [80.4, 5496.0], [80.5, 5515.0], [80.6, 5515.0], [80.7, 5520.0], [80.8, 5520.0], [80.9, 5529.0], [81.0, 5529.0], [81.1, 5536.0], [81.2, 5536.0], [81.3, 5611.0], [81.4, 5611.0], [81.5, 5624.0], [81.6, 5624.0], [81.7, 5625.0], [81.8, 5625.0], [81.9, 5642.0], [82.0, 5642.0], [82.1, 5649.0], [82.2, 5649.0], [82.3, 5657.0], [82.4, 5657.0], [82.5, 5664.0], [82.6, 5664.0], [82.7, 5696.0], [82.8, 5696.0], [82.9, 5738.0], [83.0, 5738.0], [83.1, 5742.0], [83.2, 5742.0], [83.3, 5743.0], [83.4, 5743.0], [83.5, 5762.0], [83.6, 5762.0], [83.7, 5762.0], [83.8, 5762.0], [83.9, 5770.0], [84.0, 5770.0], [84.1, 5779.0], [84.2, 5779.0], [84.3, 5782.0], [84.4, 5782.0], [84.5, 5784.0], [84.6, 5784.0], [84.7, 5785.0], [84.8, 5785.0], [84.9, 5786.0], [85.0, 5786.0], [85.1, 5790.0], [85.2, 5790.0], [85.3, 5802.0], [85.4, 5802.0], [85.5, 5806.0], [85.6, 5806.0], [85.7, 5809.0], [85.8, 5809.0], [85.9, 5810.0], [86.0, 5810.0], [86.1, 5825.0], [86.2, 5825.0], [86.3, 5827.0], [86.4, 5827.0], [86.5, 5828.0], [86.6, 5828.0], [86.7, 5837.0], [86.8, 5837.0], [86.9, 5838.0], [87.0, 5838.0], [87.1, 5855.0], [87.2, 5855.0], [87.3, 5880.0], [87.4, 5880.0], [87.5, 5903.0], [87.6, 5903.0], [87.7, 5911.0], [87.8, 5911.0], [87.9, 5929.0], [88.0, 5929.0], [88.1, 5933.0], [88.2, 5933.0], [88.3, 5946.0], [88.4, 5946.0], [88.5, 5947.0], [88.6, 5947.0], [88.7, 6000.0], [88.8, 6000.0], [88.9, 6017.0], [89.0, 6017.0], [89.1, 6019.0], [89.2, 6019.0], [89.3, 6031.0], [89.4, 6031.0], [89.5, 6036.0], [89.6, 6036.0], [89.7, 6036.0], [89.8, 6036.0], [89.9, 6040.0], [90.0, 6040.0], [90.1, 6043.0], [90.2, 6043.0], [90.3, 6057.0], [90.4, 6057.0], [90.5, 6062.0], [90.6, 6062.0], [90.7, 6064.0], [90.8, 6064.0], [90.9, 6076.0], [91.0, 6076.0], [91.1, 6097.0], [91.2, 6097.0], [91.3, 6141.0], [91.4, 6141.0], [91.5, 6141.0], [91.6, 6141.0], [91.7, 6162.0], [91.8, 6162.0], [91.9, 6165.0], [92.0, 6165.0], [92.1, 6166.0], [92.2, 6166.0], [92.3, 6168.0], [92.4, 6168.0], [92.5, 6199.0], [92.6, 6199.0], [92.7, 6202.0], [92.8, 6202.0], [92.9, 6236.0], [93.0, 6236.0], [93.1, 6241.0], [93.2, 6241.0], [93.3, 6247.0], [93.4, 6247.0], [93.5, 6266.0], [93.6, 6266.0], [93.7, 6292.0], [93.8, 6292.0], [93.9, 6294.0], [94.0, 6294.0], [94.1, 6313.0], [94.2, 6313.0], [94.3, 6334.0], [94.4, 6334.0], [94.5, 6354.0], [94.6, 6354.0], [94.7, 6362.0], [94.8, 6362.0], [94.9, 6450.0], [95.0, 6450.0], [95.1, 6457.0], [95.2, 6457.0], [95.3, 6526.0], [95.4, 6526.0], [95.5, 6566.0], [95.6, 6566.0], [95.7, 6573.0], [95.8, 6573.0], [95.9, 6612.0], [96.0, 6612.0], [96.1, 6621.0], [96.2, 6621.0], [96.3, 6629.0], [96.4, 6629.0], [96.5, 6643.0], [96.6, 6643.0], [96.7, 6664.0], [96.8, 6664.0], [96.9, 6737.0], [97.0, 6737.0], [97.1, 6783.0], [97.2, 6783.0], [97.3, 6812.0], [97.4, 6812.0], [97.5, 6816.0], [97.6, 6816.0], [97.7, 6964.0], [97.8, 6964.0], [97.9, 7052.0], [98.0, 7052.0], [98.1, 7061.0], [98.2, 7061.0], [98.3, 7080.0], [98.4, 7080.0], [98.5, 7133.0], [98.6, 7133.0], [98.7, 7149.0], [98.8, 7149.0], [98.9, 7158.0], [99.0, 7158.0], [99.1, 7191.0], [99.2, 7191.0], [99.3, 7279.0], [99.4, 7279.0], [99.5, 7323.0], [99.6, 7323.0], [99.7, 7625.0], [99.8, 7625.0], [99.9, 7645.0], [100.0, 7645.0]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 38.0, "series": [{"data": [[33300.0, 2.0], [33700.0, 2.0], [34100.0, 2.0], [36900.0, 3.0], [37300.0, 1.0], [38100.0, 2.0], [38500.0, 2.0], [39700.0, 4.0], [40100.0, 1.0], [40500.0, 1.0], [41300.0, 1.0], [42100.0, 2.0], [43300.0, 1.0], [43700.0, 1.0], [46900.0, 1.0], [48500.0, 2.0], [49300.0, 2.0], [50900.0, 1.0], [51300.0, 2.0], [51700.0, 1.0], [52100.0, 3.0], [52500.0, 1.0], [52900.0, 1.0], [54500.0, 2.0], [54900.0, 2.0], [55700.0, 2.0], [56100.0, 1.0], [56500.0, 6.0], [56900.0, 2.0], [58900.0, 1.0], [59700.0, 2.0], [60500.0, 1.0], [60900.0, 1.0], [61300.0, 1.0], [800.0, 8.0], [900.0, 4.0], [1100.0, 3.0], [1200.0, 8.0], [1300.0, 1.0], [1400.0, 2.0], [1500.0, 7.0], [1600.0, 3.0], [1700.0, 3.0], [1800.0, 3.0], [1900.0, 2.0], [2000.0, 1.0], [2100.0, 3.0], [2200.0, 1.0], [2400.0, 1.0], [2600.0, 1.0], [2700.0, 2.0], [2800.0, 1.0], [3200.0, 1.0], [3900.0, 1.0], [4100.0, 1.0], [4900.0, 2.0], [5200.0, 1.0], [5300.0, 1.0], [5400.0, 1.0], [5700.0, 4.0], [5800.0, 1.0], [6100.0, 1.0], [6200.0, 3.0], [6400.0, 1.0], [6600.0, 4.0], [6800.0, 1.0], [6900.0, 1.0], [7100.0, 2.0], [7200.0, 2.0], [7300.0, 1.0], [7400.0, 1.0], [7500.0, 1.0], [7900.0, 1.0], [8000.0, 2.0], [8300.0, 1.0], [8400.0, 1.0], [8500.0, 1.0], [8600.0, 1.0], [8700.0, 3.0], [8800.0, 1.0], [8900.0, 1.0], [9400.0, 2.0], [9500.0, 2.0], [9600.0, 2.0], [9800.0, 2.0], [9900.0, 1.0], [10700.0, 1.0], [10800.0, 1.0], [10900.0, 2.0], [11000.0, 2.0], [11100.0, 1.0], [11300.0, 1.0], [11500.0, 2.0], [11700.0, 1.0], [11800.0, 3.0], [11900.0, 1.0], [12000.0, 1.0], [12500.0, 4.0], [12800.0, 2.0], [13000.0, 2.0], [13200.0, 2.0], [13300.0, 2.0], [13500.0, 1.0], [14100.0, 1.0], [14200.0, 1.0], [14600.0, 1.0], [14700.0, 1.0], [14800.0, 2.0], [15000.0, 1.0], [15100.0, 1.0], [15200.0, 1.0], [15300.0, 1.0], [15400.0, 3.0], [15500.0, 1.0], [15600.0, 1.0], [15700.0, 2.0], [16300.0, 1.0], [16400.0, 2.0], [16600.0, 1.0], [16800.0, 1.0], [17200.0, 1.0], [17400.0, 1.0], [18200.0, 2.0], [18400.0, 1.0], [20000.0, 1.0], [20200.0, 1.0], [20400.0, 1.0], [20600.0, 2.0], [21000.0, 2.0], [21200.0, 1.0], [21400.0, 1.0], [22200.0, 1.0], [22600.0, 2.0], [23800.0, 1.0], [24600.0, 2.0], [24800.0, 2.0], [25000.0, 1.0], [25200.0, 2.0], [25400.0, 3.0], [25600.0, 2.0], [25800.0, 1.0], [26200.0, 1.0], [26600.0, 1.0], [26800.0, 3.0], [27000.0, 1.0], [28200.0, 3.0], [28400.0, 2.0], [28600.0, 1.0], [28800.0, 2.0], [29000.0, 1.0], [29200.0, 3.0], [29400.0, 1.0], [29600.0, 1.0], [29800.0, 1.0], [30000.0, 2.0], [30400.0, 2.0], [30600.0, 3.0], [31200.0, 1.0], [31400.0, 1.0], [31600.0, 3.0], [31800.0, 1.0], [32000.0, 1.0], [32200.0, 2.0], [32600.0, 1.0], [33200.0, 4.0], [34000.0, 2.0], [34400.0, 1.0], [34800.0, 1.0], [35200.0, 2.0], [38000.0, 1.0], [38800.0, 2.0], [39200.0, 1.0], [40400.0, 1.0], [40800.0, 2.0], [42000.0, 1.0], [42800.0, 1.0], [43600.0, 1.0], [44000.0, 2.0], [44800.0, 1.0], [46800.0, 1.0], [48400.0, 1.0], [48800.0, 1.0], [49200.0, 3.0], [49600.0, 4.0], [50400.0, 2.0], [51200.0, 3.0], [52400.0, 1.0], [52800.0, 1.0], [53200.0, 1.0], [55600.0, 2.0], [56000.0, 1.0], [60800.0, 1.0], [61600.0, 1.0], [33100.0, 1.0], [34300.0, 1.0], [34700.0, 1.0], [35100.0, 1.0], [35500.0, 1.0], [36300.0, 1.0], [37900.0, 2.0], [38300.0, 1.0], [38700.0, 1.0], [39100.0, 1.0], [39500.0, 1.0], [39900.0, 1.0], [40700.0, 1.0], [41100.0, 1.0], [42300.0, 1.0], [42700.0, 2.0], [43500.0, 1.0], [44300.0, 1.0], [45100.0, 1.0], [46700.0, 1.0], [47500.0, 1.0], [47900.0, 1.0], [48700.0, 5.0], [49900.0, 3.0], [50700.0, 1.0], [51100.0, 1.0], [52700.0, 2.0], [53100.0, 1.0], [54300.0, 1.0], [54700.0, 1.0], [55100.0, 1.0], [55900.0, 3.0], [57100.0, 1.0], [57900.0, 1.0], [58300.0, 3.0], [59100.0, 1.0], [59900.0, 1.0], [61100.0, 1.0], [61500.0, 1.0], [61900.0, 1.0], [62300.0, 1.0], [16500.0, 2.0], [17100.0, 1.0], [17300.0, 1.0], [17500.0, 2.0], [17900.0, 1.0], [18300.0, 1.0], [18500.0, 3.0], [19100.0, 1.0], [19500.0, 1.0], [19700.0, 2.0], [19900.0, 1.0], [20100.0, 1.0], [20300.0, 3.0], [20900.0, 2.0], [21500.0, 1.0], [21900.0, 1.0], [22100.0, 3.0], [22500.0, 3.0], [23100.0, 1.0], [23300.0, 1.0], [23900.0, 1.0], [24500.0, 2.0], [24900.0, 1.0], [25500.0, 2.0], [25900.0, 1.0], [26100.0, 3.0], [26300.0, 2.0], [26500.0, 1.0], [26700.0, 1.0], [26900.0, 1.0], [27300.0, 1.0], [28300.0, 1.0], [28500.0, 1.0], [28700.0, 1.0], [28900.0, 1.0], [29300.0, 1.0], [29700.0, 1.0], [29900.0, 1.0], [30100.0, 1.0], [30300.0, 1.0], [30900.0, 1.0], [31100.0, 2.0], [31300.0, 2.0], [31900.0, 1.0], [32100.0, 1.0], [32300.0, 1.0], [32500.0, 1.0], [33000.0, 1.0], [34200.0, 1.0], [34600.0, 1.0], [35400.0, 2.0], [36200.0, 1.0], [37000.0, 1.0], [37800.0, 1.0], [38200.0, 1.0], [38600.0, 2.0], [39000.0, 1.0], [39400.0, 1.0], [39800.0, 1.0], [40200.0, 2.0], [41000.0, 2.0], [41400.0, 2.0], [42200.0, 1.0], [43000.0, 1.0], [43400.0, 1.0], [43800.0, 1.0], [46600.0, 1.0], [47000.0, 1.0], [47400.0, 2.0], [47800.0, 2.0], [48600.0, 2.0], [49000.0, 1.0], [49800.0, 1.0], [50200.0, 1.0], [50600.0, 1.0], [52200.0, 2.0], [53800.0, 1.0], [54600.0, 1.0], [56600.0, 1.0], [58200.0, 1.0], [59800.0, 1.0], [61400.0, 3.0], [62200.0, 1.0], [62600.0, 1.0]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[600.0, 28.0], [700.0, 26.0], [800.0, 25.0], [900.0, 17.0], [1000.0, 27.0], [1100.0, 17.0], [1200.0, 17.0], [1300.0, 17.0], [1400.0, 16.0], [1500.0, 15.0], [1600.0, 9.0], [1700.0, 16.0], [1800.0, 14.0], [1900.0, 9.0], [2000.0, 7.0], [2100.0, 11.0], [2300.0, 13.0], [2200.0, 10.0], [2400.0, 5.0], [2500.0, 7.0], [2600.0, 8.0], [2700.0, 8.0], [2800.0, 1.0], [2900.0, 4.0], [3000.0, 5.0], [3100.0, 3.0], [3300.0, 3.0], [3200.0, 5.0], [3400.0, 3.0], [3500.0, 5.0], [3600.0, 6.0], [3700.0, 1.0], [3800.0, 1.0], [3900.0, 3.0], [4000.0, 1.0], [4100.0, 2.0], [4300.0, 2.0], [4200.0, 1.0], [4500.0, 1.0], [4800.0, 2.0], [4900.0, 1.0], [5000.0, 2.0], [5100.0, 1.0], [5400.0, 2.0], [5500.0, 1.0], [5900.0, 1.0], [6300.0, 1.0], [6200.0, 1.0], [100.0, 1.0], [200.0, 21.0], [300.0, 38.0], [400.0, 29.0], [500.0, 30.0]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[600.0, 3.0], [700.0, 2.0], [800.0, 5.0], [900.0, 5.0], [1000.0, 6.0], [1100.0, 6.0], [1200.0, 13.0], [1300.0, 6.0], [1400.0, 8.0], [1500.0, 4.0], [1600.0, 6.0], [1700.0, 8.0], [1800.0, 4.0], [1900.0, 7.0], [2000.0, 8.0], [2100.0, 4.0], [2200.0, 7.0], [2300.0, 6.0], [2400.0, 12.0], [2500.0, 12.0], [2600.0, 16.0], [2700.0, 15.0], [2800.0, 5.0], [2900.0, 12.0], [3000.0, 15.0], [3100.0, 14.0], [3200.0, 10.0], [3300.0, 18.0], [3400.0, 16.0], [3500.0, 12.0], [3600.0, 5.0], [3700.0, 8.0], [3800.0, 7.0], [3900.0, 4.0], [4000.0, 10.0], [4100.0, 5.0], [4200.0, 10.0], [4300.0, 9.0], [4500.0, 4.0], [4400.0, 8.0], [4600.0, 2.0], [4800.0, 6.0], [4700.0, 1.0], [4900.0, 6.0], [5000.0, 8.0], [5100.0, 6.0], [5200.0, 11.0], [5300.0, 11.0], [5400.0, 11.0], [5600.0, 8.0], [5500.0, 4.0], [5700.0, 12.0], [5800.0, 11.0], [5900.0, 6.0], [6000.0, 13.0], [6100.0, 7.0], [6200.0, 7.0], [6300.0, 4.0], [6600.0, 5.0], [6500.0, 3.0], [6400.0, 2.0], [6700.0, 2.0], [6800.0, 2.0], [6900.0, 1.0], [7100.0, 4.0], [7000.0, 3.0], [7300.0, 1.0], [7200.0, 1.0], [7600.0, 2.0], [200.0, 1.0], [400.0, 2.0], [500.0, 2.0]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 62600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 93.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1106.0, "series": [{"data": [[0.0, 93.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 301.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1106.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 121.17418351477458, "minX": 1.69851828E12, "maxY": 361.38973162193696, "series": [{"data": [[1.69851828E12, 361.38973162193696], [1.69851834E12, 121.17418351477458]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851834E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 200.0, "minX": 1.0, "maxY": 62606.0, "series": [{"data": [[26.0, 62606.0], [28.0, 62367.0], [32.0, 62116.0], [35.0, 61636.0], [39.0, 61420.0], [38.0, 61461.25], [40.0, 61157.0], [43.0, 59934.0], [42.0, 60775.333333333336], [45.0, 59758.0], [46.0, 59193.0], [48.0, 58536.0], [50.0, 58150.0], [53.0, 57106.0], [55.0, 56901.0], [54.0, 56956.0], [57.0, 56658.0], [58.0, 56546.0], [60.0, 56170.0], [63.0, 56060.0], [67.0, 55826.333333333336], [65.0, 55942.0], [64.0, 55949.0], [69.0, 55150.0], [68.0, 55646.0], [75.0, 54524.5], [73.0, 54829.25], [78.0, 54337.0], [83.0, 52808.0], [81.0, 53198.0], [80.0, 53824.0], [86.0, 52587.0], [91.0, 52113.333333333336], [90.0, 52243.0], [89.0, 52287.0], [88.0, 52416.0], [95.0, 51382.0], [93.0, 51787.0], [99.0, 51193.0], [98.0, 51261.5], [97.0, 51298.0], [96.0, 51362.0], [102.0, 17455.0], [103.0, 850.0], [100.0, 50909.0], [104.0, 25677.5], [105.0, 872.0], [106.0, 50424.0], [108.0, 25566.5], [111.0, 49308.5], [110.0, 49688.8], [109.0, 49958.666666666664], [114.0, 24991.0], [113.0, 49285.0], [116.0, 39229.8], [118.0, 961.0], [119.0, 48758.0], [117.0, 48701.0], [121.0, 48544.75], [120.0, 48636.0], [124.0, 47890.0], [133.0, 24012.5], [134.0, 46780.0], [132.0, 46998.0], [131.0, 47479.333333333336], [128.0, 47861.0], [136.0, 36427.0], [140.0, 1204.0], [141.0, 1228.0], [142.0, 33289.25], [143.0, 1246.0], [144.0, 29533.333333333332], [145.0, 22392.0], [147.0, 32795.5], [150.0, 1301.0], [151.0, 42733.0], [148.0, 42875.0], [153.0, 21815.5], [159.0, 41431.0], [156.0, 42130.0], [155.0, 42253.0], [165.0, 40840.333333333336], [164.0, 41093.333333333336], [175.0, 39776.5], [174.0, 39882.0], [173.0, 40051.0], [170.0, 40310.666666666664], [169.0, 40558.0], [176.0, 1432.0], [177.0, 1512.0], [178.0, 1510.0], [180.0, 14173.0], [183.0, 39123.0], [182.0, 39272.0], [181.0, 39420.0], [187.0, 20042.0], [188.0, 20047.5], [189.0, 1597.0], [191.0, 38334.0], [185.0, 38822.0], [194.0, 26021.666666666668], [197.0, 19838.5], [199.0, 25829.0], [196.0, 38134.0], [205.0, 36954.666666666664], [203.0, 37181.0], [200.0, 37856.0], [212.0, 1722.0], [215.0, 1788.0], [214.0, 35483.666666666664], [210.0, 36264.0], [209.0, 36391.0], [221.0, 1770.0], [223.0, 1840.0], [219.0, 34821.0], [218.0, 35156.0], [217.0, 35203.0], [216.0, 35280.0], [225.0, 12690.0], [231.0, 34001.0], [229.0, 34007.0], [226.0, 34199.666666666664], [224.0, 34603.666666666664], [236.0, 17653.5], [239.0, 33301.0], [233.0, 33792.0], [232.0, 33794.0], [241.0, 25404.5], [244.0, 33036.0], [242.0, 33103.0], [240.0, 33266.0], [248.0, 17324.0], [254.0, 32029.0], [253.0, 32196.0], [252.0, 32258.5], [250.0, 32471.5], [259.0, 16911.5], [258.0, 2164.0], [266.0, 21516.666666666668], [268.0, 31074.0], [264.0, 31333.0], [263.0, 31462.0], [261.0, 31645.0], [260.0, 31648.0], [256.0, 31906.0], [284.0, 29691.0], [276.0, 2271.0], [283.0, 29703.0], [282.0, 29933.666666666668], [279.0, 30015.0], [278.0, 30195.0], [277.0, 30357.0], [275.0, 30468.5], [273.0, 30669.666666666668], [301.0, 28525.0], [297.0, 15603.5], [303.0, 28317.0], [302.0, 28451.5], [298.0, 28612.0], [295.0, 28900.666666666668], [293.0, 29069.0], [290.0, 29229.0], [289.0, 29339.0], [319.0, 26176.0], [314.0, 14640.5], [318.0, 26316.666666666668], [316.0, 26537.0], [313.0, 26832.0], [312.0, 26878.5], [311.0, 26959.0], [308.0, 27352.0], [306.0, 28231.666666666668], [333.0, 25019.0], [326.0, 2761.0], [334.0, 24803.5], [330.0, 25256.0], [329.0, 25375.0], [328.0, 25523.0], [327.0, 25632.0], [323.0, 25884.0], [322.0, 25922.0], [321.0, 26122.0], [336.0, 2795.0], [342.0, 2880.0], [351.0, 22299.0], [349.0, 22583.0], [348.0, 22637.0], [345.0, 23103.0], [343.0, 23321.0], [340.0, 24217.75], [339.0, 24612.0], [337.0, 24649.0], [364.0, 20662.0], [363.0, 20907.0], [362.0, 21071.5], [357.0, 21369.5], [356.0, 21593.0], [354.0, 21971.0], [353.0, 22129.0], [352.0, 22176.0], [371.0, 20205.0], [376.0, 3293.0], [383.0, 18469.4], [379.0, 19174.0], [375.0, 19528.0], [374.0, 19759.5], [373.0, 19994.5], [369.0, 20336.666666666668], [368.0, 20416.0], [397.0, 16498.75], [398.0, 16365.0], [396.0, 16712.0], [394.0, 17145.0], [391.0, 17274.0], [390.0, 17330.0], [389.0, 17514.666666666668], [386.0, 17980.0], [384.0, 18239.5], [415.0, 15088.0], [413.0, 15119.0], [412.0, 15213.0], [408.0, 15456.25], [407.0, 15563.0], [406.0, 15714.0], [405.0, 15719.0], [431.0, 13028.5], [428.0, 13248.0], [427.0, 13268.0], [423.0, 13419.333333333334], [421.0, 14198.0], [419.0, 14772.0], [418.0, 14868.0], [447.0, 11129.0], [444.0, 11308.0], [443.0, 11577.5], [442.0, 11807.5], [441.0, 11919.0], [440.0, 12064.0], [433.0, 12534.5], [432.0, 12714.5], [462.0, 8993.0], [455.0, 6890.5], [463.0, 8828.0], [460.0, 9440.0], [451.0, 11091.0], [450.0, 11076.0], [458.0, 9570.0], [456.0, 9624.333333333334], [454.0, 9896.0], [453.0, 10793.0], [452.0, 10908.0], [467.0, 7374.5], [479.0, 6863.0], [476.0, 7039.0], [474.0, 7201.0], [472.0, 7500.6], [471.0, 8044.0], [465.0, 8628.0], [464.0, 8769.333333333334], [483.0, 6370.0], [493.0, 5296.5], [495.0, 4912.5], [492.0, 5478.0], [489.0, 5756.666666666667], [487.0, 5952.333333333333], [486.0, 6244.0], [485.0, 6248.0], [482.0, 6611.0], [481.0, 6632.5]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[253.7400000000002, 28681.66800000001]], "isOverall": false, "label": "Express Js Http Call-Aggregated", "isController": false}, {"data": [[12.0, 2444.0], [13.0, 1191.0], [17.0, 1925.0], [19.0, 1167.5], [23.0, 1514.0], [24.0, 489.0], [26.0, 2741.0], [28.0, 917.5], [30.0, 1817.0], [33.0, 3668.5], [32.0, 3401.666666666667], [35.0, 1333.5], [34.0, 3619.0], [36.0, 663.0], [40.0, 2644.0], [43.0, 2547.75], [42.0, 1068.0], [45.0, 3261.0], [44.0, 2962.0], [46.0, 2229.0], [48.0, 3217.0], [50.0, 1333.0], [53.0, 609.0], [52.0, 1349.0], [54.0, 1160.5], [58.0, 750.0], [60.0, 2229.5], [63.0, 792.5], [62.0, 970.5], [67.0, 1704.2], [70.0, 1359.0], [75.0, 2092.5], [73.0, 967.6666666666667], [72.0, 560.0], [79.0, 1681.0], [78.0, 1969.5], [77.0, 2367.0], [83.0, 493.0], [81.0, 1218.0], [86.0, 478.0], [91.0, 1325.0], [88.0, 1133.5], [95.0, 2180.5], [94.0, 2697.0], [93.0, 1041.6], [92.0, 3664.0], [99.0, 1683.0], [98.0, 1282.5], [103.0, 1406.0], [102.0, 973.0], [100.0, 415.0], [104.0, 968.3333333333334], [111.0, 720.0], [110.0, 1877.8888888888887], [109.0, 1486.0], [108.0, 1120.5], [113.0, 628.0], [119.0, 870.0], [117.0, 895.0], [124.0, 1213.0], [135.0, 4166.0], [134.0, 1844.0], [133.0, 2947.0], [131.0, 984.0], [128.0, 1009.0], [142.0, 523.5], [137.0, 1445.5], [136.0, 2126.0], [151.0, 1977.0], [148.0, 803.0], [147.0, 1165.25], [146.0, 2080.0], [145.0, 675.0], [144.0, 673.0], [159.0, 482.3333333333333], [158.0, 1062.0], [157.0, 742.0], [155.0, 760.0], [166.0, 1072.0], [165.0, 499.0], [164.0, 1314.0], [175.0, 1170.0], [174.0, 374.0], [173.0, 360.0], [170.0, 318.5], [169.0, 280.0], [168.0, 611.0], [177.0, 742.0], [183.0, 413.0], [182.0, 807.0], [181.0, 716.0], [179.0, 1148.0], [178.0, 368.0], [176.0, 1105.0], [189.0, 1979.0], [190.0, 269.0], [188.0, 361.0], [186.0, 1480.0], [185.0, 826.4285714285713], [199.0, 2631.0], [198.0, 2565.0], [197.0, 1093.5], [194.0, 335.0], [205.0, 586.0], [204.0, 838.0], [201.0, 632.0], [214.0, 377.0], [211.0, 1186.6], [208.0, 1394.0], [221.0, 769.0], [218.0, 952.6666666666666], [217.0, 914.0], [227.0, 383.0], [231.0, 907.0], [226.0, 1022.75], [224.0, 705.0], [239.0, 1524.0], [235.0, 693.0], [232.0, 817.0], [246.0, 200.0], [245.0, 889.75], [244.0, 930.0], [254.0, 374.0], [253.0, 963.0], [252.0, 349.0], [251.0, 1313.0], [250.0, 522.3333333333334], [248.0, 1785.5], [271.0, 367.0], [268.0, 849.0], [263.0, 1519.0], [261.0, 518.0], [260.0, 1226.0], [259.0, 841.0], [257.0, 243.0], [276.0, 1053.5], [285.0, 1758.0], [283.0, 994.0], [282.0, 962.25], [279.0, 316.0], [278.0, 446.5], [275.0, 2455.0], [273.0, 883.0], [289.0, 853.4], [292.0, 765.0], [293.0, 854.6666666666667], [294.0, 1807.0], [302.0, 1596.0], [301.0, 1682.0], [296.0, 880.0], [295.0, 675.0], [288.0, 345.0], [290.0, 1003.0], [318.0, 567.3333333333334], [314.0, 748.5], [313.0, 333.0], [312.0, 1059.0], [311.0, 946.5], [308.0, 1458.0], [307.0, 818.5], [306.0, 1756.25], [334.0, 2644.5], [331.0, 2163.0], [333.0, 1767.75], [323.0, 384.0], [322.0, 1057.0], [330.0, 461.0], [329.0, 322.5], [327.0, 1070.0], [326.0, 1623.25], [325.0, 1325.0], [324.0, 1085.5], [349.0, 641.0], [351.0, 500.0], [348.0, 1089.0], [345.0, 637.0], [344.0, 2275.0], [340.0, 2043.0], [339.0, 2560.0], [338.0, 5176.0], [336.0, 1947.0], [366.0, 261.0], [353.0, 2509.0], [360.0, 2601.0], [364.0, 548.3333333333334], [362.0, 350.0], [358.0, 1819.0], [357.0, 1580.0], [356.0, 1064.0], [355.0, 1282.5], [354.0, 1178.5], [377.0, 1273.8], [383.0, 1253.3333333333333], [381.0, 862.5], [378.0, 2539.0], [375.0, 1183.0], [374.0, 730.0], [371.0, 351.0], [369.0, 2001.0], [385.0, 2033.5], [389.0, 1340.6666666666667], [399.0, 2400.0], [397.0, 1855.0], [396.0, 1380.5], [387.0, 374.0], [386.0, 501.0], [395.0, 1572.5], [394.0, 1218.0], [391.0, 870.0], [390.0, 2202.0], [415.0, 1331.0], [413.0, 1119.0], [408.0, 751.0], [407.0, 1257.0], [402.0, 1801.5], [429.0, 624.0], [425.0, 465.0], [423.0, 1122.5], [421.0, 981.0], [418.0, 1462.0], [446.0, 364.0], [447.0, 409.0], [445.0, 388.0], [435.0, 3048.0], [434.0, 544.0], [433.0, 707.5], [432.0, 1210.0], [443.0, 2114.5], [442.0, 1200.3333333333333], [441.0, 400.0], [440.0, 2304.0], [439.0, 449.0], [438.0, 1631.5], [436.0, 1561.0], [454.0, 3177.0], [463.0, 1315.5], [462.0, 1253.0], [461.0, 1056.5], [456.0, 1257.0], [453.0, 1929.3333333333333], [452.0, 1833.0], [477.0, 1103.5], [476.0, 3072.5], [475.0, 6292.0], [474.0, 1623.5], [472.0, 997.4285714285714], [471.0, 1558.0], [469.0, 1712.25], [468.0, 2729.0], [467.0, 988.5], [483.0, 3709.5], [493.0, 3705.333333333333], [495.0, 3416.4444444444443], [492.0, 3517.0], [490.0, 4283.0], [489.0, 2672.5], [487.0, 3508.6666666666665], [486.0, 2354.0], [482.0, 2562.3333333333335], [481.0, 3561.0], [496.0, 2683.0]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[271.9680000000003, 1485.1360000000009]], "isOverall": false, "label": "Gin Gonic Http Call-Aggregated", "isController": false}, {"data": [[2.0, 419.0], [3.0, 620.0], [4.0, 517.0], [5.0, 1114.0], [6.0, 1277.0], [8.0, 747.0], [9.0, 1415.0], [10.0, 423.0], [11.0, 718.0], [12.0, 1246.0], [13.0, 1007.0], [14.0, 1689.0], [15.0, 1730.0], [16.0, 1093.0], [17.0, 1114.0], [18.0, 3047.0], [19.0, 1975.0], [20.0, 1370.0], [21.0, 2466.0], [22.0, 1598.0], [23.0, 1257.0], [24.0, 1218.0], [25.0, 3037.0], [26.0, 2685.0], [27.0, 1361.0], [28.0, 3034.0], [29.0, 2332.0], [30.0, 2195.0], [31.0, 3391.0], [33.0, 4159.0], [32.0, 3215.0], [35.0, 4807.0], [34.0, 5004.0], [37.0, 5139.0], [36.0, 4614.0], [39.0, 5106.0], [38.0, 4566.0], [40.0, 4451.0], [43.0, 4066.0], [42.0, 4717.0], [45.0, 3857.0], [44.0, 3947.0], [47.0, 3216.0], [46.0, 3345.0], [49.0, 2722.0], [48.0, 3430.0], [51.0, 2663.0], [50.0, 2682.0], [53.0, 1613.0], [52.0, 2911.0], [55.0, 1987.0], [54.0, 1430.0], [57.0, 2212.0], [56.0, 2221.0], [59.0, 2294.0], [58.0, 1801.0], [61.0, 2014.0], [60.0, 3895.0], [63.0, 2459.0], [62.0, 1751.0], [67.0, 2523.0], [66.0, 3353.0], [65.0, 4327.0], [64.0, 2009.0], [71.0, 3156.0], [70.0, 3445.0], [69.0, 3149.0], [68.0, 3470.0], [75.0, 2986.0], [74.0, 3067.0], [73.0, 2995.0], [72.0, 2795.0], [79.0, 2447.0], [78.0, 3134.0], [77.0, 2722.0], [76.0, 3395.0], [83.0, 2042.0], [82.0, 3585.0], [81.0, 2396.0], [80.0, 2531.0], [87.0, 1407.0], [86.0, 1837.5], [84.0, 1534.0], [91.0, 1775.0], [90.0, 1821.0], [89.0, 1633.0], [88.0, 1819.0], [95.0, 1395.0], [94.0, 1157.0], [93.0, 1417.0], [92.0, 1659.0], [99.0, 815.0], [98.0, 1035.0], [97.0, 1919.0], [96.0, 986.0], [103.0, 933.0], [102.0, 1703.0], [101.0, 1186.0], [100.0, 1297.0], [107.0, 922.0], [106.0, 1106.0], [105.0, 1072.0], [104.0, 765.0], [111.0, 824.0], [110.0, 588.0], [109.0, 3490.0], [108.0, 870.0], [115.0, 2514.0], [114.0, 617.0], [113.0, 619.0], [112.0, 2776.0], [119.0, 1974.0], [118.0, 1218.0], [117.0, 914.0], [116.0, 2797.0], [122.0, 3833.0], [121.0, 819.0], [120.0, 2100.0], [125.0, 3092.0], [124.0, 2618.0], [135.0, 4010.0], [134.0, 2920.0], [133.0, 3537.0], [132.0, 3496.0], [131.0, 4055.0], [130.0, 4541.0], [129.0, 3704.0], [128.0, 4242.0], [143.0, 1162.0], [142.0, 3258.0], [141.0, 2377.0], [140.0, 2181.0], [139.0, 2789.0], [138.0, 1349.0], [137.0, 3031.0], [136.0, 3365.0], [151.0, 2663.0], [150.0, 2444.0], [149.0, 2015.0], [148.0, 2341.0], [147.0, 2959.0], [146.0, 1352.0], [145.0, 2404.0], [144.0, 3009.0], [159.0, 2919.0], [158.0, 1958.0], [157.0, 1556.0], [156.0, 2666.0], [155.0, 2635.0], [154.0, 2397.0], [153.0, 2790.0], [152.0, 2878.0], [167.0, 2008.0], [166.0, 1941.0], [165.0, 2268.0], [164.0, 1725.0], [163.0, 1683.0], [162.0, 2026.0], [161.0, 2053.0], [160.0, 1608.0], [175.0, 1515.0], [174.0, 2160.0], [173.0, 1704.0], [172.0, 1261.5], [170.0, 1241.0], [169.0, 1940.0], [168.0, 1411.0], [183.0, 943.0], [182.0, 1369.0], [181.0, 2655.0], [180.0, 3213.0], [179.0, 1715.0], [178.0, 2973.0], [177.0, 1458.0], [176.0, 1080.0], [191.0, 2577.0], [190.0, 3412.0], [189.0, 2551.0], [188.0, 2622.0], [187.0, 2772.0], [186.0, 1210.0], [185.0, 1287.0], [184.0, 1220.0], [199.0, 3598.0], [198.0, 3140.0], [197.0, 3313.0], [196.0, 3588.0], [195.0, 4467.0], [194.0, 3305.0], [193.0, 2580.0], [192.0, 3930.0], [207.0, 4443.0], [206.0, 2851.0], [205.0, 2948.0], [204.0, 3021.0], [203.0, 3546.0], [202.0, 3009.0], [201.0, 3368.0], [200.0, 3384.0], [215.0, 2732.0], [214.0, 2848.0], [213.0, 2771.0], [212.0, 2947.0], [211.0, 3114.0], [210.0, 2871.0], [209.0, 3872.0], [208.0, 2645.0], [223.0, 2584.0], [222.0, 2461.0], [221.0, 2769.0], [220.0, 2520.0], [219.0, 2497.0], [218.0, 2629.0], [217.0, 3387.0], [216.0, 2976.0], [231.0, 2581.0], [230.0, 2596.0], [229.0, 2711.0], [228.0, 2561.0], [227.0, 2468.0], [226.0, 3129.0], [225.0, 2408.0], [224.0, 2872.0], [239.0, 3772.0], [238.0, 2977.0], [237.0, 3220.0], [236.0, 2985.0], [235.0, 3066.0], [234.0, 3046.0], [233.0, 2635.0], [232.0, 3269.0], [246.0, 3548.0], [245.0, 3470.0], [244.0, 3142.0], [243.0, 3410.0], [242.0, 3438.0], [241.0, 3345.0], [240.0, 3192.0], [255.0, 3190.0], [254.0, 3598.0], [253.0, 3197.0], [252.0, 3412.0], [251.0, 3214.0], [250.0, 3438.0], [249.0, 3091.0], [248.0, 3309.0], [270.0, 4425.0], [271.0, 4316.0], [269.0, 4964.0], [268.0, 3883.0], [267.0, 3770.0], [266.0, 4071.0], [265.0, 4144.0], [264.0, 3555.0], [263.0, 3665.0], [257.0, 3334.0], [256.0, 3325.0], [259.0, 3217.0], [258.0, 3648.0], [262.0, 3593.0], [261.0, 3607.0], [260.0, 3116.0], [286.0, 4080.0], [287.0, 4249.0], [285.0, 4125.0], [284.0, 4316.0], [283.0, 4467.0], [282.0, 4310.0], [281.0, 3693.0], [280.0, 4124.0], [279.0, 3764.0], [273.0, 4066.0], [272.0, 3571.0], [275.0, 3799.0], [274.0, 4380.0], [278.0, 4815.0], [277.0, 4331.0], [276.0, 4013.0], [303.0, 4924.0], [298.0, 2863.5], [302.0, 4050.0], [301.0, 4224.0], [300.0, 3752.0], [291.0, 4343.0], [290.0, 3991.0], [289.0, 4477.0], [288.0, 4234.0], [299.0, 3814.0], [297.0, 4612.0], [296.0, 4073.0], [295.0, 4440.0], [294.0, 4282.0], [293.0, 4209.0], [292.0, 3774.0], [318.0, 5132.0], [319.0, 5929.0], [317.0, 5448.0], [316.0, 4888.0], [314.0, 5180.0], [313.0, 5249.0], [312.0, 5649.0], [311.0, 5696.0], [305.0, 3907.0], [304.0, 4770.0], [307.0, 5425.0], [306.0, 5494.0], [310.0, 4203.0], [309.0, 5742.0], [308.0, 5374.0], [334.0, 6165.0], [335.0, 6526.0], [333.0, 6057.0], [332.0, 6167.0], [330.0, 5183.0], [329.0, 5315.0], [328.0, 5657.0], [327.0, 5352.0], [321.0, 5464.0], [320.0, 4830.0], [323.0, 7061.0], [322.0, 5218.0], [326.0, 6334.0], [325.0, 5529.0], [324.0, 6031.0], [350.0, 6017.0], [340.0, 3816.0], [343.0, 5696.0], [337.0, 6643.0], [336.0, 5624.0], [339.0, 6612.0], [338.0, 7080.0], [341.0, 6573.0], [351.0, 5802.0], [349.0, 5738.0], [348.0, 5223.0], [347.0, 5880.0], [346.0, 6141.0], [345.0, 6043.0], [344.0, 7133.0], [367.0, 5770.0], [362.0, 3587.5], [366.0, 5355.0], [365.0, 6816.0], [364.0, 6202.0], [355.0, 5743.0], [354.0, 5790.0], [353.0, 5355.0], [352.0, 5625.0], [363.0, 5041.0], [361.0, 4809.0], [360.0, 5784.0], [359.0, 4990.0], [358.0, 5247.0], [357.0, 5825.0], [356.0, 5642.0], [382.0, 6141.0], [383.0, 6247.0], [381.0, 6987.0], [371.0, 6964.0], [370.0, 5762.0], [369.0, 5222.0], [368.0, 5520.0], [379.0, 6241.0], [378.0, 7645.0], [377.0, 6634.5], [375.0, 6292.0], [374.0, 6199.0], [373.0, 7279.0], [372.0, 5515.0], [398.0, 5332.0], [399.0, 7625.0], [397.0, 5108.0], [396.0, 6450.0], [395.0, 5483.0], [394.0, 5279.0], [393.0, 5224.0], [392.0, 5809.0], [391.0, 5838.0], [385.0, 6019.0], [384.0, 6040.0], [387.0, 6664.0], [386.0, 5911.0], [390.0, 5762.0], [389.0, 5536.0], [388.0, 6000.0], [414.0, 6629.0], [415.0, 6737.0], [413.0, 6621.0], [412.0, 7323.0], [411.0, 4820.0], [410.0, 6362.0], [409.0, 5064.0], [408.0, 4955.0], [407.0, 4875.0], [401.0, 5810.0], [400.0, 5779.0], [403.0, 5611.0], [402.0, 5290.0], [406.0, 6566.0], [405.0, 5837.0], [404.0, 5031.0], [430.0, 6076.0], [431.0, 5933.0], [429.0, 5241.0], [428.0, 6266.0], [427.0, 6036.0], [426.0, 5477.0], [425.0, 5664.0], [424.0, 5806.0], [423.0, 6097.0], [416.0, 6294.0], [419.0, 7052.0], [418.0, 6735.5], [422.0, 6064.0], [421.0, 7149.0], [420.0, 6162.0], [446.0, 5368.0], [447.0, 5403.0], [445.0, 5430.0], [444.0, 5342.0], [443.0, 5496.0], [442.0, 5782.0], [441.0, 5828.0], [440.0, 5947.0], [439.0, 6062.0], [433.0, 5827.0], [432.0, 6036.0], [435.0, 5855.0], [434.0, 5786.0], [438.0, 5785.0], [437.0, 6236.0], [436.0, 5903.0], [462.0, 4560.0], [463.0, 3776.0], [461.0, 4165.0], [460.0, 4224.0], [459.0, 4267.0], [458.0, 4257.0], [456.0, 4456.0], [455.0, 4032.0], [449.0, 5203.5], [451.0, 5258.0], [450.0, 5315.0], [454.0, 4921.0], [453.0, 5083.0], [452.0, 5246.0], [478.0, 2253.0], [479.0, 2458.0], [477.0, 2337.0], [476.0, 2497.0], [475.0, 2546.0], [474.0, 2682.0], [473.0, 2628.0], [472.0, 3328.0], [471.0, 3588.0], [464.0, 3811.0], [467.0, 3369.0], [465.0, 3695.0], [470.0, 3372.0], [469.0, 3547.0], [468.0, 3483.0], [494.0, 2704.0], [495.0, 3269.0], [493.0, 3111.0], [492.0, 3257.0], [491.0, 3355.0], [490.0, 2656.0], [489.0, 3083.0], [488.0, 3480.0], [487.0, 3086.0], [481.0, 2666.0], [480.0, 2792.0], [483.0, 2671.0], [482.0, 3456.0], [486.0, 3358.0], [485.0, 2413.5], [497.0, 2203.0], [496.0, 2469.0], [1.0, 860.0]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}, {"data": [[249.54399999999993, 3716.3459999999945]], "isOverall": false, "label": "Spring Boot Http Call-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 497.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1457.4666666666667, "minX": 1.69851828E12, "maxY": 2573699.2333333334, "series": [{"data": [[1.69851828E12, 2573699.2333333334], [1.69851834E12, 1922542.4333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69851828E12, 1942.5333333333333], [1.69851834E12, 1457.4666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851834E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1351.5625, "minX": 1.69851828E12, "maxY": 47490.08000000001, "series": [{"data": [[1.69851828E12, 16142.72666666667], [1.69851834E12, 47490.08000000001]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[1.69851828E12, 1580.284246575342], [1.69851834E12, 1351.5625]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[1.69851828E12, 4848.35849056603], [1.69851834E12, 2439.8212765957446]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851834E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1348.7403846153852, "minX": 1.69851828E12, "maxY": 47486.935000000005, "series": [{"data": [[1.69851828E12, 16139.813333333339], [1.69851834E12, 47486.935000000005]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[1.69851828E12, 1577.503424657533], [1.69851834E12, 1348.7403846153852]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[1.69851828E12, 4845.68301886792], [1.69851834E12, 2436.940425531914]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851834E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.9063829787234042, "minX": 1.69851828E12, "maxY": 4.603333333333335, "series": [{"data": [[1.69851828E12, 4.603333333333335], [1.69851834E12, 0.9700000000000001]], "isOverall": false, "label": "Express Js Http Call", "isController": false}, {"data": [[1.69851828E12, 1.006849315068492], [1.69851834E12, 0.932692307692308]], "isOverall": false, "label": "Gin Gonic Http Call", "isController": false}, {"data": [[1.69851828E12, 1.0377358490566042], [1.69851834E12, 0.9063829787234042]], "isOverall": false, "label": "Spring Boot Http Call", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851834E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 131.0, "minX": 1.69851828E12, "maxY": 62606.0, "series": [{"data": [[1.69851828E12, 33378.0], [1.69851834E12, 62606.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69851828E12, 24985.400000000005], [1.69851834E12, 52118.4]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69851828E12, 32807.47999999998], [1.69851834E12, 61507.96]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69851828E12, 29293.899999999994], [1.69851834E12, 56551.8]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69851828E12, 200.0], [1.69851834E12, 131.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69851828E12, 4234.0], [1.69851834E12, 2684.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851834E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1501.5, "minX": 2.0, "maxY": 5921.0, "series": [{"data": [[33.0, 5282.0], [32.0, 3762.0], [2.0, 2460.0], [34.0, 3449.5], [5.0, 2721.0], [7.0, 2653.5], [8.0, 4048.0], [9.0, 3345.0], [10.0, 2489.0], [12.0, 3902.0], [15.0, 2809.5], [16.0, 3274.5], [17.0, 2377.0], [18.0, 5921.0], [19.0, 2697.5], [20.0, 5132.0], [21.0, 3580.0], [22.0, 3988.0], [23.0, 1501.5], [24.0, 3319.0], [25.0, 2563.0], [26.0, 1960.0], [27.0, 5335.0], [28.0, 5047.5], [29.0, 3353.0], [30.0, 3412.0], [31.0, 2477.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 34.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1499.0, "minX": 2.0, "maxY": 5919.0, "series": [{"data": [[33.0, 5279.0], [32.0, 3758.0], [2.0, 2458.0], [34.0, 3447.0], [5.0, 2717.0], [7.0, 2651.0], [8.0, 4045.5], [9.0, 3343.0], [10.0, 2485.0], [12.0, 3899.5], [15.0, 2807.5], [16.0, 3271.5], [17.0, 2375.0], [18.0, 5919.0], [19.0, 2693.0], [20.0, 5129.0], [21.0, 3577.5], [22.0, 3985.5], [23.0, 1499.0], [24.0, 3316.0], [25.0, 2560.5], [26.0, 1958.0], [27.0, 5333.0], [28.0, 5045.5], [29.0, 3350.0], [30.0, 3409.0], [31.0, 2474.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 34.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.8, "minX": 1.69851828E12, "maxY": 18.2, "series": [{"data": [[1.69851828E12, 18.2], [1.69851834E12, 6.8]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851834E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 10.716666666666667, "minX": 1.69851828E12, "maxY": 14.283333333333333, "series": [{"data": [[1.69851828E12, 14.283333333333333], [1.69851834E12, 10.716666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69851834E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.3333333333333335, "minX": 1.69851828E12, "maxY": 5.0, "series": [{"data": [[1.69851828E12, 4.866666666666666], [1.69851834E12, 3.466666666666667]], "isOverall": false, "label": "Gin Gonic Http Call-success", "isController": false}, {"data": [[1.69851828E12, 4.416666666666667], [1.69851834E12, 3.9166666666666665]], "isOverall": false, "label": "Spring Boot Http Call-success", "isController": false}, {"data": [[1.69851828E12, 5.0], [1.69851834E12, 3.3333333333333335]], "isOverall": false, "label": "Express Js Http Call-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851834E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 10.716666666666667, "minX": 1.69851828E12, "maxY": 14.283333333333333, "series": [{"data": [[1.69851828E12, 14.283333333333333], [1.69851834E12, 10.716666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69851834E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

